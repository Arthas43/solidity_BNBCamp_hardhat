{"id":"8639f79cbf1f7926f6fdb1e2d58215b5","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/Sahara.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract Sahara is Initializable {\n    \n     uint256 private value;\n\n    //初始化函数\n    function initialize(uint256 _initValue) public initializer {\n        value = _initValue;\n    }\n\n    // Emitted when the stored value changes\n    event ValueChanged(uint256 newValue);\n\n    // Stores a new value in the contract\n    function setValue(uint256 newValue) public {\n        value = newValue;\n        emit ValueChanged(newValue);\n    }\n\n    // Reads the last value\n    function retrieve() public view returns (uint256) {\n        return value;\n    }\n}"},"contracts/SaharaV2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./Sahara.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract SaharaV2 is Sahara {\n    \n    //增加一个可以自增的函数\n    function increment() public {\n        setValue(retrieve()+1);\n    }\n\n    //增加一个自减的函数\n    function reduce() public {\n        setValue(retrieve()-1);\n    }\n}"},"contracts/SaharaV3.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SaharaV2.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract SaharaV3 is SaharaV2 {\n    \n    //增加一个name 变量 并且可以修改\n    string public name;\n\n    event NameChanged(string name);\n    function setName(string memory _name) public {\n        name = _name;\n        emit NameChanged(name);\n    }\n}"},"contracts/SaharaV4.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./SaharaV2.sol\";\n\ncontract SaharaV4 is SaharaV2{\n    string private name;\n\n    event NameChanged(string name);\n    function setName(string memory _name) public {\n        name = _name;\n        emit NameChanged(name);\n    }\n\n   function getName() public view returns(string memory){\n      return string(abi.encodePacked(\"Name: \",name));\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[452],"Initializable":[168]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":169,"sourceUnit":453,"src":"138:44:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"184:2198:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"Initializable","nameLocation":"2401:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"2421:109:0","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:0","nodeType":"VariableDeclaration","scope":168,"src":"2535:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"2568:91:0","text":" @dev Indicates that the contract is in the process of being initialized."},"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:0","nodeType":"VariableDeclaration","scope":168,"src":"2664:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"2697:90:0","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":14,"name":"Initialized","nameLocation":"2798:11:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:0","nodeType":"VariableDeclaration","scope":14,"src":"2810:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:0"},"src":"2792:33:0"},{"body":{"id":69,"nodeType":"Block","src":"3258:483:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:0","nodeType":"VariableDeclaration","scope":69,"src":"3268:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":21,"initialValue":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:0","subExpression":{"id":19,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3291:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":23,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3336:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":24,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3354:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":28,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:0","subExpression":{"arguments":[{"arguments":[{"id":33,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":29,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3377:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$452_$","typeString":"type(library AddressUpgradeable)"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":186,"src":"3377:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":37,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3425:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":41,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":22,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"3314:201:0"},{"expression":{"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":46,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3525:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":49,"nodeType":"ExpressionStatement","src":"3525:16:0"},{"condition":{"id":50,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3555:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":56,"nodeType":"IfStatement","src":"3551:65:0","trueBody":{"id":55,"nodeType":"Block","src":"3571:45:0","statements":[{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":51,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3585:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":54,"nodeType":"ExpressionStatement","src":"3585:20:0"}]}},{"id":57,"nodeType":"PlaceholderStatement","src":"3625:1:0"},{"condition":{"id":58,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3640:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":68,"nodeType":"IfStatement","src":"3636:99:0","trueBody":{"id":67,"nodeType":"Block","src":"3656:79:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3670:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62,"nodeType":"ExpressionStatement","src":"3670:21:0"},{"eventCall":{"arguments":[{"hexValue":"31","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":63,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3710:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"EmitStatement","src":"3705:19:0"}]}}]},"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"2831:399:0","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":70,"name":"initializer","nameLocation":"3244:11:0","nodeType":"ModifierDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"3255:2:0"},"src":"3235:506:0","virtual":false,"visibility":"internal"},{"body":{"id":102,"nodeType":"Block","src":"4852:255:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:0","subExpression":{"id":76,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4871:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4888:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":79,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":75,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"4862:99:0"},{"expression":{"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":85,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4971:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":86,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4986:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":88,"nodeType":"ExpressionStatement","src":"4971:22:0"},{"expression":{"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":89,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5003:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":90,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":92,"nodeType":"ExpressionStatement","src":"5003:20:0"},{"id":93,"nodeType":"PlaceholderStatement","src":"5033:1:0"},{"expression":{"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":94,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5044:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97,"nodeType":"ExpressionStatement","src":"5044:21:0"},{"eventCall":{"arguments":[{"id":99,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"5092:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":98,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5080:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"5075:25:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3747:1062:0","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":103,"name":"reinitializer","nameLocation":"4823:13:0","nodeType":"ModifierDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"version","nameLocation":"4843:7:0","nodeType":"VariableDeclaration","scope":103,"src":"4837:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":72,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:0"},"src":"4814:293:0","virtual":false,"visibility":"internal"},{"body":{"id":112,"nodeType":"Block","src":"5345:97:0","statements":[{"expression":{"arguments":[{"id":107,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5363:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"5355:69:0"},{"id":111,"nodeType":"PlaceholderStatement","src":"5434:1:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"5113:199:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":113,"name":"onlyInitializing","nameLocation":"5326:16:0","nodeType":"ModifierDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"5342:2:0"},"src":"5317:125:0","virtual":false,"visibility":"internal"},{"body":{"id":148,"nodeType":"Block","src":"5977:230:0","statements":[{"expression":{"arguments":[{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:0","subExpression":{"id":118,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5996:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"5987:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6067:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":125,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:0","memberName":"max","nodeType":"MemberAccess","src":"6082:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":147,"nodeType":"IfStatement","src":"6063:138:0","trueBody":{"id":146,"nodeType":"Block","src":"6099:102:0","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6113:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:0","memberName":"max","nodeType":"MemberAccess","src":"6128:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":137,"nodeType":"ExpressionStatement","src":"6113:30:0"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:0","memberName":"max","nodeType":"MemberAccess","src":"6174:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":138,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6162:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"EmitStatement","src":"6157:33:0"}]}}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"5448:475:0","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":149,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:0","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"5977:0:0"},"scope":168,"src":"5928:279:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":157,"nodeType":"Block","src":"6381:36:0","statements":[{"expression":{"id":155,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6398:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":154,"id":156,"nodeType":"Return","src":"6391:19:0"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"6213:99:0","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6326:22:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"6348:2:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"6374:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":152,"name":"uint8","nodeType":"ElementaryTypeName","src":"6374:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6373:7:0"},"scope":168,"src":"6317:100:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"6589:37:0","statements":[{"expression":{"id":164,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"6606:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"6599:20:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"6423:105:0","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6542:15:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"6557:2:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"6583:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"6583:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6582:6:0"},"scope":168,"src":"6533:93:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":169,"src":"2383:4245:0","usedErrors":[]}],"src":"113:6516:0"},"id":0},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[452]},"id":453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"126:67:1","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":452,"linearizedBaseContracts":[452],"name":"AddressUpgradeable","nameLocation":"202:18:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":185,"nodeType":"Block","src":"1252:254:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":179,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1476:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:1","memberName":"code","nodeType":"MemberAccess","src":"1476:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:1","memberName":"length","nodeType":"MemberAccess","src":"1476:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":178,"id":184,"nodeType":"Return","src":"1469:30:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"227:954:1","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":186,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:1","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"account","nameLocation":"1214:7:1","nodeType":"VariableDeclaration","scope":186,"src":"1206:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"1246:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:1"},"scope":452,"src":"1186:320:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":219,"nodeType":"Block","src":"2494:241:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":197,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$452","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$452","typeString":"library AddressUpgradeable"}],"id":196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:1","typeDescriptions":{}}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:1","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2537:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2504:73:1"},{"assignments":[206,null],"declarations":[{"constant":false,"id":206,"mutability":"mutable","name":"success","nameLocation":"2594:7:1","nodeType":"VariableDeclaration","scope":219,"src":"2589:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":205,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":213,"initialValue":{"arguments":[{"hexValue":"","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":207,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2607:9:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:1","memberName":"call","nodeType":"MemberAccess","src":"2607:14:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2629:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:1"},{"expression":{"arguments":[{"id":215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"2658:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"ExpressionStatement","src":"2650:78:1"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1512:906:1","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":220,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:1","nodeType":"VariableDeclaration","scope":220,"src":"2442:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"amount","nameLocation":"2477:6:1","nodeType":"VariableDeclaration","scope":220,"src":"2469:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2494:0:1"},"scope":452,"src":"2423:312:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"3566:96:1","statements":[{"expression":{"arguments":[{"id":231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3605:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":232,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"3613:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":230,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[278,322],"referencedDeclaration":322,"src":"3583:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":229,"id":236,"nodeType":"Return","src":"3576:79:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2741:731:1","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:1","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"target","nameLocation":"3507:6:1","nodeType":"VariableDeclaration","scope":238,"src":"3499:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"data","nameLocation":"3528:4:1","nodeType":"VariableDeclaration","scope":238,"src":"3515:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:1"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"3552:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":227,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:1"},"scope":452,"src":"3477:185:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":257,"nodeType":"Block","src":"4031:76:1","statements":[{"expression":{"arguments":[{"id":251,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4070:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":252,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"4078:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":254,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"4087:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":250,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[278,322],"referencedDeclaration":322,"src":"4048:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":249,"id":256,"nodeType":"Return","src":"4041:59:1"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"3668:211:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":258,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"target","nameLocation":"3923:6:1","nodeType":"VariableDeclaration","scope":258,"src":"3915:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"data","nameLocation":"3952:4:1","nodeType":"VariableDeclaration","scope":258,"src":"3939:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":242,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:1","nodeType":"VariableDeclaration","scope":258,"src":"3966:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":244,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"4017:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":247,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:1"},"scope":452,"src":"3884:223:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":277,"nodeType":"Block","src":"4612:111:1","statements":[{"expression":{"arguments":[{"id":271,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4651:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4659:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"4665:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":270,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[278,322],"referencedDeclaration":322,"src":"4629:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":269,"id":276,"nodeType":"Return","src":"4622:94:1"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"4113:351:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:1","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"target","nameLocation":"4517:6:1","nodeType":"VariableDeclaration","scope":278,"src":"4509:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"data","nameLocation":"4546:4:1","nodeType":"VariableDeclaration","scope":278,"src":"4533:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"value","nameLocation":"4568:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"4598:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:1"},"scope":452,"src":"4469:254:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":321,"nodeType":"Block","src":"5150:267:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$452","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$452","typeString":"library AddressUpgradeable"}],"id":294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:1","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"5193:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5160:81:1"},{"assignments":[304,306],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"success","nameLocation":"5257:7:1","nodeType":"VariableDeclaration","scope":321,"src":"5252:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":303,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:1","nodeType":"VariableDeclaration","scope":321,"src":"5266:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":305,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":313,"initialValue":{"arguments":[{"id":311,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5319:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":307,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5293:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:1","memberName":"call","nodeType":"MemberAccess","src":"5293:11:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"5312:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:1"},{"expression":{"arguments":[{"id":315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"5368:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":316,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"5376:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":317,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5385:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":318,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5397:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":314,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"5341:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":291,"id":320,"nodeType":"Return","src":"5334:76:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"4729:237:1","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":322,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:1","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"target","nameLocation":"5019:6:1","nodeType":"VariableDeclaration","scope":322,"src":"5011:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"data","nameLocation":"5048:4:1","nodeType":"VariableDeclaration","scope":322,"src":"5035:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":282,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"value","nameLocation":"5070:5:1","nodeType":"VariableDeclaration","scope":322,"src":"5062:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:1","nodeType":"VariableDeclaration","scope":322,"src":"5085:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":286,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"5136:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:1"},"scope":452,"src":"4971:446:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":338,"nodeType":"Block","src":"5694:97:1","statements":[{"expression":{"arguments":[{"id":333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"5730:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":334,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"5738:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":332,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[339,368],"referencedDeclaration":368,"src":"5711:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":331,"id":337,"nodeType":"Return","src":"5704:80:1"}]},"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"5423:166:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":339,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:1","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"target","nameLocation":"5630:6:1","nodeType":"VariableDeclaration","scope":339,"src":"5622:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"data","nameLocation":"5651:4:1","nodeType":"VariableDeclaration","scope":339,"src":"5638:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":326,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:1"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"5680:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":329,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:1"},"scope":452,"src":"5594:197:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":367,"nodeType":"Block","src":"6133:168:1","statements":[{"assignments":[352,354],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"success","nameLocation":"6149:7:1","nodeType":"VariableDeclaration","scope":367,"src":"6144:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":351,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:1","nodeType":"VariableDeclaration","scope":367,"src":"6158:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":353,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":359,"initialValue":{"arguments":[{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6203:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":355,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"6185:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:1","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:1"},{"expression":{"arguments":[{"id":361,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"6252:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6260:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":363,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6269:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":364,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6281:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":360,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"6225:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":350,"id":366,"nodeType":"Return","src":"6218:76:1"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"5797:173:1","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":368,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"target","nameLocation":"6020:6:1","nodeType":"VariableDeclaration","scope":368,"src":"6012:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"data","nameLocation":"6049:4:1","nodeType":"VariableDeclaration","scope":368,"src":"6036:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":343,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:1","nodeType":"VariableDeclaration","scope":368,"src":"6063:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":345,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"6119:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":348,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:1"},"scope":452,"src":"5975:326:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"6783:434:1","statements":[{"condition":{"id":382,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"6797:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":404,"nodeType":"Block","src":"7153:58:1","statements":[{"expression":{"arguments":[{"id":400,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"7175:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":401,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"7187:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":399,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"7167:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"7167:33:1"}]},"id":405,"nodeType":"IfStatement","src":"6793:418:1","trueBody":{"id":398,"nodeType":"Block","src":"6806:341:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":383,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"6824:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:1","memberName":"length","nodeType":"MemberAccess","src":"6824:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":395,"nodeType":"IfStatement","src":"6820:286:1","trueBody":{"id":394,"nodeType":"Block","src":"6848:258:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":389,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"7050:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":388,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"7039:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"7031:60:1"}]}},{"expression":{"id":396,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"7126:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":381,"id":397,"nodeType":"Return","src":"7119:17:1"}]}}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"6307:277:1","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:1","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"target","nameLocation":"6642:6:1","nodeType":"VariableDeclaration","scope":407,"src":"6634:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"success","nameLocation":"6663:7:1","nodeType":"VariableDeclaration","scope":407,"src":"6658:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:1","nodeType":"VariableDeclaration","scope":407,"src":"6680:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":374,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:1","nodeType":"VariableDeclaration","scope":407,"src":"6713:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"6769:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":379,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:1"},"scope":452,"src":"6589:628:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"7598:135:1","statements":[{"condition":{"id":419,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"7612:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"7669:58:1","statements":[{"expression":{"arguments":[{"id":424,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7691:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":425,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"7703:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":423,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"7683:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"7683:33:1"}]},"id":429,"nodeType":"IfStatement","src":"7608:119:1","trueBody":{"id":422,"nodeType":"Block","src":"7621:42:1","statements":[{"expression":{"id":420,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7642:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":418,"id":421,"nodeType":"Return","src":"7635:17:1"}]}}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"7223:210:1","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":431,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"success","nameLocation":"7478:7:1","nodeType":"VariableDeclaration","scope":431,"src":"7473:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:1","nodeType":"VariableDeclaration","scope":431,"src":"7495:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:1","nodeType":"VariableDeclaration","scope":431,"src":"7528:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:1"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":431,"src":"7584:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":416,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:1"},"scope":452,"src":"7438:295:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"7822:457:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":438,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7898:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:1","memberName":"length","nodeType":"MemberAccess","src":"7898:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":448,"nodeType":"Block","src":"8228:45:1","statements":[{"expression":{"arguments":[{"id":445,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"8249:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":444,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"8242:20:1"}]},"id":449,"nodeType":"IfStatement","src":"7894:379:1","trueBody":{"id":443,"nodeType":"Block","src":"7921:301:1","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:1","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:1","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:1"},"nodeType":"YulFunctionCall","src":"8120:17:1"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:1","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:1"},"nodeType":"YulFunctionCall","src":"8161:19:1"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:1"},"nodeType":"YulFunctionCall","src":"8154:44:1"},"nodeType":"YulExpressionStatement","src":"8154:44:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":433,"isOffset":false,"isSlot":false,"src":"8126:10:1","valueSize":1},{"declaration":433,"isOffset":false,"isSlot":false,"src":"8169:10:1","valueSize":1}],"id":442,"nodeType":"InlineAssembly","src":"8070:142:1"}]}}]},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:1","nodeType":"FunctionDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:1","nodeType":"VariableDeclaration","scope":451,"src":"7756:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":432,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:1","nodeType":"VariableDeclaration","scope":451,"src":"7781:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":434,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:1"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"7822:0:1"},"scope":452,"src":"7739:540:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":453,"src":"194:8087:1","usedErrors":[]}],"src":"101:8181:1"},"id":1},"contracts/Sahara.sol":{"ast":{"absolutePath":"contracts/Sahara.sol","exportedSymbols":{"AddressUpgradeable":[452],"Initializable":[168],"Sahara":[499]},"id":500,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":454,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":500,"sourceUnit":169,"src":"58:75:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":457,"name":"Initializable","nameLocations":["383:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"383:13:2"},"id":458,"nodeType":"InheritanceSpecifier","src":"383:13:2"}],"canonicalName":"Sahara","contractDependencies":[],"contractKind":"contract","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"135:228:2","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":499,"linearizedBaseContracts":[499,168],"name":"Sahara","nameLocation":"373:6:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":460,"mutability":"mutable","name":"value","nameLocation":"425:5:2","nodeType":"VariableDeclaration","scope":499,"src":"409:21:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":471,"nodeType":"Block","src":"518:35:2","statements":[{"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"528:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":468,"name":"_initValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"536:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"528:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":470,"nodeType":"ExpressionStatement","src":"528:18:2"}]},"functionSelector":"fe4b84df","id":472,"implemented":true,"kind":"function","modifiers":[{"id":465,"kind":"modifierInvocation","modifierName":{"id":464,"name":"initializer","nameLocations":["506:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"506:11:2"},"nodeType":"ModifierInvocation","src":"506:11:2"}],"name":"initialize","nameLocation":"468:10:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"_initValue","nameLocation":"487:10:2","nodeType":"VariableDeclaration","scope":472,"src":"479:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:20:2"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"518:0:2"},"scope":499,"src":"459:94:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59","id":476,"name":"ValueChanged","nameLocation":"610:12:2","nodeType":"EventDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"631:8:2","nodeType":"VariableDeclaration","scope":476,"src":"623:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:18:2"},"src":"604:37:2"},{"body":{"id":489,"nodeType":"Block","src":"732:70:2","statements":[{"expression":{"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"742:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":482,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"750:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"742:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":484,"nodeType":"ExpressionStatement","src":"742:16:2"},{"eventCall":{"arguments":[{"id":486,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"786:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":485,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"773:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"773:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"EmitStatement","src":"768:27:2"}]},"functionSelector":"55241077","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setValue","nameLocation":"698:8:2","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"newValue","nameLocation":"715:8:2","nodeType":"VariableDeclaration","scope":490,"src":"707:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"706:18:2"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"732:0:2"},"scope":499,"src":"689:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":497,"nodeType":"Block","src":"886:29:2","statements":[{"expression":{"id":495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"903:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":496,"nodeType":"Return","src":"896:12:2"}]},"functionSelector":"2e64cec1","id":498,"implemented":true,"kind":"function","modifiers":[],"name":"retrieve","nameLocation":"845:8:2","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"853:2:2"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"877:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"876:9:2"},"scope":499,"src":"836:79:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":500,"src":"364:553:2","usedErrors":[]}],"src":"33:884:2"},"id":2},"contracts/SaharaV2.sol":{"ast":{"absolutePath":"contracts/SaharaV2.sol","exportedSymbols":{"AddressUpgradeable":[452],"Initializable":[168],"Sahara":[499],"SaharaV2":[528]},"id":529,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":501,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"contracts/Sahara.sol","file":"./Sahara.sol","id":502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":529,"sourceUnit":500,"src":"58:22:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":504,"name":"Sahara","nameLocations":["332:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":499,"src":"332:6:3"},"id":505,"nodeType":"InheritanceSpecifier","src":"332:6:3"}],"canonicalName":"SaharaV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"82:228:3","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":528,"linearizedBaseContracts":[528,499,168],"name":"SaharaV2","nameLocation":"320:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":515,"nodeType":"Block","src":"418:39:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":509,"name":"retrieve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"437:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"437:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"437:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":508,"name":"setValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"428:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"428:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"428:22:3"}]},"functionSelector":"d09de08a","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"399:9:3","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"408:2:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"418:0:3"},"scope":528,"src":"390:67:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":526,"nodeType":"Block","src":"522:39:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"retrieve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"541:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"541:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"541:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":519,"name":"setValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"532:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"532:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"532:22:3"}]},"functionSelector":"45219b0e","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"reduce","nameLocation":"506:6:3","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"512:2:3"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"522:0:3"},"scope":528,"src":"497:64:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":529,"src":"311:252:3","usedErrors":[]}],"src":"33:530:3"},"id":3},"contracts/SaharaV3.sol":{"ast":{"absolutePath":"contracts/SaharaV3.sol","exportedSymbols":{"AddressUpgradeable":[452],"Initializable":[168],"Sahara":[499],"SaharaV2":[528],"SaharaV3":[555]},"id":556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":530,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"contracts/SaharaV2.sol","file":"./SaharaV2.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":556,"sourceUnit":529,"src":"58:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":533,"name":"SaharaV2","nameLocations":["334:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":528,"src":"334:8:4"},"id":534,"nodeType":"InheritanceSpecifier","src":"334:8:4"}],"canonicalName":"SaharaV3","contractDependencies":[],"contractKind":"contract","documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"84:228:4","text":" @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."},"fullyImplemented":true,"id":555,"linearizedBaseContracts":[555,528,499,168],"name":"SaharaV3","nameLocation":"322:8:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":536,"mutability":"mutable","name":"name","nameLocation":"417:4:4","nodeType":"VariableDeclaration","scope":555,"src":"403:18:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"403:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"anonymous":false,"eventSelector":"4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc","id":540,"name":"NameChanged","nameLocation":"434:11:4","nodeType":"EventDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"453:4:4","nodeType":"VariableDeclaration","scope":540,"src":"446:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"446:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"445:13:4"},"src":"428:31:4"},{"body":{"id":553,"nodeType":"Block","src":"509:61:4","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"519:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":546,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"526:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"519:12:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":548,"nodeType":"ExpressionStatement","src":"519:12:4"},{"eventCall":{"arguments":[{"id":550,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"558:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":549,"name":"NameChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"546:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"546:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"EmitStatement","src":"541:22:4"}]},"functionSelector":"c47f0027","id":554,"implemented":true,"kind":"function","modifiers":[],"name":"setName","nameLocation":"473:7:4","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"_name","nameLocation":"495:5:4","nodeType":"VariableDeclaration","scope":554,"src":"481:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":541,"name":"string","nodeType":"ElementaryTypeName","src":"481:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"480:21:4"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"509:0:4"},"scope":555,"src":"464:106:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":556,"src":"313:259:4","usedErrors":[]}],"src":"33:539:4"},"id":4},"contracts/SaharaV4.sol":{"ast":{"absolutePath":"contracts/SaharaV4.sol","exportedSymbols":{"AddressUpgradeable":[452],"Initializable":[168],"Sahara":[499],"SaharaV2":[528],"SaharaV4":[596]},"id":597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":557,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"contracts/SaharaV2.sol","file":"./SaharaV2.sol","id":558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":597,"sourceUnit":529,"src":"57:24:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":559,"name":"SaharaV2","nameLocations":["104:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":528,"src":"104:8:5"},"id":560,"nodeType":"InheritanceSpecifier","src":"104:8:5"}],"canonicalName":"SaharaV4","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":596,"linearizedBaseContracts":[596,528,499,168],"name":"SaharaV4","nameLocation":"92:8:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":562,"mutability":"mutable","name":"name","nameLocation":"133:4:5","nodeType":"VariableDeclaration","scope":596,"src":"118:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"118:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc","id":566,"name":"NameChanged","nameLocation":"150:11:5","nodeType":"EventDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"169:4:5","nodeType":"VariableDeclaration","scope":566,"src":"162:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":563,"name":"string","nodeType":"ElementaryTypeName","src":"162:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"161:13:5"},"src":"144:31:5"},{"body":{"id":579,"nodeType":"Block","src":"225:61:5","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":571,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"235:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":572,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"242:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"235:12:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":574,"nodeType":"ExpressionStatement","src":"235:12:5"},{"eventCall":{"arguments":[{"id":576,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"274:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":575,"name":"NameChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"262:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"262:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"EmitStatement","src":"257:22:5"}]},"functionSelector":"c47f0027","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"setName","nameLocation":"189:7:5","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"_name","nameLocation":"211:5:5","nodeType":"VariableDeclaration","scope":580,"src":"197:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":567,"name":"string","nodeType":"ElementaryTypeName","src":"197:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"196:21:5"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"225:0:5"},"scope":596,"src":"180:106:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":594,"nodeType":"Block","src":"344:61:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"4e616d653a20","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:8:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8","typeString":"literal_string \"Name: \""},"value":"Name: "},{"id":590,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"392:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8","typeString":"literal_string \"Name: \""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":587,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"366:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"370:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"366:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"366:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"359:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:5","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"359:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":584,"id":593,"nodeType":"Return","src":"352:46:5"}]},"functionSelector":"17d7de7c","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"getName","nameLocation":"300:7:5","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"307:2:5"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"330:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":582,"name":"string","nodeType":"ElementaryTypeName","src":"330:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"329:15:5"},"scope":596,"src":"291:114:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":597,"src":"83:324:5","usedErrors":[]}],"src":"32:375:5"},"id":5}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cc246811736d73c6b125396799936bb483a2aba2bc1dd3412e8034fd27b290564736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC2 CHAINID DUP2 OR CALLDATASIZE 0xD7 EXTCODECOPY PUSH12 0x125396799936BB483A2ABA2B 0xC1 0xDD CALLVALUE SLT 0xE8 SUB 0x4F 0xD2 PUSH28 0x290564736F6C63430008120033000000000000000000000000000000 ","sourceMap":"194:8087:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cc246811736d73c6b125396799936bb483a2aba2bc1dd3412e8034fd27b290564736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC2 CHAINID DUP2 OR CALLDATASIZE 0xD7 EXTCODECOPY PUSH12 0x125396799936BB483A2ABA2B 0xC1 0xDD CALLVALUE SLT 0xE8 SUB 0x4F 0xD2 PUSH28 0x290564736F6C63430008120033000000000000000000000000000000 ","sourceMap":"194:8087:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Sahara.sol":{"Sahara":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[{"internalType":"uint256","name":"_initValue","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610420806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec1146100465780635524107714610064578063fe4b84df14610080575b600080fd5b61004e61009c565b60405161005b9190610261565b60405180910390f35b61007e600480360381019061007991906102ad565b6100a6565b005b61009a600480360381019061009591906102ad565b6100e7565b005b6000600154905090565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100dc9190610261565b60405180910390a150565b60008060019054906101000a900460ff161590508080156101185750600160008054906101000a900460ff1660ff16105b80610145575061012730610225565b1580156101445750600160008054906101000a900460ff1660ff16145b5b610184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017b9061035d565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156101c1576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156102215760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161021891906103cf565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b61025b81610248565b82525050565b60006020820190506102766000830184610252565b92915050565b600080fd5b61028a81610248565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b6000602082840312156102c3576102c261027c565b5b60006102d184828501610298565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610347602e836102da565b9150610352826102eb565b604082019050919050565b600060208201905081810360008301526103768161033a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006103b96103b46103af8461037d565b610394565b610387565b9050919050565b6103c98161039e565b82525050565b60006020820190506103e460008301846103c0565b9291505056fea2646970667358221220a7991660f3cb8777e9755b4e14d9c7cf3cf09ef860e55b78ae852cf82b541b8d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x420 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x118 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x145 JUMPI POP PUSH2 0x127 ADDRESS PUSH2 0x225 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x248 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x252 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A DUP2 PUSH2 0x248 JUMP JUMPDEST DUP2 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A7 DUP2 PUSH2 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1 DUP5 DUP3 DUP6 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 PUSH1 0x2E DUP4 PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP PUSH2 0x352 DUP3 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x376 DUP2 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 PUSH2 0x3B4 PUSH2 0x3AF DUP5 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9 DUP2 PUSH2 0x39E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SWAP10 AND PUSH1 0xF3 0xCB DUP8 PUSH24 0xE9755B4E14D9C7CF3CF09EF860E55B78AE852CF82B541B8D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"364:553:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@initialize_472":{"entryPoint":231,"id":472,"parameterSlots":1,"returnSlots":0},"@isContract_186":{"entryPoint":549,"id":186,"parameterSlots":1,"returnSlots":1},"@retrieve_498":{"entryPoint":156,"id":498,"parameterSlots":0,"returnSlots":1},"@setValue_490":{"entryPoint":166,"id":490,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":594,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":609,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":730,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":893,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":903,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":926,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":916,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":636,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":747,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":641,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3383:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:6","statements":[{"nodeType":"YulAssignment","src":"62:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:77:6"},{"body":{"nodeType":"YulBlock","src":"155:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:6"},"nodeType":"YulFunctionCall","src":"177:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:6"},"nodeType":"YulFunctionCall","src":"165:37:6"},"nodeType":"YulExpressionStatement","src":"165:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:6","type":""}],"src":"90:118:6"},{"body":{"nodeType":"YulBlock","src":"312:124:6","statements":[{"nodeType":"YulAssignment","src":"322:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:6"},"nodeType":"YulFunctionCall","src":"411:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:6"},"nodeType":"YulFunctionCall","src":"358:71:6"},"nodeType":"YulExpressionStatement","src":"358:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:6","type":""}],"src":"214:222:6"},{"body":{"nodeType":"YulBlock","src":"482:35:6","statements":[{"nodeType":"YulAssignment","src":"492:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:6"},"nodeType":"YulFunctionCall","src":"502:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:6","type":""}],"src":"442:75:6"},{"body":{"nodeType":"YulBlock","src":"612:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:6"},"nodeType":"YulFunctionCall","src":"622:12:6"},"nodeType":"YulExpressionStatement","src":"622:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:6"},{"body":{"nodeType":"YulBlock","src":"735:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:12:6"},"nodeType":"YulExpressionStatement","src":"745:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:6"},{"body":{"nodeType":"YulBlock","src":"812:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:6"},"nodeType":"YulFunctionCall","src":"871:12:6"},"nodeType":"YulExpressionStatement","src":"871:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:6"},"nodeType":"YulFunctionCall","src":"842:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:6"},"nodeType":"YulFunctionCall","src":"832:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:6"},"nodeType":"YulFunctionCall","src":"825:43:6"},"nodeType":"YulIf","src":"822:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:6","type":""}],"src":"769:122:6"},{"body":{"nodeType":"YulBlock","src":"949:87:6","statements":[{"nodeType":"YulAssignment","src":"959:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:6"},"nodeType":"YulFunctionCall","src":"968:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:6"},"nodeType":"YulFunctionCall","src":"997:33:6"},"nodeType":"YulExpressionStatement","src":"997:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:6","type":""}],"src":"897:139:6"},{"body":{"nodeType":"YulBlock","src":"1108:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:6"},"nodeType":"YulFunctionCall","src":"1156:79:6"},"nodeType":"YulExpressionStatement","src":"1156:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:6"},"nodeType":"YulFunctionCall","src":"1125:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:6"},"nodeType":"YulFunctionCall","src":"1121:32:6"},"nodeType":"YulIf","src":"1118:119:6"},{"nodeType":"YulBlock","src":"1247:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:6"},"nodeType":"YulFunctionCall","src":"1322:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:6"},"nodeType":"YulFunctionCall","src":"1301:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:6","type":""}],"src":"1042:329:6"},{"body":{"nodeType":"YulBlock","src":"1473:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1490:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"1495:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1483:6:6"},"nodeType":"YulFunctionCall","src":"1483:19:6"},"nodeType":"YulExpressionStatement","src":"1483:19:6"},{"nodeType":"YulAssignment","src":"1511:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1530:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1535:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:6"},"nodeType":"YulFunctionCall","src":"1526:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1511:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1445:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"1450:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1461:11:6","type":""}],"src":"1377:169:6"},{"body":{"nodeType":"YulBlock","src":"1658:127:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1680:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1688:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1676:3:6"},"nodeType":"YulFunctionCall","src":"1676:14:6"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"1692:34:6","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1669:6:6"},"nodeType":"YulFunctionCall","src":"1669:58:6"},"nodeType":"YulExpressionStatement","src":"1669:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1748:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1756:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1744:3:6"},"nodeType":"YulFunctionCall","src":"1744:15:6"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"1761:16:6","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1737:6:6"},"nodeType":"YulFunctionCall","src":"1737:41:6"},"nodeType":"YulExpressionStatement","src":"1737:41:6"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1650:6:6","type":""}],"src":"1552:233:6"},{"body":{"nodeType":"YulBlock","src":"1937:220:6","statements":[{"nodeType":"YulAssignment","src":"1947:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2013:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2018:2:6","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1954:58:6"},"nodeType":"YulFunctionCall","src":"1954:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1947:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2119:3:6"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"2030:88:6"},"nodeType":"YulFunctionCall","src":"2030:93:6"},"nodeType":"YulExpressionStatement","src":"2030:93:6"},{"nodeType":"YulAssignment","src":"2132:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2143:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2148:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2139:3:6"},"nodeType":"YulFunctionCall","src":"2139:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2132:3:6"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1925:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1933:3:6","type":""}],"src":"1791:366:6"},{"body":{"nodeType":"YulBlock","src":"2334:248:6","statements":[{"nodeType":"YulAssignment","src":"2344:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2356:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2367:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2352:3:6"},"nodeType":"YulFunctionCall","src":"2352:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2344:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2391:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2402:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2387:3:6"},"nodeType":"YulFunctionCall","src":"2387:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2410:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2416:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2406:3:6"},"nodeType":"YulFunctionCall","src":"2406:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2380:6:6"},"nodeType":"YulFunctionCall","src":"2380:47:6"},"nodeType":"YulExpressionStatement","src":"2380:47:6"},{"nodeType":"YulAssignment","src":"2436:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2570:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2444:124:6"},"nodeType":"YulFunctionCall","src":"2444:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2436:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2314:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2329:4:6","type":""}],"src":"2163:419:6"},{"body":{"nodeType":"YulBlock","src":"2641:32:6","statements":[{"nodeType":"YulAssignment","src":"2651:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2662:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2651:7:6"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2623:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2633:7:6","type":""}],"src":"2588:85:6"},{"body":{"nodeType":"YulBlock","src":"2722:43:6","statements":[{"nodeType":"YulAssignment","src":"2732:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2754:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2743:3:6"},"nodeType":"YulFunctionCall","src":"2743:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:6","type":""}],"src":"2679:86:6"},{"body":{"nodeType":"YulBlock","src":"2803:28:6","statements":[{"nodeType":"YulAssignment","src":"2813:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2820:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2813:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2789:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2799:3:6","type":""}],"src":"2771:60:6"},{"body":{"nodeType":"YulBlock","src":"2903:88:6","statements":[{"nodeType":"YulAssignment","src":"2913:72:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:6"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"2951:25:6"},"nodeType":"YulFunctionCall","src":"2951:32:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2942:8:6"},"nodeType":"YulFunctionCall","src":"2942:42:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2926:15:6"},"nodeType":"YulFunctionCall","src":"2926:59:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2913:9:6"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2883:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2893:9:6","type":""}],"src":"2837:154:6"},{"body":{"nodeType":"YulBlock","src":"3068:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3085:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3127:5:6"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"3090:36:6"},"nodeType":"YulFunctionCall","src":"3090:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3078:6:6"},"nodeType":"YulFunctionCall","src":"3078:56:6"},"nodeType":"YulExpressionStatement","src":"3078:56:6"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3056:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3063:3:6","type":""}],"src":"2997:143:6"},{"body":{"nodeType":"YulBlock","src":"3250:130:6","statements":[{"nodeType":"YulAssignment","src":"3260:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3272:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3283:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3268:3:6"},"nodeType":"YulFunctionCall","src":"3268:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3260:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3346:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3359:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3370:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3355:3:6"},"nodeType":"YulFunctionCall","src":"3355:17:6"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"3296:49:6"},"nodeType":"YulFunctionCall","src":"3296:77:6"},"nodeType":"YulExpressionStatement","src":"3296:77:6"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3222:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3234:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3245:4:6","type":""}],"src":"3146:234:6"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80632e64cec1146100465780635524107714610064578063fe4b84df14610080575b600080fd5b61004e61009c565b60405161005b9190610261565b60405180910390f35b61007e600480360381019061007991906102ad565b6100a6565b005b61009a600480360381019061009591906102ad565b6100e7565b005b6000600154905090565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516100dc9190610261565b60405180910390a150565b60008060019054906101000a900460ff161590508080156101185750600160008054906101000a900460ff1660ff16105b80610145575061012730610225565b1580156101445750600160008054906101000a900460ff1660ff16145b5b610184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017b9061035d565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156101c1576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156102215760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161021891906103cf565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b61025b81610248565b82525050565b60006020820190506102766000830184610252565b92915050565b600080fd5b61028a81610248565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b6000602082840312156102c3576102c261027c565b5b60006102d184828501610298565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610347602e836102da565b9150610352826102eb565b604082019050919050565b600060208201905081810360008301526103768161033a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006103b96103b46103af8461037d565b610394565b610387565b9050919050565b6103c98161039e565b82525050565b60006020820190506103e460008301846103c0565b9291505056fea2646970667358221220a7991660f3cb8777e9755b4e14d9c7cf3cf09ef860e55b78ae852cf82b541b8d64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x118 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x145 JUMPI POP PUSH2 0x127 ADDRESS PUSH2 0x225 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x144 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25B DUP2 PUSH2 0x248 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x276 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x252 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A DUP2 PUSH2 0x248 JUMP JUMPDEST DUP2 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A7 DUP2 PUSH2 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x27C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1 DUP5 DUP3 DUP6 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347 PUSH1 0x2E DUP4 PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP PUSH2 0x352 DUP3 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x376 DUP2 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 PUSH2 0x3B4 PUSH2 0x3AF DUP5 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9 DUP2 PUSH2 0x39E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 SWAP10 AND PUSH1 0xF3 0xCB DUP8 PUSH24 0xE9755B4E14D9C7CF3CF09EF860E55B78AE852CF82B541B8D PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"364:553:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;689:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;459:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;836:79;877:7;903:5;;896:12;;836:79;:::o;689:113::-;750:8;742:5;:16;;;;773:22;786:8;773:22;;;;;;:::i;:::-;;;;;;;;689:113;:::o;459:94::-;3268:19:0;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;536:10:2::1;528:5;:18;;;;3640:14:0::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;459:94:2;:::o;1186:320:1:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:169::-;1461:11;1495:6;1490:3;1483:19;1535:4;1530:3;1526:14;1511:29;;1377:169;;;;:::o;1552:233::-;1692:34;1688:1;1680:6;1676:14;1669:58;1761:16;1756:2;1748:6;1744:15;1737:41;1552:233;:::o;1791:366::-;1933:3;1954:67;2018:2;2013:3;1954:67;:::i;:::-;1947:74;;2030:93;2119:3;2030:93;:::i;:::-;2148:2;2143:3;2139:12;2132:19;;1791:366;;;:::o;2163:419::-;2329:4;2367:2;2356:9;2352:18;2344:26;;2416:9;2410:4;2406:20;2402:1;2391:9;2387:17;2380:47;2444:131;2570:4;2444:131;:::i;:::-;2436:139;;2163:419;;;:::o;2588:85::-;2633:7;2662:5;2651:16;;2588:85;;;:::o;2679:86::-;2714:7;2754:4;2747:5;2743:16;2732:27;;2679:86;;;:::o;2771:60::-;2799:3;2820:5;2813:12;;2771:60;;;:::o;2837:154::-;2893:9;2926:59;2942:42;2951:32;2977:5;2951:32;:::i;:::-;2942:42;:::i;:::-;2926:59;:::i;:::-;2913:72;;2837:154;;;:::o;2997:143::-;3090:43;3127:5;3090:43;:::i;:::-;3085:3;3078:56;2997:143;;:::o;3146:234::-;3245:4;3283:2;3272:9;3268:18;3260:26;;3296:77;3370:1;3359:9;3355:17;3346:6;3296:77;:::i;:::-;3146:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"211200","executionCost":"251","totalCost":"211451"},"external":{"initialize(uint256)":"106047","retrieve()":"2415","setValue(uint256)":"infinite"}},"methodIdentifiers":{"initialize(uint256)":"fe4b84df","retrieve()":"2e64cec1","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Sahara.sol\":\"Sahara\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"contracts/Sahara.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract Sahara is Initializable {\\n    \\n     uint256 private value;\\n\\n    //\\u521d\\u59cb\\u5316\\u51fd\\u6570\\n    function initialize(uint256 _initValue) public initializer {\\n        value = _initValue;\\n    }\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    // Stores a new value in the contract\\n    function setValue(uint256 newValue) public {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last value\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n}\",\"keccak256\":\"0xcb964142543a33ca3aa3048c99e8aad62e0e7326d972e8c039dec4ef13fdbe1b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/Sahara.sol:Sahara","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/Sahara.sol:Sahara","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":460,"contract":"contracts/Sahara.sol:Sahara","label":"value","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SaharaV2.sol":{"SaharaV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_initValue","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reduce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061051d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c57806345219b0e1461007a5780635524107714610084578063d09de08a146100a0578063fe4b84df146100aa575b600080fd5b6100646100c6565b60405161007191906102c7565b60405180910390f35b6100826100d0565b005b61009e60048036038101906100999190610313565b6100ee565b005b6100a861012f565b005b6100c460048036038101906100bf9190610313565b61014d565b005b6000600154905090565b6100ec60016100dd6100c6565b6100e7919061036f565b6100ee565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c598160405161012491906102c7565b60405180910390a150565b61014b600161013c6100c6565b61014691906103a3565b6100ee565b565b60008060019054906101000a900460ff1615905080801561017e5750600160008054906101000a900460ff1660ff16105b806101ab575061018d3061028b565b1580156101aa5750600160008054906101000a900460ff1660ff16145b5b6101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19061045a565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610227576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156102875760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161027e91906104cc565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b6102c1816102ae565b82525050565b60006020820190506102dc60008301846102b8565b92915050565b600080fd5b6102f0816102ae565b81146102fb57600080fd5b50565b60008135905061030d816102e7565b92915050565b600060208284031215610329576103286102e2565b5b6000610337848285016102fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061037a826102ae565b9150610385836102ae565b925082820390508181111561039d5761039c610340565b5b92915050565b60006103ae826102ae565b91506103b9836102ae565b92508282019050808211156103d1576103d0610340565b5b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610444602e836103d7565b915061044f826103e8565b604082019050919050565b6000602082019050818103600083015261047381610437565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006104b66104b16104ac8461047a565b610491565b610484565b9050919050565b6104c68161049b565b82525050565b60006020820190506104e160008301846104bd565b9291505056fea2646970667358221220a17e50e89d32f184eee3d89e3226d278ab8b33ac67ab7a055bfcbd75d7fd7adc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x1 PUSH2 0xDD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14B PUSH1 0x1 PUSH2 0x13C PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x17E JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1AB JUMPI POP PUSH2 0x18D ADDRESS PUSH2 0x28B JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2AE JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30D DUP2 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x329 JUMPI PUSH2 0x328 PUSH2 0x2E2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP PUSH2 0x385 DUP4 PUSH2 0x2AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0x340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP4 PUSH2 0x2AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D0 PUSH2 0x340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 PUSH1 0x2E DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x44F DUP3 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x473 DUP2 PUSH2 0x437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B6 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x47A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH31 0x50E89D32F184EEE3D89E3226D278AB8B33AC67AB7A055BFCBD75D7FD7ADC64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"311:252:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@increment_516":{"entryPoint":303,"id":516,"parameterSlots":0,"returnSlots":0},"@initialize_472":{"entryPoint":333,"id":472,"parameterSlots":1,"returnSlots":0},"@isContract_186":{"entryPoint":651,"id":186,"parameterSlots":1,"returnSlots":1},"@reduce_527":{"entryPoint":208,"id":527,"parameterSlots":0,"returnSlots":0},"@retrieve_498":{"entryPoint":198,"id":498,"parameterSlots":0,"returnSlots":1},"@setValue_490":{"entryPoint":238,"id":490,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":1213,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":1079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":696,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":1228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":711,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":983,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":931,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":879,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":1146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":686,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1156,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":1179,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":1169,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":832,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":738,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":1000,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":743,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3966:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:6","statements":[{"nodeType":"YulAssignment","src":"62:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:77:6"},{"body":{"nodeType":"YulBlock","src":"155:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:6"},"nodeType":"YulFunctionCall","src":"177:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:6"},"nodeType":"YulFunctionCall","src":"165:37:6"},"nodeType":"YulExpressionStatement","src":"165:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:6","type":""}],"src":"90:118:6"},{"body":{"nodeType":"YulBlock","src":"312:124:6","statements":[{"nodeType":"YulAssignment","src":"322:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:6"},"nodeType":"YulFunctionCall","src":"411:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:6"},"nodeType":"YulFunctionCall","src":"358:71:6"},"nodeType":"YulExpressionStatement","src":"358:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:6","type":""}],"src":"214:222:6"},{"body":{"nodeType":"YulBlock","src":"482:35:6","statements":[{"nodeType":"YulAssignment","src":"492:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:6"},"nodeType":"YulFunctionCall","src":"502:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:6","type":""}],"src":"442:75:6"},{"body":{"nodeType":"YulBlock","src":"612:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:6"},"nodeType":"YulFunctionCall","src":"622:12:6"},"nodeType":"YulExpressionStatement","src":"622:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:6"},{"body":{"nodeType":"YulBlock","src":"735:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:12:6"},"nodeType":"YulExpressionStatement","src":"745:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:6"},{"body":{"nodeType":"YulBlock","src":"812:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:6"},"nodeType":"YulFunctionCall","src":"871:12:6"},"nodeType":"YulExpressionStatement","src":"871:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:6"},"nodeType":"YulFunctionCall","src":"842:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:6"},"nodeType":"YulFunctionCall","src":"832:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:6"},"nodeType":"YulFunctionCall","src":"825:43:6"},"nodeType":"YulIf","src":"822:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:6","type":""}],"src":"769:122:6"},{"body":{"nodeType":"YulBlock","src":"949:87:6","statements":[{"nodeType":"YulAssignment","src":"959:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:6"},"nodeType":"YulFunctionCall","src":"968:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:6"},"nodeType":"YulFunctionCall","src":"997:33:6"},"nodeType":"YulExpressionStatement","src":"997:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:6","type":""}],"src":"897:139:6"},{"body":{"nodeType":"YulBlock","src":"1108:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:6"},"nodeType":"YulFunctionCall","src":"1156:79:6"},"nodeType":"YulExpressionStatement","src":"1156:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:6"},"nodeType":"YulFunctionCall","src":"1125:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:6"},"nodeType":"YulFunctionCall","src":"1121:32:6"},"nodeType":"YulIf","src":"1118:119:6"},{"nodeType":"YulBlock","src":"1247:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:6"},"nodeType":"YulFunctionCall","src":"1322:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:6"},"nodeType":"YulFunctionCall","src":"1301:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:6","type":""}],"src":"1042:329:6"},{"body":{"nodeType":"YulBlock","src":"1405:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1422:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1425:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1415:6:6"},"nodeType":"YulFunctionCall","src":"1415:88:6"},"nodeType":"YulExpressionStatement","src":"1415:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1519:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1522:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1512:6:6"},"nodeType":"YulFunctionCall","src":"1512:15:6"},"nodeType":"YulExpressionStatement","src":"1512:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1543:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1546:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1536:6:6"},"nodeType":"YulFunctionCall","src":"1536:15:6"},"nodeType":"YulExpressionStatement","src":"1536:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1377:180:6"},{"body":{"nodeType":"YulBlock","src":"1608:149:6","statements":[{"nodeType":"YulAssignment","src":"1618:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1641:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1623:17:6"},"nodeType":"YulFunctionCall","src":"1623:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"1618:1:6"}]},{"nodeType":"YulAssignment","src":"1652:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1675:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1657:17:6"},"nodeType":"YulFunctionCall","src":"1657:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"1652:1:6"}]},{"nodeType":"YulAssignment","src":"1686:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1698:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"1701:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1694:3:6"},"nodeType":"YulFunctionCall","src":"1694:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"1686:4:6"}]},{"body":{"nodeType":"YulBlock","src":"1728:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1730:16:6"},"nodeType":"YulFunctionCall","src":"1730:18:6"},"nodeType":"YulExpressionStatement","src":"1730:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"1719:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"1725:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1716:2:6"},"nodeType":"YulFunctionCall","src":"1716:11:6"},"nodeType":"YulIf","src":"1713:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1594:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"1597:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"1603:4:6","type":""}],"src":"1563:194:6"},{"body":{"nodeType":"YulBlock","src":"1807:147:6","statements":[{"nodeType":"YulAssignment","src":"1817:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1840:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1822:17:6"},"nodeType":"YulFunctionCall","src":"1822:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"1817:1:6"}]},{"nodeType":"YulAssignment","src":"1851:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1874:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1856:17:6"},"nodeType":"YulFunctionCall","src":"1856:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"1851:1:6"}]},{"nodeType":"YulAssignment","src":"1885:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1896:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"1899:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:6"},"nodeType":"YulFunctionCall","src":"1892:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1885:3:6"}]},{"body":{"nodeType":"YulBlock","src":"1925:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1927:16:6"},"nodeType":"YulFunctionCall","src":"1927:18:6"},"nodeType":"YulExpressionStatement","src":"1927:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1917:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"1920:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1914:2:6"},"nodeType":"YulFunctionCall","src":"1914:10:6"},"nodeType":"YulIf","src":"1911:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1794:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"1797:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1803:3:6","type":""}],"src":"1763:191:6"},{"body":{"nodeType":"YulBlock","src":"2056:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2073:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2066:6:6"},"nodeType":"YulFunctionCall","src":"2066:19:6"},"nodeType":"YulExpressionStatement","src":"2066:19:6"},{"nodeType":"YulAssignment","src":"2094:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2113:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2118:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2109:3:6"},"nodeType":"YulFunctionCall","src":"2109:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2094:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2028:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2033:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2044:11:6","type":""}],"src":"1960:169:6"},{"body":{"nodeType":"YulBlock","src":"2241:127:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2263:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2271:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:6"},"nodeType":"YulFunctionCall","src":"2259:14:6"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"2275:34:6","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2252:6:6"},"nodeType":"YulFunctionCall","src":"2252:58:6"},"nodeType":"YulExpressionStatement","src":"2252:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2331:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2339:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2327:3:6"},"nodeType":"YulFunctionCall","src":"2327:15:6"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"2344:16:6","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2320:6:6"},"nodeType":"YulFunctionCall","src":"2320:41:6"},"nodeType":"YulExpressionStatement","src":"2320:41:6"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2233:6:6","type":""}],"src":"2135:233:6"},{"body":{"nodeType":"YulBlock","src":"2520:220:6","statements":[{"nodeType":"YulAssignment","src":"2530:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2596:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2601:2:6","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2537:58:6"},"nodeType":"YulFunctionCall","src":"2537:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2530:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2702:3:6"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"2613:88:6"},"nodeType":"YulFunctionCall","src":"2613:93:6"},"nodeType":"YulExpressionStatement","src":"2613:93:6"},{"nodeType":"YulAssignment","src":"2715:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2726:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2731:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2722:3:6"},"nodeType":"YulFunctionCall","src":"2722:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2715:3:6"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2508:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2516:3:6","type":""}],"src":"2374:366:6"},{"body":{"nodeType":"YulBlock","src":"2917:248:6","statements":[{"nodeType":"YulAssignment","src":"2927:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2939:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2950:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2935:3:6"},"nodeType":"YulFunctionCall","src":"2935:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2927:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2974:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2985:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2970:3:6"},"nodeType":"YulFunctionCall","src":"2970:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2993:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2989:3:6"},"nodeType":"YulFunctionCall","src":"2989:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2963:6:6"},"nodeType":"YulFunctionCall","src":"2963:47:6"},"nodeType":"YulExpressionStatement","src":"2963:47:6"},{"nodeType":"YulAssignment","src":"3019:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3153:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3027:124:6"},"nodeType":"YulFunctionCall","src":"3027:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3019:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2897:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2912:4:6","type":""}],"src":"2746:419:6"},{"body":{"nodeType":"YulBlock","src":"3224:32:6","statements":[{"nodeType":"YulAssignment","src":"3234:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3245:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3234:7:6"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3206:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3216:7:6","type":""}],"src":"3171:85:6"},{"body":{"nodeType":"YulBlock","src":"3305:43:6","statements":[{"nodeType":"YulAssignment","src":"3315:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3330:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"3337:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3326:3:6"},"nodeType":"YulFunctionCall","src":"3326:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3315:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3287:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3297:7:6","type":""}],"src":"3262:86:6"},{"body":{"nodeType":"YulBlock","src":"3386:28:6","statements":[{"nodeType":"YulAssignment","src":"3396:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3403:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3396:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3372:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3382:3:6","type":""}],"src":"3354:60:6"},{"body":{"nodeType":"YulBlock","src":"3486:88:6","statements":[{"nodeType":"YulAssignment","src":"3496:72:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3560:5:6"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"3534:25:6"},"nodeType":"YulFunctionCall","src":"3534:32:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3525:8:6"},"nodeType":"YulFunctionCall","src":"3525:42:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"3509:15:6"},"nodeType":"YulFunctionCall","src":"3509:59:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3496:9:6"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3466:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3476:9:6","type":""}],"src":"3420:154:6"},{"body":{"nodeType":"YulBlock","src":"3651:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3668:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3710:5:6"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"3673:36:6"},"nodeType":"YulFunctionCall","src":"3673:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:6"},"nodeType":"YulFunctionCall","src":"3661:56:6"},"nodeType":"YulExpressionStatement","src":"3661:56:6"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3639:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3646:3:6","type":""}],"src":"3580:143:6"},{"body":{"nodeType":"YulBlock","src":"3833:130:6","statements":[{"nodeType":"YulAssignment","src":"3843:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3855:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3866:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:6"},"nodeType":"YulFunctionCall","src":"3851:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3843:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3929:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3942:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3953:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3938:3:6"},"nodeType":"YulFunctionCall","src":"3938:17:6"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"3879:49:6"},"nodeType":"YulFunctionCall","src":"3879:77:6"},"nodeType":"YulExpressionStatement","src":"3879:77:6"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3805:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3817:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3828:4:6","type":""}],"src":"3729:234:6"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c57806345219b0e1461007a5780635524107714610084578063d09de08a146100a0578063fe4b84df146100aa575b600080fd5b6100646100c6565b60405161007191906102c7565b60405180910390f35b6100826100d0565b005b61009e60048036038101906100999190610313565b6100ee565b005b6100a861012f565b005b6100c460048036038101906100bf9190610313565b61014d565b005b6000600154905090565b6100ec60016100dd6100c6565b6100e7919061036f565b6100ee565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c598160405161012491906102c7565b60405180910390a150565b61014b600161013c6100c6565b61014691906103a3565b6100ee565b565b60008060019054906101000a900460ff1615905080801561017e5750600160008054906101000a900460ff1660ff16105b806101ab575061018d3061028b565b1580156101aa5750600160008054906101000a900460ff1660ff16145b5b6101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e19061045a565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610227576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156102875760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161027e91906104cc565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b6102c1816102ae565b82525050565b60006020820190506102dc60008301846102b8565b92915050565b600080fd5b6102f0816102ae565b81146102fb57600080fd5b50565b60008135905061030d816102e7565b92915050565b600060208284031215610329576103286102e2565b5b6000610337848285016102fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061037a826102ae565b9150610385836102ae565b925082820390508181111561039d5761039c610340565b5b92915050565b60006103ae826102ae565b91506103b9836102ae565b92508282019050808211156103d1576103d0610340565b5b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610444602e836103d7565b915061044f826103e8565b604082019050919050565b6000602082019050818103600083015261047381610437565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006104b66104b16104ac8461047a565b610491565b610484565b9050919050565b6104c68161049b565b82525050565b60006020820190506104e160008301846104bd565b9291505056fea2646970667358221220a17e50e89d32f184eee3d89e3226d278ab8b33ac67ab7a055bfcbd75d7fd7adc64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA8 PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x1 PUSH2 0xDD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x36F JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14B PUSH1 0x1 PUSH2 0x13C PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x17E JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x1AB JUMPI POP PUSH2 0x18D ADDRESS PUSH2 0x28B JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F0 DUP2 PUSH2 0x2AE JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30D DUP2 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x329 JUMPI PUSH2 0x328 PUSH2 0x2E2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x2FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37A DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP PUSH2 0x385 DUP4 PUSH2 0x2AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x39C PUSH2 0x340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x2AE JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP4 PUSH2 0x2AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D0 PUSH2 0x340 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444 PUSH1 0x2E DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x44F DUP3 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x473 DUP2 PUSH2 0x437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B6 PUSH2 0x4B1 PUSH2 0x4AC DUP5 PUSH2 0x47A JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH31 0x50E89D32F184EEE3D89E3226D278AB8B33AC67AB7A055BFCBD75D7FD7ADC64 PUSH20 0x6F6C634300081200330000000000000000000000 ","sourceMap":"311:252:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:79:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:64:3;;;:::i;:::-;;689:113:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;390:67:3;;;:::i;:::-;;459:94:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;836:79;877:7;903:5;;896:12;;836:79;:::o;497:64:3:-;532:22;552:1;541:10;:8;:10::i;:::-;:12;;;;:::i;:::-;532:8;:22::i;:::-;497:64::o;689:113:2:-;750:8;742:5;:16;;;;773:22;786:8;773:22;;;;;;:::i;:::-;;;;;;;;689:113;:::o;390:67:3:-;428:22;448:1;437:10;:8;:10::i;:::-;:12;;;;:::i;:::-;428:8;:22::i;:::-;390:67::o;459:94:2:-;3268:19:0;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;536:10:2::1;528:5;:18;;;;3640:14:0::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;459:94:2;:::o;1186:320:1:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:194;1603:4;1623:20;1641:1;1623:20;:::i;:::-;1618:25;;1657:20;1675:1;1657:20;:::i;:::-;1652:25;;1701:1;1698;1694:9;1686:17;;1725:1;1719:4;1716:11;1713:37;;;1730:18;;:::i;:::-;1713:37;1563:194;;;;:::o;1763:191::-;1803:3;1822:20;1840:1;1822:20;:::i;:::-;1817:25;;1856:20;1874:1;1856:20;:::i;:::-;1851:25;;1899:1;1896;1892:9;1885:16;;1920:3;1917:1;1914:10;1911:36;;;1927:18;;:::i;:::-;1911:36;1763:191;;;;:::o;1960:169::-;2044:11;2078:6;2073:3;2066:19;2118:4;2113:3;2109:14;2094:29;;1960:169;;;;:::o;2135:233::-;2275:34;2271:1;2263:6;2259:14;2252:58;2344:16;2339:2;2331:6;2327:15;2320:41;2135:233;:::o;2374:366::-;2516:3;2537:67;2601:2;2596:3;2537:67;:::i;:::-;2530:74;;2613:93;2702:3;2613:93;:::i;:::-;2731:2;2726:3;2722:12;2715:19;;2374:366;;;:::o;2746:419::-;2912:4;2950:2;2939:9;2935:18;2927:26;;2999:9;2993:4;2989:20;2985:1;2974:9;2970:17;2963:47;3027:131;3153:4;3027:131;:::i;:::-;3019:139;;2746:419;;;:::o;3171:85::-;3216:7;3245:5;3234:16;;3171:85;;;:::o;3262:86::-;3297:7;3337:4;3330:5;3326:16;3315:27;;3262:86;;;:::o;3354:60::-;3382:3;3403:5;3396:12;;3354:60;;;:::o;3420:154::-;3476:9;3509:59;3525:42;3534:32;3560:5;3534:32;:::i;:::-;3525:42;:::i;:::-;3509:59;:::i;:::-;3496:72;;3420:154;;;:::o;3580:143::-;3673:43;3710:5;3673:43;:::i;:::-;3668:3;3661:56;3580:143;;:::o;3729:234::-;3828:4;3866:2;3855:9;3851:18;3843:26;;3879:77;3953:1;3942:9;3938:17;3929:6;3879:77;:::i;:::-;3729:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"261800","executionCost":"300","totalCost":"262100"},"external":{"increment()":"infinite","initialize(uint256)":"106091","reduce()":"infinite","retrieve()":"2415","setValue(uint256)":"infinite"}},"methodIdentifiers":{"increment()":"d09de08a","initialize(uint256)":"fe4b84df","reduce()":"45219b0e","retrieve()":"2e64cec1","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reduce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaharaV2.sol\":\"SaharaV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"contracts/Sahara.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract Sahara is Initializable {\\n    \\n     uint256 private value;\\n\\n    //\\u521d\\u59cb\\u5316\\u51fd\\u6570\\n    function initialize(uint256 _initValue) public initializer {\\n        value = _initValue;\\n    }\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    // Stores a new value in the contract\\n    function setValue(uint256 newValue) public {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last value\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n}\",\"keccak256\":\"0xcb964142543a33ca3aa3048c99e8aad62e0e7326d972e8c039dec4ef13fdbe1b\",\"license\":\"MIT\"},\"contracts/SaharaV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Sahara.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract SaharaV2 is Sahara {\\n    \\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u53ef\\u4ee5\\u81ea\\u589e\\u7684\\u51fd\\u6570\\n    function increment() public {\\n        setValue(retrieve()+1);\\n    }\\n\\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u81ea\\u51cf\\u7684\\u51fd\\u6570\\n    function reduce() public {\\n        setValue(retrieve()-1);\\n    }\\n}\",\"keccak256\":\"0x8c34247e0685af7f50f585401a54eeb0d8d1b457f459c6ec4b3722830f0109f6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/SaharaV2.sol:SaharaV2","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/SaharaV2.sol:SaharaV2","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":460,"contract":"contracts/SaharaV2.sol:SaharaV2","label":"value","offset":0,"slot":"1","type":"t_uint256"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SaharaV3.sol":{"SaharaV3":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"NameChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_initValue","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reduce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610bfe806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063552410771161005b57806355241077146100c8578063c47f0027146100e4578063d09de08a14610100578063fe4b84df1461010a5761007d565b806306fdde03146100825780632e64cec1146100a057806345219b0e146100be575b600080fd5b61008a610126565b6040516100979190610477565b60405180910390f35b6100a86101b4565b6040516100b591906104b2565b60405180910390f35b6100c66101be565b005b6100e260048036038101906100dd919061050d565b6101dc565b005b6100fe60048036038101906100f9919061066f565b61021d565b005b610108610268565b005b610124600480360381019061011f919061050d565b610286565b005b60028054610133906106e7565b80601f016020809104026020016040519081016040528092919081815260200182805461015f906106e7565b80156101ac5780601f10610181576101008083540402835291602001916101ac565b820191906000526020600020905b81548152906001019060200180831161018f57829003601f168201915b505050505081565b6000600154905090565b6101da60016101cb6101b4565b6101d59190610747565b6101dc565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c598160405161021291906104b2565b60405180910390a150565b806002908161022c9190610927565b507f4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc600260405161025d9190610a7d565b60405180910390a150565b61028460016102756101b4565b61027f9190610a9f565b6101dc565b565b60008060019054906101000a900460ff161590508080156102b75750600160008054906101000a900460ff1660ff16105b806102e457506102c6306103c4565b1580156102e35750600160008054906101000a900460ff1660ff16145b5b610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90610b45565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610360576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156103c05760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103b79190610bad565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610421578082015181840152602081019050610406565b60008484015250505050565b6000601f19601f8301169050919050565b6000610449826103e7565b61045381856103f2565b9350610463818560208601610403565b61046c8161042d565b840191505092915050565b60006020820190508181036000830152610491818461043e565b905092915050565b6000819050919050565b6104ac81610499565b82525050565b60006020820190506104c760008301846104a3565b92915050565b6000604051905090565b600080fd5b600080fd5b6104ea81610499565b81146104f557600080fd5b50565b600081359050610507816104e1565b92915050565b600060208284031215610523576105226104d7565b5b6000610531848285016104f8565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61057c8261042d565b810181811067ffffffffffffffff8211171561059b5761059a610544565b5b80604052505050565b60006105ae6104cd565b90506105ba8282610573565b919050565b600067ffffffffffffffff8211156105da576105d9610544565b5b6105e38261042d565b9050602081019050919050565b82818337600083830152505050565b600061061261060d846105bf565b6105a4565b90508281526020810184848401111561062e5761062d61053f565b5b6106398482856105f0565b509392505050565b600082601f8301126106565761065561053a565b5b81356106668482602086016105ff565b91505092915050565b600060208284031215610685576106846104d7565b5b600082013567ffffffffffffffff8111156106a3576106a26104dc565b5b6106af84828501610641565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106ff57607f821691505b602082108103610712576107116106b8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061075282610499565b915061075d83610499565b925082820390508181111561077557610774610718565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107a0565b6107e786836107a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061082461081f61081a84610499565b6107ff565b610499565b9050919050565b6000819050919050565b61083e83610809565b61085261084a8261082b565b8484546107ad565b825550505050565b600090565b61086761085a565b610872818484610835565b505050565b5b818110156108965761088b60008261085f565b600181019050610878565b5050565b601f8211156108db576108ac8161077b565b6108b584610790565b810160208510156108c4578190505b6108d86108d085610790565b830182610877565b50505b505050565b600082821c905092915050565b60006108fe600019846008026108e0565b1980831691505092915050565b600061091783836108ed565b9150826002028217905092915050565b610930826103e7565b67ffffffffffffffff81111561094957610948610544565b5b61095382546106e7565b61095e82828561089a565b600060209050601f831160018114610991576000841561097f578287015190505b610989858261090b565b8655506109f1565b601f19841661099f8661077b565b60005b828110156109c7578489015182556001820191506020850194506020810190506109a2565b868310156109e457848901516109e0601f8916826108ed565b8355505b6001600288020188555050505b505050505050565b60008154610a06816106e7565b610a1081866103f2565b94506001821660008114610a2b5760018114610a4157610a74565b60ff198316865281151560200286019350610a74565b610a4a8561077b565b60005b83811015610a6c57815481890152600182019150602081019050610a4d565b808801955050505b50505092915050565b60006020820190508181036000830152610a9781846109f9565b905092915050565b6000610aaa82610499565b9150610ab583610499565b9250828201905080821115610acd57610acc610718565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610b2f602e836103f2565b9150610b3a82610ad3565b604082019050919050565b60006020820190508181036000830152610b5e81610b22565b9050919050565b6000819050919050565b600060ff82169050919050565b6000610b97610b92610b8d84610b65565b6107ff565b610b6f565b9050919050565b610ba781610b7c565b82525050565b6000602082019050610bc26000830184610b9e565b9291505056fea26469706673582212205e783a9ac453719d304608bef04a67b379bcf44bc03a4bf7ea799278431e896e64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBFE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55241077 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x133 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F SWAP1 PUSH2 0x6E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x181 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x1 PUSH2 0x1CB PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST POP PUSH32 0x4737457377F528CC8AFD815F73ECB8B05DF80D047DBFFC41C17750A4033592BC PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x284 PUSH1 0x1 PUSH2 0x275 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x2B7 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x2E4 JUMPI POP PUSH2 0x2C6 ADDRESS PUSH2 0x3C4 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x421 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449 DUP3 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x453 DUP2 DUP6 PUSH2 0x3F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x463 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x403 JUMP JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x42D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x491 DUP2 DUP5 PUSH2 0x43E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AC DUP2 PUSH2 0x499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA DUP2 PUSH2 0x499 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x507 DUP2 PUSH2 0x4E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x523 JUMPI PUSH2 0x522 PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP5 DUP3 DUP6 ADD PUSH2 0x4F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x57C DUP3 PUSH2 0x42D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA DUP3 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x544 JUMP JUMPDEST JUMPDEST PUSH2 0x5E3 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x612 PUSH2 0x60D DUP5 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH2 0x639 DUP5 DUP3 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x656 JUMPI PUSH2 0x655 PUSH2 0x53A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x685 JUMPI PUSH2 0x684 PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x4DC JUMP JUMPDEST JUMPDEST PUSH2 0x6AF DUP5 DUP3 DUP6 ADD PUSH2 0x641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP2 POP PUSH2 0x75D DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0x718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x7DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x7E7 DUP7 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x824 PUSH2 0x81F PUSH2 0x81A DUP5 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83E DUP4 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x852 PUSH2 0x84A DUP3 PUSH2 0x82B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x867 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x872 DUP2 DUP5 DUP5 PUSH2 0x835 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x896 JUMPI PUSH2 0x88B PUSH1 0x0 DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x878 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8DB JUMPI PUSH2 0x8AC DUP2 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x8B5 DUP5 PUSH2 0x790 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8D8 PUSH2 0x8D0 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x877 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8E0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x917 DUP4 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x930 DUP3 PUSH2 0x3E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0x544 JUMP JUMPDEST JUMPDEST PUSH2 0x953 DUP3 SLOAD PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x95E DUP3 DUP3 DUP6 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x97F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x989 DUP6 DUP3 PUSH2 0x90B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x99F DUP7 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0xA06 DUP2 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0xA10 DUP2 DUP7 PUSH2 0x3F2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xA2B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA41 JUMPI PUSH2 0xA74 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0xA74 JUMP JUMPDEST PUSH2 0xA4A DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6C JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4D JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA97 DUP2 DUP5 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAA DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACC PUSH2 0x718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2F PUSH1 0x2E DUP4 PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5E DUP2 PUSH2 0xB22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB97 PUSH2 0xB92 PUSH2 0xB8D DUP5 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E PUSH25 0x3A9AC453719D304608BEF04A67B379BCF44BC03A4BF7EA7992 PUSH25 0x431E896E64736F6C6343000812003300000000000000000000 ","sourceMap":"313:259:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@increment_516":{"entryPoint":616,"id":516,"parameterSlots":0,"returnSlots":0},"@initialize_472":{"entryPoint":646,"id":472,"parameterSlots":1,"returnSlots":0},"@isContract_186":{"entryPoint":964,"id":186,"parameterSlots":1,"returnSlots":1},"@name_536":{"entryPoint":294,"id":536,"parameterSlots":0,"returnSlots":0},"@reduce_527":{"entryPoint":446,"id":527,"parameterSlots":0,"returnSlots":0},"@retrieve_498":{"entryPoint":436,"id":498,"parameterSlots":0,"returnSlots":1},"@setName_554":{"entryPoint":541,"id":554,"parameterSlots":1,"returnSlots":0},"@setValue_490":{"entryPoint":476,"id":490,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":1535,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":1601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":1647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":2974,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":2553,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":2850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1187,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":2989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2685,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1202,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1444,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1229,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1471,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1915,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":999,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1010,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2719,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1863,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2202,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_rational_1_by_1":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1177,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":2927,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2167,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":2940,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2057,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2343,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1520,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1027,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1936,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2315,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1395,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2047,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2285,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1816,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1720,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1348,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2091,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1338,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1343,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1244,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1239,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1069,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1952,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2272,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2143,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":2771,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1965,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2101,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2138,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13720:6","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:6","statements":[{"nodeType":"YulAssignment","src":"77:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:6"},"nodeType":"YulFunctionCall","src":"87:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:6","type":""}],"src":"7:99:6"},{"body":{"nodeType":"YulBlock","src":"208:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:6"},"nodeType":"YulFunctionCall","src":"218:19:6"},"nodeType":"YulExpressionStatement","src":"218:19:6"},{"nodeType":"YulAssignment","src":"246:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:6"},"nodeType":"YulFunctionCall","src":"261:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:6","type":""}],"src":"112:169:6"},{"body":{"nodeType":"YulBlock","src":"349:184:6","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:6"},"nodeType":"YulFunctionCall","src":"449:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:6"},"nodeType":"YulFunctionCall","src":"468:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:6"},"nodeType":"YulFunctionCall","src":"462:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:6"},"nodeType":"YulFunctionCall","src":"442:39:6"},"nodeType":"YulExpressionStatement","src":"442:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:6"},"nodeType":"YulFunctionCall","src":"386:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:6","statements":[{"nodeType":"YulAssignment","src":"402:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:6"},"nodeType":"YulFunctionCall","src":"407:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:6","statements":[]},"src":"378:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:6"},"nodeType":"YulFunctionCall","src":"507:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:6"},"nodeType":"YulFunctionCall","src":"500:27:6"},"nodeType":"YulExpressionStatement","src":"500:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:6","type":""}],"src":"287:246:6"},{"body":{"nodeType":"YulBlock","src":"587:54:6","statements":[{"nodeType":"YulAssignment","src":"597:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:6"},"nodeType":"YulFunctionCall","src":"611:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:6"},"nodeType":"YulFunctionCall","src":"627:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:6"},"nodeType":"YulFunctionCall","src":"607:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:6","type":""}],"src":"539:102:6"},{"body":{"nodeType":"YulBlock","src":"739:285:6","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:6"},"nodeType":"YulFunctionCall","src":"763:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:6","type":""}]},{"nodeType":"YulAssignment","src":"811:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:6"},"nodeType":"YulFunctionCall","src":"818:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:6"},"nodeType":"YulFunctionCall","src":"933:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:6"},"nodeType":"YulFunctionCall","src":"898:65:6"},"nodeType":"YulExpressionStatement","src":"898:65:6"},{"nodeType":"YulAssignment","src":"972:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:6"},"nodeType":"YulFunctionCall","src":"988:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:6"},"nodeType":"YulFunctionCall","src":"979:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:6","type":""}],"src":"647:377:6"},{"body":{"nodeType":"YulBlock","src":"1148:195:6","statements":[{"nodeType":"YulAssignment","src":"1158:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:6"},"nodeType":"YulFunctionCall","src":"1166:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:6"},"nodeType":"YulFunctionCall","src":"1201:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:6"},"nodeType":"YulFunctionCall","src":"1220:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:6"},"nodeType":"YulFunctionCall","src":"1194:47:6"},"nodeType":"YulExpressionStatement","src":"1194:47:6"},{"nodeType":"YulAssignment","src":"1250:86:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:6"},"nodeType":"YulFunctionCall","src":"1258:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:6","type":""}],"src":"1030:313:6"},{"body":{"nodeType":"YulBlock","src":"1394:32:6","statements":[{"nodeType":"YulAssignment","src":"1404:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"1415:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1404:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1386:7:6","type":""}],"src":"1349:77:6"},{"body":{"nodeType":"YulBlock","src":"1497:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1514:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1537:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1519:17:6"},"nodeType":"YulFunctionCall","src":"1519:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1507:6:6"},"nodeType":"YulFunctionCall","src":"1507:37:6"},"nodeType":"YulExpressionStatement","src":"1507:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1492:3:6","type":""}],"src":"1432:118:6"},{"body":{"nodeType":"YulBlock","src":"1654:124:6","statements":[{"nodeType":"YulAssignment","src":"1664:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1676:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1687:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:6"},"nodeType":"YulFunctionCall","src":"1672:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1768:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:6"},"nodeType":"YulFunctionCall","src":"1753:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1700:43:6"},"nodeType":"YulFunctionCall","src":"1700:71:6"},"nodeType":"YulExpressionStatement","src":"1700:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1626:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1638:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1649:4:6","type":""}],"src":"1556:222:6"},{"body":{"nodeType":"YulBlock","src":"1824:35:6","statements":[{"nodeType":"YulAssignment","src":"1834:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:6"},"nodeType":"YulFunctionCall","src":"1844:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:6","type":""}],"src":"1784:75:6"},{"body":{"nodeType":"YulBlock","src":"1954:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:6"},"nodeType":"YulFunctionCall","src":"1964:12:6"},"nodeType":"YulExpressionStatement","src":"1964:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:6"},{"body":{"nodeType":"YulBlock","src":"2077:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:6"},"nodeType":"YulFunctionCall","src":"2087:12:6"},"nodeType":"YulExpressionStatement","src":"2087:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:6"},{"body":{"nodeType":"YulBlock","src":"2154:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"2211:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2220:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2223:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2213:6:6"},"nodeType":"YulFunctionCall","src":"2213:12:6"},"nodeType":"YulExpressionStatement","src":"2213:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2177:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2202:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2184:17:6"},"nodeType":"YulFunctionCall","src":"2184:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2174:2:6"},"nodeType":"YulFunctionCall","src":"2174:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2167:6:6"},"nodeType":"YulFunctionCall","src":"2167:43:6"},"nodeType":"YulIf","src":"2164:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2147:5:6","type":""}],"src":"2111:122:6"},{"body":{"nodeType":"YulBlock","src":"2291:87:6","statements":[{"nodeType":"YulAssignment","src":"2301:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2323:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2310:12:6"},"nodeType":"YulFunctionCall","src":"2310:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2301:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2366:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2339:26:6"},"nodeType":"YulFunctionCall","src":"2339:33:6"},"nodeType":"YulExpressionStatement","src":"2339:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2269:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2277:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2285:5:6","type":""}],"src":"2239:139:6"},{"body":{"nodeType":"YulBlock","src":"2450:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"2496:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2498:77:6"},"nodeType":"YulFunctionCall","src":"2498:79:6"},"nodeType":"YulExpressionStatement","src":"2498:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2471:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2467:3:6"},"nodeType":"YulFunctionCall","src":"2467:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2492:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2463:3:6"},"nodeType":"YulFunctionCall","src":"2463:32:6"},"nodeType":"YulIf","src":"2460:119:6"},{"nodeType":"YulBlock","src":"2589:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2604:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2618:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2608:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2633:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2668:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2679:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:6"},"nodeType":"YulFunctionCall","src":"2664:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2688:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2643:20:6"},"nodeType":"YulFunctionCall","src":"2643:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2633:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2420:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2431:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2443:6:6","type":""}],"src":"2384:329:6"},{"body":{"nodeType":"YulBlock","src":"2808:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2828:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2818:6:6"},"nodeType":"YulFunctionCall","src":"2818:12:6"},"nodeType":"YulExpressionStatement","src":"2818:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2719:117:6"},{"body":{"nodeType":"YulBlock","src":"2931:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2941:6:6"},"nodeType":"YulFunctionCall","src":"2941:12:6"},"nodeType":"YulExpressionStatement","src":"2941:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2842:117:6"},{"body":{"nodeType":"YulBlock","src":"2993:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3010:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3013:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:6"},"nodeType":"YulFunctionCall","src":"3003:88:6"},"nodeType":"YulExpressionStatement","src":"3003:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3107:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3110:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3100:6:6"},"nodeType":"YulFunctionCall","src":"3100:15:6"},"nodeType":"YulExpressionStatement","src":"3100:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3131:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3134:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3124:6:6"},"nodeType":"YulFunctionCall","src":"3124:15:6"},"nodeType":"YulExpressionStatement","src":"3124:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2965:180:6"},{"body":{"nodeType":"YulBlock","src":"3194:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3204:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3226:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3256:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3234:21:6"},"nodeType":"YulFunctionCall","src":"3234:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3222:3:6"},"nodeType":"YulFunctionCall","src":"3222:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3208:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3373:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3375:16:6"},"nodeType":"YulFunctionCall","src":"3375:18:6"},"nodeType":"YulExpressionStatement","src":"3375:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3316:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"3328:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3313:2:6"},"nodeType":"YulFunctionCall","src":"3313:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3352:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3364:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3349:2:6"},"nodeType":"YulFunctionCall","src":"3349:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3310:2:6"},"nodeType":"YulFunctionCall","src":"3310:62:6"},"nodeType":"YulIf","src":"3307:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3411:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3415:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3404:6:6"},"nodeType":"YulFunctionCall","src":"3404:22:6"},"nodeType":"YulExpressionStatement","src":"3404:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3180:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"3188:4:6","type":""}],"src":"3151:281:6"},{"body":{"nodeType":"YulBlock","src":"3479:88:6","statements":[{"nodeType":"YulAssignment","src":"3489:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3499:18:6"},"nodeType":"YulFunctionCall","src":"3499:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3489:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3548:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"3556:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3528:19:6"},"nodeType":"YulFunctionCall","src":"3528:33:6"},"nodeType":"YulExpressionStatement","src":"3528:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3463:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3472:6:6","type":""}],"src":"3438:129:6"},{"body":{"nodeType":"YulBlock","src":"3640:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"3745:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3747:16:6"},"nodeType":"YulFunctionCall","src":"3747:18:6"},"nodeType":"YulExpressionStatement","src":"3747:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3717:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:6"},"nodeType":"YulFunctionCall","src":"3714:30:6"},"nodeType":"YulIf","src":"3711:56:6"},{"nodeType":"YulAssignment","src":"3777:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3807:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3785:21:6"},"nodeType":"YulFunctionCall","src":"3785:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3777:4:6"}]},{"nodeType":"YulAssignment","src":"3851:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3863:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"3869:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:6"},"nodeType":"YulFunctionCall","src":"3859:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3851:4:6"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3624:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3635:4:6","type":""}],"src":"3573:308:6"},{"body":{"nodeType":"YulBlock","src":"3951:82:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3974:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"3979:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"3984:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3961:12:6"},"nodeType":"YulFunctionCall","src":"3961:30:6"},"nodeType":"YulExpressionStatement","src":"3961:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4011:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4016:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4007:3:6"},"nodeType":"YulFunctionCall","src":"4007:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"4025:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4000:6:6"},"nodeType":"YulFunctionCall","src":"4000:27:6"},"nodeType":"YulExpressionStatement","src":"4000:27:6"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3933:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3938:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"3943:6:6","type":""}],"src":"3887:146:6"},{"body":{"nodeType":"YulBlock","src":"4123:341:6","statements":[{"nodeType":"YulAssignment","src":"4133:75:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4200:6:6"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4158:41:6"},"nodeType":"YulFunctionCall","src":"4158:49:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4142:15:6"},"nodeType":"YulFunctionCall","src":"4142:66:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4133:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4224:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"4231:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4217:6:6"},"nodeType":"YulFunctionCall","src":"4217:21:6"},"nodeType":"YulExpressionStatement","src":"4217:21:6"},{"nodeType":"YulVariableDeclaration","src":"4247:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4262:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4269:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:6"},"nodeType":"YulFunctionCall","src":"4258:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4251:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4312:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4314:77:6"},"nodeType":"YulFunctionCall","src":"4314:79:6"},"nodeType":"YulExpressionStatement","src":"4314:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4293:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4298:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4289:3:6"},"nodeType":"YulFunctionCall","src":"4289:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"4307:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4286:2:6"},"nodeType":"YulFunctionCall","src":"4286:25:6"},"nodeType":"YulIf","src":"4283:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4441:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"4446:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4451:6:6"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4404:36:6"},"nodeType":"YulFunctionCall","src":"4404:54:6"},"nodeType":"YulExpressionStatement","src":"4404:54:6"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4096:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"4101:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"4109:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4117:5:6","type":""}],"src":"4039:425:6"},{"body":{"nodeType":"YulBlock","src":"4546:278:6","statements":[{"body":{"nodeType":"YulBlock","src":"4595:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4597:77:6"},"nodeType":"YulFunctionCall","src":"4597:79:6"},"nodeType":"YulExpressionStatement","src":"4597:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4574:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4582:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4570:3:6"},"nodeType":"YulFunctionCall","src":"4570:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"4589:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4566:3:6"},"nodeType":"YulFunctionCall","src":"4566:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4559:6:6"},"nodeType":"YulFunctionCall","src":"4559:35:6"},"nodeType":"YulIf","src":"4556:122:6"},{"nodeType":"YulVariableDeclaration","src":"4687:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4714:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4701:12:6"},"nodeType":"YulFunctionCall","src":"4701:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4691:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4730:88:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4791:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:6"},"nodeType":"YulFunctionCall","src":"4787:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"4806:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"4814:3:6"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4739:47:6"},"nodeType":"YulFunctionCall","src":"4739:79:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4730:5:6"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4524:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"4532:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4540:5:6","type":""}],"src":"4484:340:6"},{"body":{"nodeType":"YulBlock","src":"4906:433:6","statements":[{"body":{"nodeType":"YulBlock","src":"4952:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4954:77:6"},"nodeType":"YulFunctionCall","src":"4954:79:6"},"nodeType":"YulExpressionStatement","src":"4954:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4927:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4936:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4923:3:6"},"nodeType":"YulFunctionCall","src":"4923:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4948:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4919:3:6"},"nodeType":"YulFunctionCall","src":"4919:32:6"},"nodeType":"YulIf","src":"4916:119:6"},{"nodeType":"YulBlock","src":"5045:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5060:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5102:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:6"},"nodeType":"YulFunctionCall","src":"5087:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5074:12:6"},"nodeType":"YulFunctionCall","src":"5074:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5064:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5152:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5154:77:6"},"nodeType":"YulFunctionCall","src":"5154:79:6"},"nodeType":"YulExpressionStatement","src":"5154:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5124:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5132:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5121:2:6"},"nodeType":"YulFunctionCall","src":"5121:30:6"},"nodeType":"YulIf","src":"5118:117:6"},{"nodeType":"YulAssignment","src":"5249:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5305:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:6"},"nodeType":"YulFunctionCall","src":"5290:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5314:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5259:30:6"},"nodeType":"YulFunctionCall","src":"5259:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5249:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4876:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4887:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4899:6:6","type":""}],"src":"4830:509:6"},{"body":{"nodeType":"YulBlock","src":"5373:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5390:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5393:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5383:6:6"},"nodeType":"YulFunctionCall","src":"5383:88:6"},"nodeType":"YulExpressionStatement","src":"5383:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5487:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5490:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5480:6:6"},"nodeType":"YulFunctionCall","src":"5480:15:6"},"nodeType":"YulExpressionStatement","src":"5480:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5511:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5514:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5504:6:6"},"nodeType":"YulFunctionCall","src":"5504:15:6"},"nodeType":"YulExpressionStatement","src":"5504:15:6"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5345:180:6"},{"body":{"nodeType":"YulBlock","src":"5582:269:6","statements":[{"nodeType":"YulAssignment","src":"5592:22:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5606:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"5612:1:6","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5602:3:6"},"nodeType":"YulFunctionCall","src":"5602:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5592:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"5623:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5653:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"5659:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5649:3:6"},"nodeType":"YulFunctionCall","src":"5649:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5627:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5700:51:6","statements":[{"nodeType":"YulAssignment","src":"5714:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5728:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5736:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5724:3:6"},"nodeType":"YulFunctionCall","src":"5724:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5714:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5680:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5673:6:6"},"nodeType":"YulFunctionCall","src":"5673:26:6"},"nodeType":"YulIf","src":"5670:81:6"},{"body":{"nodeType":"YulBlock","src":"5803:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5817:16:6"},"nodeType":"YulFunctionCall","src":"5817:18:6"},"nodeType":"YulExpressionStatement","src":"5817:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5767:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5790:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5798:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5787:2:6"},"nodeType":"YulFunctionCall","src":"5787:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5764:2:6"},"nodeType":"YulFunctionCall","src":"5764:38:6"},"nodeType":"YulIf","src":"5761:84:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5566:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5575:6:6","type":""}],"src":"5531:320:6"},{"body":{"nodeType":"YulBlock","src":"5885:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5902:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5905:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5895:6:6"},"nodeType":"YulFunctionCall","src":"5895:88:6"},"nodeType":"YulExpressionStatement","src":"5895:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5999:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6002:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5992:6:6"},"nodeType":"YulFunctionCall","src":"5992:15:6"},"nodeType":"YulExpressionStatement","src":"5992:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6023:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6026:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6016:6:6"},"nodeType":"YulFunctionCall","src":"6016:15:6"},"nodeType":"YulExpressionStatement","src":"6016:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5857:180:6"},{"body":{"nodeType":"YulBlock","src":"6088:149:6","statements":[{"nodeType":"YulAssignment","src":"6098:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6121:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6103:17:6"},"nodeType":"YulFunctionCall","src":"6103:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6098:1:6"}]},{"nodeType":"YulAssignment","src":"6132:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6155:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6137:17:6"},"nodeType":"YulFunctionCall","src":"6137:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6132:1:6"}]},{"nodeType":"YulAssignment","src":"6166:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6178:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6181:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6174:3:6"},"nodeType":"YulFunctionCall","src":"6174:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6166:4:6"}]},{"body":{"nodeType":"YulBlock","src":"6208:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6210:16:6"},"nodeType":"YulFunctionCall","src":"6210:18:6"},"nodeType":"YulExpressionStatement","src":"6210:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6199:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"6205:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6196:2:6"},"nodeType":"YulFunctionCall","src":"6196:11:6"},"nodeType":"YulIf","src":"6193:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6074:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6077:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6083:4:6","type":""}],"src":"6043:194:6"},{"body":{"nodeType":"YulBlock","src":"6297:87:6","statements":[{"nodeType":"YulAssignment","src":"6307:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6315:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6307:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6335:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6338:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:6"},"nodeType":"YulFunctionCall","src":"6328:14:6"},"nodeType":"YulExpressionStatement","src":"6328:14:6"},{"nodeType":"YulAssignment","src":"6351:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6369:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6372:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6359:9:6"},"nodeType":"YulFunctionCall","src":"6359:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6351:4:6"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6284:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6292:4:6","type":""}],"src":"6243:141:6"},{"body":{"nodeType":"YulBlock","src":"6434:49:6","statements":[{"nodeType":"YulAssignment","src":"6444:33:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6462:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"6469:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:6"},"nodeType":"YulFunctionCall","src":"6458:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"6474:2:6","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6454:3:6"},"nodeType":"YulFunctionCall","src":"6454:23:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6444:6:6"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6417:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6427:6:6","type":""}],"src":"6390:93:6"},{"body":{"nodeType":"YulBlock","src":"6542:54:6","statements":[{"nodeType":"YulAssignment","src":"6552:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6577:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"6583:5:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6573:3:6"},"nodeType":"YulFunctionCall","src":"6573:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6552:8:6"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6517:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"6523:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6533:8:6","type":""}],"src":"6489:107:6"},{"body":{"nodeType":"YulBlock","src":"6678:317:6","statements":[{"nodeType":"YulVariableDeclaration","src":"6688:35:6","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"6709:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"6721:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6705:3:6"},"nodeType":"YulFunctionCall","src":"6705:18:6"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"6692:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6732:109:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"6763:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6774:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"6744:18:6"},"nodeType":"YulFunctionCall","src":"6744:97:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6736:4:6","type":""}]},{"nodeType":"YulAssignment","src":"6850:51:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"6881:9:6"},{"name":"toInsert","nodeType":"YulIdentifier","src":"6892:8:6"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"6862:18:6"},"nodeType":"YulFunctionCall","src":"6862:39:6"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6850:8:6"}]},{"nodeType":"YulAssignment","src":"6910:30:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6923:5:6"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6934:4:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6930:3:6"},"nodeType":"YulFunctionCall","src":"6930:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6919:3:6"},"nodeType":"YulFunctionCall","src":"6919:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6910:5:6"}]},{"nodeType":"YulAssignment","src":"6949:40:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6962:5:6"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6973:8:6"},{"name":"mask","nodeType":"YulIdentifier","src":"6983:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6969:3:6"},"nodeType":"YulFunctionCall","src":"6969:19:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6959:2:6"},"nodeType":"YulFunctionCall","src":"6959:30:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6949:6:6"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6639:5:6","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"6646:10:6","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"6658:8:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6671:6:6","type":""}],"src":"6602:393:6"},{"body":{"nodeType":"YulBlock","src":"7033:28:6","statements":[{"nodeType":"YulAssignment","src":"7043:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"7050:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7043:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7019:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7029:3:6","type":""}],"src":"7001:60:6"},{"body":{"nodeType":"YulBlock","src":"7127:82:6","statements":[{"nodeType":"YulAssignment","src":"7137:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7177:17:6"},"nodeType":"YulFunctionCall","src":"7177:24:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7168:8:6"},"nodeType":"YulFunctionCall","src":"7168:34:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7150:17:6"},"nodeType":"YulFunctionCall","src":"7150:53:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7137:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7107:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7117:9:6","type":""}],"src":"7067:142:6"},{"body":{"nodeType":"YulBlock","src":"7262:28:6","statements":[{"nodeType":"YulAssignment","src":"7272:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"7279:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7272:3:6"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7248:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7258:3:6","type":""}],"src":"7215:75:6"},{"body":{"nodeType":"YulBlock","src":"7372:193:6","statements":[{"nodeType":"YulVariableDeclaration","src":"7382:63:6","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"7437:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7406:30:6"},"nodeType":"YulFunctionCall","src":"7406:39:6"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"7386:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7461:4:6"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7501:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7495:5:6"},"nodeType":"YulFunctionCall","src":"7495:11:6"},{"name":"offset","nodeType":"YulIdentifier","src":"7508:6:6"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"7540:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"7516:23:6"},"nodeType":"YulFunctionCall","src":"7516:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"7467:27:6"},"nodeType":"YulFunctionCall","src":"7467:91:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7454:6:6"},"nodeType":"YulFunctionCall","src":"7454:105:6"},"nodeType":"YulExpressionStatement","src":"7454:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7349:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"7355:6:6","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"7363:7:6","type":""}],"src":"7296:269:6"},{"body":{"nodeType":"YulBlock","src":"7620:24:6","statements":[{"nodeType":"YulAssignment","src":"7630:8:6","value":{"kind":"number","nodeType":"YulLiteral","src":"7637:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7630:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7616:3:6","type":""}],"src":"7571:73:6"},{"body":{"nodeType":"YulBlock","src":"7703:136:6","statements":[{"nodeType":"YulVariableDeclaration","src":"7713:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"7727:30:6"},"nodeType":"YulFunctionCall","src":"7727:32:6"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"7717:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7812:4:6"},{"name":"offset","nodeType":"YulIdentifier","src":"7818:6:6"},{"name":"zero_0","nodeType":"YulIdentifier","src":"7826:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7768:43:6"},"nodeType":"YulFunctionCall","src":"7768:65:6"},"nodeType":"YulExpressionStatement","src":"7768:65:6"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7689:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"7695:6:6","type":""}],"src":"7650:189:6"},{"body":{"nodeType":"YulBlock","src":"7895:136:6","statements":[{"body":{"nodeType":"YulBlock","src":"7962:63:6","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8006:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"8013:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"7976:29:6"},"nodeType":"YulFunctionCall","src":"7976:39:6"},"nodeType":"YulExpressionStatement","src":"7976:39:6"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7915:5:6"},{"name":"end","nodeType":"YulIdentifier","src":"7922:3:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7912:2:6"},"nodeType":"YulFunctionCall","src":"7912:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7927:26:6","statements":[{"nodeType":"YulAssignment","src":"7929:22:6","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7942:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"7949:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7938:3:6"},"nodeType":"YulFunctionCall","src":"7938:13:6"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7929:5:6"}]}]},"pre":{"nodeType":"YulBlock","src":"7909:2:6","statements":[]},"src":"7905:120:6"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"7883:5:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"7890:3:6","type":""}],"src":"7845:186:6"},{"body":{"nodeType":"YulBlock","src":"8116:464:6","statements":[{"body":{"nodeType":"YulBlock","src":"8142:431:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8156:54:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8204:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8172:31:6"},"nodeType":"YulFunctionCall","src":"8172:38:6"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8160:8:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8223:63:6","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8246:8:6"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8274:10:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8256:17:6"},"nodeType":"YulFunctionCall","src":"8256:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8242:3:6"},"nodeType":"YulFunctionCall","src":"8242:44:6"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8227:11:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8443:27:6","statements":[{"nodeType":"YulAssignment","src":"8445:23:6","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"8460:8:6"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8445:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8427:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"8439:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8424:2:6"},"nodeType":"YulFunctionCall","src":"8424:18:6"},"nodeType":"YulIf","src":"8421:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8512:11:6"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8529:8:6"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8557:3:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8539:17:6"},"nodeType":"YulFunctionCall","src":"8539:22:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8525:3:6"},"nodeType":"YulFunctionCall","src":"8525:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"8483:28:6"},"nodeType":"YulFunctionCall","src":"8483:80:6"},"nodeType":"YulExpressionStatement","src":"8483:80:6"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8133:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8138:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8130:2:6"},"nodeType":"YulFunctionCall","src":"8130:11:6"},"nodeType":"YulIf","src":"8127:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8092:5:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"8099:3:6","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8104:10:6","type":""}],"src":"8037:543:6"},{"body":{"nodeType":"YulBlock","src":"8649:54:6","statements":[{"nodeType":"YulAssignment","src":"8659:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8684:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"8690:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8680:3:6"},"nodeType":"YulFunctionCall","src":"8680:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8659:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"8624:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"8630:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8640:8:6","type":""}],"src":"8586:117:6"},{"body":{"nodeType":"YulBlock","src":"8760:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8770:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8819:1:6","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"8822:5:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8815:3:6"},"nodeType":"YulFunctionCall","src":"8815:13:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8834:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8830:3:6"},"nodeType":"YulFunctionCall","src":"8830:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"8786:28:6"},"nodeType":"YulFunctionCall","src":"8786:51:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8782:3:6"},"nodeType":"YulFunctionCall","src":"8782:56:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8774:4:6","type":""}]},{"nodeType":"YulAssignment","src":"8847:25:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8861:4:6"},{"name":"mask","nodeType":"YulIdentifier","src":"8867:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8857:3:6"},"nodeType":"YulFunctionCall","src":"8857:15:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8847:6:6"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8737:4:6","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"8743:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8753:6:6","type":""}],"src":"8709:169:6"},{"body":{"nodeType":"YulBlock","src":"8964:214:6","statements":[{"nodeType":"YulAssignment","src":"9097:37:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9124:4:6"},{"name":"len","nodeType":"YulIdentifier","src":"9130:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9105:18:6"},"nodeType":"YulFunctionCall","src":"9105:29:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9097:4:6"}]},{"nodeType":"YulAssignment","src":"9143:29:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9154:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9164:1:6","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"9167:3:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9160:3:6"},"nodeType":"YulFunctionCall","src":"9160:11:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9151:2:6"},"nodeType":"YulFunctionCall","src":"9151:21:6"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9143:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8945:4:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"8951:3:6","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8959:4:6","type":""}],"src":"8883:295:6"},{"body":{"nodeType":"YulBlock","src":"9275:1303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9286:51:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9333:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9300:32:6"},"nodeType":"YulFunctionCall","src":"9300:37:6"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9290:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"9422:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9424:16:6"},"nodeType":"YulFunctionCall","src":"9424:18:6"},"nodeType":"YulExpressionStatement","src":"9424:18:6"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9394:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"9402:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9391:2:6"},"nodeType":"YulFunctionCall","src":"9391:30:6"},"nodeType":"YulIf","src":"9388:56:6"},{"nodeType":"YulVariableDeclaration","src":"9454:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9500:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9494:5:6"},"nodeType":"YulFunctionCall","src":"9494:11:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9468:25:6"},"nodeType":"YulFunctionCall","src":"9468:38:6"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"9458:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9599:4:6"},{"name":"oldLen","nodeType":"YulIdentifier","src":"9605:6:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"9613:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"9553:45:6"},"nodeType":"YulFunctionCall","src":"9553:67:6"},"nodeType":"YulExpressionStatement","src":"9553:67:6"},{"nodeType":"YulVariableDeclaration","src":"9630:18:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9647:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9634:9:6","type":""}]},{"nodeType":"YulAssignment","src":"9658:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9671:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9658:9:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9722:611:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9736:37:6","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9755:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9767:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9763:3:6"},"nodeType":"YulFunctionCall","src":"9763:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9751:3:6"},"nodeType":"YulFunctionCall","src":"9751:22:6"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9740:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9787:51:6","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9833:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"9801:31:6"},"nodeType":"YulFunctionCall","src":"9801:37:6"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9791:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9851:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9860:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9855:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"9919:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9944:6:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9962:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9967:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9958:3:6"},"nodeType":"YulFunctionCall","src":"9958:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9952:5:6"},"nodeType":"YulFunctionCall","src":"9952:26:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9937:6:6"},"nodeType":"YulFunctionCall","src":"9937:42:6"},"nodeType":"YulExpressionStatement","src":"9937:42:6"},{"nodeType":"YulAssignment","src":"9996:24:6","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10010:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10018:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:6"},"nodeType":"YulFunctionCall","src":"10006:14:6"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9996:6:6"}]},{"nodeType":"YulAssignment","src":"10037:31:6","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10054:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10065:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10050:3:6"},"nodeType":"YulFunctionCall","src":"10050:18:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10037:9:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9885:1:6"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9888:7:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9882:2:6"},"nodeType":"YulFunctionCall","src":"9882:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9897:21:6","statements":[{"nodeType":"YulAssignment","src":"9899:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9908:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"9911:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9904:3:6"},"nodeType":"YulFunctionCall","src":"9904:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9899:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"9878:3:6","statements":[]},"src":"9874:208:6"},{"body":{"nodeType":"YulBlock","src":"10118:156:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10136:43:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10163:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10168:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10159:3:6"},"nodeType":"YulFunctionCall","src":"10159:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10153:5:6"},"nodeType":"YulFunctionCall","src":"10153:26:6"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10140:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10203:6:6"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10230:9:6"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10245:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10253:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10241:3:6"},"nodeType":"YulFunctionCall","src":"10241:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10211:18:6"},"nodeType":"YulFunctionCall","src":"10211:48:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10196:6:6"},"nodeType":"YulFunctionCall","src":"10196:64:6"},"nodeType":"YulExpressionStatement","src":"10196:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10101:7:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"10110:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10098:2:6"},"nodeType":"YulFunctionCall","src":"10098:19:6"},"nodeType":"YulIf","src":"10095:179:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10294:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10308:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10316:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10304:3:6"},"nodeType":"YulFunctionCall","src":"10304:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"10320:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10300:3:6"},"nodeType":"YulFunctionCall","src":"10300:22:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10287:6:6"},"nodeType":"YulFunctionCall","src":"10287:36:6"},"nodeType":"YulExpressionStatement","src":"10287:36:6"}]},"nodeType":"YulCase","src":"9715:618:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9720:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10350:222:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10364:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"10377:1:6","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10368:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"10401:67:6","statements":[{"nodeType":"YulAssignment","src":"10419:35:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10438:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10443:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10434:3:6"},"nodeType":"YulFunctionCall","src":"10434:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10428:5:6"},"nodeType":"YulFunctionCall","src":"10428:26:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10419:5:6"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10394:6:6"},"nodeType":"YulIf","src":"10391:77:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10488:4:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10547:5:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"10554:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10494:52:6"},"nodeType":"YulFunctionCall","src":"10494:67:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10481:6:6"},"nodeType":"YulFunctionCall","src":"10481:81:6"},"nodeType":"YulExpressionStatement","src":"10481:81:6"}]},"nodeType":"YulCase","src":"10342:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9695:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"9703:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9692:2:6"},"nodeType":"YulFunctionCall","src":"9692:14:6"},"nodeType":"YulSwitch","src":"9685:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9264:4:6","type":""},{"name":"src","nodeType":"YulTypedName","src":"9270:3:6","type":""}],"src":"9183:1395:6"},{"body":{"nodeType":"YulBlock","src":"10697:742:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10707:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10730:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10724:5:6"},"nodeType":"YulFunctionCall","src":"10724:12:6"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"10711:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10745:50:6","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10785:9:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10759:25:6"},"nodeType":"YulFunctionCall","src":"10759:36:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10749:6:6","type":""}]},{"nodeType":"YulAssignment","src":"10804:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10870:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"10875:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10811:58:6"},"nodeType":"YulFunctionCall","src":"10811:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10804:3:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10931:157:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10984:3:6"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10993:9:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11008:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11004:3:6"},"nodeType":"YulFunctionCall","src":"11004:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10989:3:6"},"nodeType":"YulFunctionCall","src":"10989:25:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10977:6:6"},"nodeType":"YulFunctionCall","src":"10977:38:6"},"nodeType":"YulExpressionStatement","src":"10977:38:6"},{"nodeType":"YulAssignment","src":"11028:50:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11039:3:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11048:4:6","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11068:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11061:6:6"},"nodeType":"YulFunctionCall","src":"11061:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11054:6:6"},"nodeType":"YulFunctionCall","src":"11054:22:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11044:3:6"},"nodeType":"YulFunctionCall","src":"11044:33:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:6"},"nodeType":"YulFunctionCall","src":"11035:43:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11028:3:6"}]}]},"nodeType":"YulCase","src":"10924:164:6","value":{"kind":"number","nodeType":"YulLiteral","src":"10929:1:6","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11104:329:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11149:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11196:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11164:31:6"},"nodeType":"YulFunctionCall","src":"11164:38:6"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"11153:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11215:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11224:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11219:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11282:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11311:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"11316:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11307:3:6"},"nodeType":"YulFunctionCall","src":"11307:11:6"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11326:7:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11320:5:6"},"nodeType":"YulFunctionCall","src":"11320:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11300:6:6"},"nodeType":"YulFunctionCall","src":"11300:35:6"},"nodeType":"YulExpressionStatement","src":"11300:35:6"},{"nodeType":"YulAssignment","src":"11352:26:6","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11367:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"11376:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11363:3:6"},"nodeType":"YulFunctionCall","src":"11363:15:6"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"11352:7:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11249:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"11252:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11246:2:6"},"nodeType":"YulFunctionCall","src":"11246:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11260:21:6","statements":[{"nodeType":"YulAssignment","src":"11262:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11271:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"11274:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11267:3:6"},"nodeType":"YulFunctionCall","src":"11267:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11262:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"11242:3:6","statements":[]},"src":"11238:154:6"},{"nodeType":"YulAssignment","src":"11405:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11416:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"11421:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11412:3:6"},"nodeType":"YulFunctionCall","src":"11412:11:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11405:3:6"}]}]},"nodeType":"YulCase","src":"11097:336:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11102:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"10902:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10913:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10898:3:6"},"nodeType":"YulFunctionCall","src":"10898:17:6"},"nodeType":"YulSwitch","src":"10891:542:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10678:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10685:3:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10693:3:6","type":""}],"src":"10608:831:6"},{"body":{"nodeType":"YulBlock","src":"11560:192:6","statements":[{"nodeType":"YulAssignment","src":"11570:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11582:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11593:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11578:3:6"},"nodeType":"YulFunctionCall","src":"11578:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11570:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11617:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11628:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11613:3:6"},"nodeType":"YulFunctionCall","src":"11613:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11636:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"11642:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11632:3:6"},"nodeType":"YulFunctionCall","src":"11632:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11606:6:6"},"nodeType":"YulFunctionCall","src":"11606:47:6"},"nodeType":"YulExpressionStatement","src":"11606:47:6"},{"nodeType":"YulAssignment","src":"11662:83:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11731:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"11740:4:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11670:60:6"},"nodeType":"YulFunctionCall","src":"11670:75:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11662:4:6"}]}]},"name":"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11532:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11544:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11555:4:6","type":""}],"src":"11445:307:6"},{"body":{"nodeType":"YulBlock","src":"11802:147:6","statements":[{"nodeType":"YulAssignment","src":"11812:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11835:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11817:17:6"},"nodeType":"YulFunctionCall","src":"11817:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11812:1:6"}]},{"nodeType":"YulAssignment","src":"11846:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11869:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11851:17:6"},"nodeType":"YulFunctionCall","src":"11851:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11846:1:6"}]},{"nodeType":"YulAssignment","src":"11880:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11891:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"11894:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11887:3:6"},"nodeType":"YulFunctionCall","src":"11887:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11880:3:6"}]},{"body":{"nodeType":"YulBlock","src":"11920:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11922:16:6"},"nodeType":"YulFunctionCall","src":"11922:18:6"},"nodeType":"YulExpressionStatement","src":"11922:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11912:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"11915:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11909:2:6"},"nodeType":"YulFunctionCall","src":"11909:10:6"},"nodeType":"YulIf","src":"11906:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11789:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"11792:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11798:3:6","type":""}],"src":"11758:191:6"},{"body":{"nodeType":"YulBlock","src":"12061:127:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12083:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12091:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:6"},"nodeType":"YulFunctionCall","src":"12079:14:6"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"12095:34:6","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12072:6:6"},"nodeType":"YulFunctionCall","src":"12072:58:6"},"nodeType":"YulExpressionStatement","src":"12072:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12151:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12159:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12147:3:6"},"nodeType":"YulFunctionCall","src":"12147:15:6"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"12164:16:6","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12140:6:6"},"nodeType":"YulFunctionCall","src":"12140:41:6"},"nodeType":"YulExpressionStatement","src":"12140:41:6"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12053:6:6","type":""}],"src":"11955:233:6"},{"body":{"nodeType":"YulBlock","src":"12340:220:6","statements":[{"nodeType":"YulAssignment","src":"12350:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12416:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12421:2:6","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12357:58:6"},"nodeType":"YulFunctionCall","src":"12357:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12350:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12522:3:6"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"12433:88:6"},"nodeType":"YulFunctionCall","src":"12433:93:6"},"nodeType":"YulExpressionStatement","src":"12433:93:6"},{"nodeType":"YulAssignment","src":"12535:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12546:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12551:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12542:3:6"},"nodeType":"YulFunctionCall","src":"12542:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12535:3:6"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12328:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12336:3:6","type":""}],"src":"12194:366:6"},{"body":{"nodeType":"YulBlock","src":"12737:248:6","statements":[{"nodeType":"YulAssignment","src":"12747:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12759:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12770:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12755:3:6"},"nodeType":"YulFunctionCall","src":"12755:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12747:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12794:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12805:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12790:3:6"},"nodeType":"YulFunctionCall","src":"12790:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12813:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"12819:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12809:3:6"},"nodeType":"YulFunctionCall","src":"12809:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12783:6:6"},"nodeType":"YulFunctionCall","src":"12783:47:6"},"nodeType":"YulExpressionStatement","src":"12783:47:6"},{"nodeType":"YulAssignment","src":"12839:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12973:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12847:124:6"},"nodeType":"YulFunctionCall","src":"12847:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12839:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12717:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12732:4:6","type":""}],"src":"12566:419:6"},{"body":{"nodeType":"YulBlock","src":"13044:32:6","statements":[{"nodeType":"YulAssignment","src":"13054:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"13065:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13054:7:6"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13026:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13036:7:6","type":""}],"src":"12991:85:6"},{"body":{"nodeType":"YulBlock","src":"13125:43:6","statements":[{"nodeType":"YulAssignment","src":"13135:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13150:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13157:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13146:3:6"},"nodeType":"YulFunctionCall","src":"13146:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13135:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13107:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13117:7:6","type":""}],"src":"13082:86:6"},{"body":{"nodeType":"YulBlock","src":"13240:88:6","statements":[{"nodeType":"YulAssignment","src":"13250:72:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13314:5:6"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"13288:25:6"},"nodeType":"YulFunctionCall","src":"13288:32:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"13279:8:6"},"nodeType":"YulFunctionCall","src":"13279:42:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"13263:15:6"},"nodeType":"YulFunctionCall","src":"13263:59:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13250:9:6"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13220:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13230:9:6","type":""}],"src":"13174:154:6"},{"body":{"nodeType":"YulBlock","src":"13405:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13422:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13464:5:6"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"13427:36:6"},"nodeType":"YulFunctionCall","src":"13427:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13415:6:6"},"nodeType":"YulFunctionCall","src":"13415:56:6"},"nodeType":"YulExpressionStatement","src":"13415:56:6"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13393:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13400:3:6","type":""}],"src":"13334:143:6"},{"body":{"nodeType":"YulBlock","src":"13587:130:6","statements":[{"nodeType":"YulAssignment","src":"13597:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13609:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13620:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13605:3:6"},"nodeType":"YulFunctionCall","src":"13605:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13597:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13683:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13696:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13707:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13692:3:6"},"nodeType":"YulFunctionCall","src":"13692:17:6"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"13633:49:6"},"nodeType":"YulFunctionCall","src":"13633:77:6"},"nodeType":"YulExpressionStatement","src":"13633:77:6"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13559:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13571:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13582:4:6","type":""}],"src":"13483:234:6"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063552410771161005b57806355241077146100c8578063c47f0027146100e4578063d09de08a14610100578063fe4b84df1461010a5761007d565b806306fdde03146100825780632e64cec1146100a057806345219b0e146100be575b600080fd5b61008a610126565b6040516100979190610477565b60405180910390f35b6100a86101b4565b6040516100b591906104b2565b60405180910390f35b6100c66101be565b005b6100e260048036038101906100dd919061050d565b6101dc565b005b6100fe60048036038101906100f9919061066f565b61021d565b005b610108610268565b005b610124600480360381019061011f919061050d565b610286565b005b60028054610133906106e7565b80601f016020809104026020016040519081016040528092919081815260200182805461015f906106e7565b80156101ac5780601f10610181576101008083540402835291602001916101ac565b820191906000526020600020905b81548152906001019060200180831161018f57829003601f168201915b505050505081565b6000600154905090565b6101da60016101cb6101b4565b6101d59190610747565b6101dc565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c598160405161021291906104b2565b60405180910390a150565b806002908161022c9190610927565b507f4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc600260405161025d9190610a7d565b60405180910390a150565b61028460016102756101b4565b61027f9190610a9f565b6101dc565b565b60008060019054906101000a900460ff161590508080156102b75750600160008054906101000a900460ff1660ff16105b806102e457506102c6306103c4565b1580156102e35750600160008054906101000a900460ff1660ff16145b5b610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a90610b45565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610360576001600060016101000a81548160ff0219169083151502179055505b8160018190555080156103c05760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103b79190610bad565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610421578082015181840152602081019050610406565b60008484015250505050565b6000601f19601f8301169050919050565b6000610449826103e7565b61045381856103f2565b9350610463818560208601610403565b61046c8161042d565b840191505092915050565b60006020820190508181036000830152610491818461043e565b905092915050565b6000819050919050565b6104ac81610499565b82525050565b60006020820190506104c760008301846104a3565b92915050565b6000604051905090565b600080fd5b600080fd5b6104ea81610499565b81146104f557600080fd5b50565b600081359050610507816104e1565b92915050565b600060208284031215610523576105226104d7565b5b6000610531848285016104f8565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61057c8261042d565b810181811067ffffffffffffffff8211171561059b5761059a610544565b5b80604052505050565b60006105ae6104cd565b90506105ba8282610573565b919050565b600067ffffffffffffffff8211156105da576105d9610544565b5b6105e38261042d565b9050602081019050919050565b82818337600083830152505050565b600061061261060d846105bf565b6105a4565b90508281526020810184848401111561062e5761062d61053f565b5b6106398482856105f0565b509392505050565b600082601f8301126106565761065561053a565b5b81356106668482602086016105ff565b91505092915050565b600060208284031215610685576106846104d7565b5b600082013567ffffffffffffffff8111156106a3576106a26104dc565b5b6106af84828501610641565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106ff57607f821691505b602082108103610712576107116106b8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061075282610499565b915061075d83610499565b925082820390508181111561077557610774610718565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107a0565b6107e786836107a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061082461081f61081a84610499565b6107ff565b610499565b9050919050565b6000819050919050565b61083e83610809565b61085261084a8261082b565b8484546107ad565b825550505050565b600090565b61086761085a565b610872818484610835565b505050565b5b818110156108965761088b60008261085f565b600181019050610878565b5050565b601f8211156108db576108ac8161077b565b6108b584610790565b810160208510156108c4578190505b6108d86108d085610790565b830182610877565b50505b505050565b600082821c905092915050565b60006108fe600019846008026108e0565b1980831691505092915050565b600061091783836108ed565b9150826002028217905092915050565b610930826103e7565b67ffffffffffffffff81111561094957610948610544565b5b61095382546106e7565b61095e82828561089a565b600060209050601f831160018114610991576000841561097f578287015190505b610989858261090b565b8655506109f1565b601f19841661099f8661077b565b60005b828110156109c7578489015182556001820191506020850194506020810190506109a2565b868310156109e457848901516109e0601f8916826108ed565b8355505b6001600288020188555050505b505050505050565b60008154610a06816106e7565b610a1081866103f2565b94506001821660008114610a2b5760018114610a4157610a74565b60ff198316865281151560200286019350610a74565b610a4a8561077b565b60005b83811015610a6c57815481890152600182019150602081019050610a4d565b808801955050505b50505092915050565b60006020820190508181036000830152610a9781846109f9565b905092915050565b6000610aaa82610499565b9150610ab583610499565b9250828201905080821115610acd57610acc610718565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610b2f602e836103f2565b9150610b3a82610ad3565b604082019050919050565b60006020820190508181036000830152610b5e81610b22565b9050919050565b6000819050919050565b600060ff82169050919050565b6000610b97610b92610b8d84610b65565b6107ff565b610b6f565b9050919050565b610ba781610b7c565b82525050565b6000602082019050610bc26000830184610b9e565b9291505056fea26469706673582212205e783a9ac453719d304608bef04a67b379bcf44bc03a4bf7ea799278431e896e64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55241077 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x1BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x268 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x50D JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x133 SWAP1 PUSH2 0x6E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F SWAP1 PUSH2 0x6E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x181 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DA PUSH1 0x1 PUSH2 0x1CB PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST POP PUSH32 0x4737457377F528CC8AFD815F73ECB8B05DF80D047DBFFC41C17750A4033592BC PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x284 PUSH1 0x1 PUSH2 0x275 PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x2B7 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x2E4 JUMPI POP PUSH2 0x2C6 ADDRESS PUSH2 0x3C4 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x2E3 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x421 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x406 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x449 DUP3 PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x453 DUP2 DUP6 PUSH2 0x3F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x463 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x403 JUMP JUMPDEST PUSH2 0x46C DUP2 PUSH2 0x42D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x491 DUP2 DUP5 PUSH2 0x43E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AC DUP2 PUSH2 0x499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4EA DUP2 PUSH2 0x499 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x507 DUP2 PUSH2 0x4E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x523 JUMPI PUSH2 0x522 PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP5 DUP3 DUP6 ADD PUSH2 0x4F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x57C DUP3 PUSH2 0x42D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x544 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE PUSH2 0x4CD JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA DUP3 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x544 JUMP JUMPDEST JUMPDEST PUSH2 0x5E3 DUP3 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x612 PUSH2 0x60D DUP5 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62D PUSH2 0x53F JUMP JUMPDEST JUMPDEST PUSH2 0x639 DUP5 DUP3 DUP6 PUSH2 0x5F0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x656 JUMPI PUSH2 0x655 PUSH2 0x53A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x666 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x685 JUMPI PUSH2 0x684 PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x4DC JUMP JUMPDEST JUMPDEST PUSH2 0x6AF DUP5 DUP3 DUP6 ADD PUSH2 0x641 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x6B8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x752 DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP2 POP PUSH2 0x75D DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x775 JUMPI PUSH2 0x774 PUSH2 0x718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x7DD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x7E7 DUP7 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x824 PUSH2 0x81F PUSH2 0x81A DUP5 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83E DUP4 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x852 PUSH2 0x84A DUP3 PUSH2 0x82B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x867 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x872 DUP2 DUP5 DUP5 PUSH2 0x835 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x896 JUMPI PUSH2 0x88B PUSH1 0x0 DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x878 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8DB JUMPI PUSH2 0x8AC DUP2 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x8B5 DUP5 PUSH2 0x790 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8D8 PUSH2 0x8D0 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x877 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8E0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x917 DUP4 DUP4 PUSH2 0x8ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x930 DUP3 PUSH2 0x3E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x949 JUMPI PUSH2 0x948 PUSH2 0x544 JUMP JUMPDEST JUMPDEST PUSH2 0x953 DUP3 SLOAD PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x95E DUP3 DUP3 DUP6 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x97F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x989 DUP6 DUP3 PUSH2 0x90B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x99F DUP7 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0xA06 DUP2 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0xA10 DUP2 DUP7 PUSH2 0x3F2 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xA2B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xA41 JUMPI PUSH2 0xA74 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0xA74 JUMP JUMPDEST PUSH2 0xA4A DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6C JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4D JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA97 DUP2 DUP5 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAA DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACC PUSH2 0x718 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2F PUSH1 0x2E DUP4 PUSH2 0x3F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3A DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5E DUP2 PUSH2 0xB22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB97 PUSH2 0xB92 PUSH2 0xB8D DUP5 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST PUSH2 0xB6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E PUSH25 0x3A9AC453719D304608BEF04A67B379BCF44BC03A4BF7EA7992 PUSH25 0x431E896E64736F6C6343000812003300000000000000000000 ","sourceMap":"313:259:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;836:79:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:64:3;;;:::i;:::-;;689:113:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;464:106:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;390:67:3;;;:::i;:::-;;459:94:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;403:18:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;836:79:2:-;877:7;903:5;;896:12;;836:79;:::o;497:64:3:-;532:22;552:1;541:10;:8;:10::i;:::-;:12;;;;:::i;:::-;532:8;:22::i;:::-;497:64::o;689:113:2:-;750:8;742:5;:16;;;;773:22;786:8;773:22;;;;;;:::i;:::-;;;;;;;;689:113;:::o;464:106:4:-;526:5;519:4;:12;;;;;;:::i;:::-;;546:17;558:4;546:17;;;;;;:::i;:::-;;;;;;;;464:106;:::o;390:67:3:-;428:22;448:1;437:10;:8;:10::i;:::-;:12;;;;:::i;:::-;428:8;:22::i;:::-;390:67::o;459:94:2:-;3268:19:0;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;536:10:2::1;528:5;:18;;;;3640:14:0::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;459:94:2;:::o;1186:320:1:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:75::-;1817:6;1850:2;1844:9;1834:19;;1784:75;:::o;1865:117::-;1974:1;1971;1964:12;1988:117;2097:1;2094;2087:12;2111:122;2184:24;2202:5;2184:24;:::i;:::-;2177:5;2174:35;2164:63;;2223:1;2220;2213:12;2164:63;2111:122;:::o;2239:139::-;2285:5;2323:6;2310:20;2301:29;;2339:33;2366:5;2339:33;:::i;:::-;2239:139;;;;:::o;2384:329::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:53;2688:7;2679:6;2668:9;2664:22;2643:53;:::i;:::-;2633:63;;2589:117;2384:329;;;;:::o;2719:117::-;2828:1;2825;2818:12;2842:117;2951:1;2948;2941:12;2965:180;3013:77;3010:1;3003:88;3110:4;3107:1;3100:15;3134:4;3131:1;3124:15;3151:281;3234:27;3256:4;3234:27;:::i;:::-;3226:6;3222:40;3364:6;3352:10;3349:22;3328:18;3316:10;3313:34;3310:62;3307:88;;;3375:18;;:::i;:::-;3307:88;3415:10;3411:2;3404:22;3194:238;3151:281;;:::o;3438:129::-;3472:6;3499:20;;:::i;:::-;3489:30;;3528:33;3556:4;3548:6;3528:33;:::i;:::-;3438:129;;;:::o;3573:308::-;3635:4;3725:18;3717:6;3714:30;3711:56;;;3747:18;;:::i;:::-;3711:56;3785:29;3807:6;3785:29;:::i;:::-;3777:37;;3869:4;3863;3859:15;3851:23;;3573:308;;;:::o;3887:146::-;3984:6;3979:3;3974;3961:30;4025:1;4016:6;4011:3;4007:16;4000:27;3887:146;;;:::o;4039:425::-;4117:5;4142:66;4158:49;4200:6;4158:49;:::i;:::-;4142:66;:::i;:::-;4133:75;;4231:6;4224:5;4217:21;4269:4;4262:5;4258:16;4307:3;4298:6;4293:3;4289:16;4286:25;4283:112;;;4314:79;;:::i;:::-;4283:112;4404:54;4451:6;4446:3;4441;4404:54;:::i;:::-;4123:341;4039:425;;;;;:::o;4484:340::-;4540:5;4589:3;4582:4;4574:6;4570:17;4566:27;4556:122;;4597:79;;:::i;:::-;4556:122;4714:6;4701:20;4739:79;4814:3;4806:6;4799:4;4791:6;4787:17;4739:79;:::i;:::-;4730:88;;4546:278;4484:340;;;;:::o;4830:509::-;4899:6;4948:2;4936:9;4927:7;4923:23;4919:32;4916:119;;;4954:79;;:::i;:::-;4916:119;5102:1;5091:9;5087:17;5074:31;5132:18;5124:6;5121:30;5118:117;;;5154:79;;:::i;:::-;5118:117;5259:63;5314:7;5305:6;5294:9;5290:22;5259:63;:::i;:::-;5249:73;;5045:287;4830:509;;;;:::o;5345:180::-;5393:77;5390:1;5383:88;5490:4;5487:1;5480:15;5514:4;5511:1;5504:15;5531:320;5575:6;5612:1;5606:4;5602:12;5592:22;;5659:1;5653:4;5649:12;5680:18;5670:81;;5736:4;5728:6;5724:17;5714:27;;5670:81;5798:2;5790:6;5787:14;5767:18;5764:38;5761:84;;5817:18;;:::i;:::-;5761:84;5582:269;5531:320;;;:::o;5857:180::-;5905:77;5902:1;5895:88;6002:4;5999:1;5992:15;6026:4;6023:1;6016:15;6043:194;6083:4;6103:20;6121:1;6103:20;:::i;:::-;6098:25;;6137:20;6155:1;6137:20;:::i;:::-;6132:25;;6181:1;6178;6174:9;6166:17;;6205:1;6199:4;6196:11;6193:37;;;6210:18;;:::i;:::-;6193:37;6043:194;;;;:::o;6243:141::-;6292:4;6315:3;6307:11;;6338:3;6335:1;6328:14;6372:4;6369:1;6359:18;6351:26;;6243:141;;;:::o;6390:93::-;6427:6;6474:2;6469;6462:5;6458:14;6454:23;6444:33;;6390:93;;;:::o;6489:107::-;6533:8;6583:5;6577:4;6573:16;6552:37;;6489:107;;;;:::o;6602:393::-;6671:6;6721:1;6709:10;6705:18;6744:97;6774:66;6763:9;6744:97;:::i;:::-;6862:39;6892:8;6881:9;6862:39;:::i;:::-;6850:51;;6934:4;6930:9;6923:5;6919:21;6910:30;;6983:4;6973:8;6969:19;6962:5;6959:30;6949:40;;6678:317;;6602:393;;;;;:::o;7001:60::-;7029:3;7050:5;7043:12;;7001:60;;;:::o;7067:142::-;7117:9;7150:53;7168:34;7177:24;7195:5;7177:24;:::i;:::-;7168:34;:::i;:::-;7150:53;:::i;:::-;7137:66;;7067:142;;;:::o;7215:75::-;7258:3;7279:5;7272:12;;7215:75;;;:::o;7296:269::-;7406:39;7437:7;7406:39;:::i;:::-;7467:91;7516:41;7540:16;7516:41;:::i;:::-;7508:6;7501:4;7495:11;7467:91;:::i;:::-;7461:4;7454:105;7372:193;7296:269;;;:::o;7571:73::-;7616:3;7571:73;:::o;7650:189::-;7727:32;;:::i;:::-;7768:65;7826:6;7818;7812:4;7768:65;:::i;:::-;7703:136;7650:189;;:::o;7845:186::-;7905:120;7922:3;7915:5;7912:14;7905:120;;;7976:39;8013:1;8006:5;7976:39;:::i;:::-;7949:1;7942:5;7938:13;7929:22;;7905:120;;;7845:186;;:::o;8037:543::-;8138:2;8133:3;8130:11;8127:446;;;8172:38;8204:5;8172:38;:::i;:::-;8256:29;8274:10;8256:29;:::i;:::-;8246:8;8242:44;8439:2;8427:10;8424:18;8421:49;;;8460:8;8445:23;;8421:49;8483:80;8539:22;8557:3;8539:22;:::i;:::-;8529:8;8525:37;8512:11;8483:80;:::i;:::-;8142:431;;8127:446;8037:543;;;:::o;8586:117::-;8640:8;8690:5;8684:4;8680:16;8659:37;;8586:117;;;;:::o;8709:169::-;8753:6;8786:51;8834:1;8830:6;8822:5;8819:1;8815:13;8786:51;:::i;:::-;8782:56;8867:4;8861;8857:15;8847:25;;8760:118;8709:169;;;;:::o;8883:295::-;8959:4;9105:29;9130:3;9124:4;9105:29;:::i;:::-;9097:37;;9167:3;9164:1;9160:11;9154:4;9151:21;9143:29;;8883:295;;;;:::o;9183:1395::-;9300:37;9333:3;9300:37;:::i;:::-;9402:18;9394:6;9391:30;9388:56;;;9424:18;;:::i;:::-;9388:56;9468:38;9500:4;9494:11;9468:38;:::i;:::-;9553:67;9613:6;9605;9599:4;9553:67;:::i;:::-;9647:1;9671:4;9658:17;;9703:2;9695:6;9692:14;9720:1;9715:618;;;;10377:1;10394:6;10391:77;;;10443:9;10438:3;10434:19;10428:26;10419:35;;10391:77;10494:67;10554:6;10547:5;10494:67;:::i;:::-;10488:4;10481:81;10350:222;9685:887;;9715:618;9767:4;9763:9;9755:6;9751:22;9801:37;9833:4;9801:37;:::i;:::-;9860:1;9874:208;9888:7;9885:1;9882:14;9874:208;;;9967:9;9962:3;9958:19;9952:26;9944:6;9937:42;10018:1;10010:6;10006:14;9996:24;;10065:2;10054:9;10050:18;10037:31;;9911:4;9908:1;9904:12;9899:17;;9874:208;;;10110:6;10101:7;10098:19;10095:179;;;10168:9;10163:3;10159:19;10153:26;10211:48;10253:4;10245:6;10241:17;10230:9;10211:48;:::i;:::-;10203:6;10196:64;10118:156;10095:179;10320:1;10316;10308:6;10304:14;10300:22;10294:4;10287:36;9722:611;;;9685:887;;9275:1303;;;9183:1395;;:::o;10608:831::-;10693:3;10730:5;10724:12;10759:36;10785:9;10759:36;:::i;:::-;10811:71;10875:6;10870:3;10811:71;:::i;:::-;10804:78;;10913:1;10902:9;10898:17;10929:1;10924:164;;;;11102:1;11097:336;;;;10891:542;;10924:164;11008:4;11004:9;10993;10989:25;10984:3;10977:38;11068:6;11061:14;11054:22;11048:4;11044:33;11039:3;11035:43;11028:50;;10924:164;;11097:336;11164:38;11196:5;11164:38;:::i;:::-;11224:1;11238:154;11252:6;11249:1;11246:13;11238:154;;;11326:7;11320:14;11316:1;11311:3;11307:11;11300:35;11376:1;11367:7;11363:15;11352:26;;11274:4;11271:1;11267:12;11262:17;;11238:154;;;11421:1;11416:3;11412:11;11405:18;;11104:329;;10891:542;;10697:742;;10608:831;;;;:::o;11445:307::-;11555:4;11593:2;11582:9;11578:18;11570:26;;11642:9;11636:4;11632:20;11628:1;11617:9;11613:17;11606:47;11670:75;11740:4;11731:6;11670:75;:::i;:::-;11662:83;;11445:307;;;;:::o;11758:191::-;11798:3;11817:20;11835:1;11817:20;:::i;:::-;11812:25;;11851:20;11869:1;11851:20;:::i;:::-;11846:25;;11894:1;11891;11887:9;11880:16;;11915:3;11912:1;11909:10;11906:36;;;11922:18;;:::i;:::-;11906:36;11758:191;;;;:::o;11955:233::-;12095:34;12091:1;12083:6;12079:14;12072:58;12164:16;12159:2;12151:6;12147:15;12140:41;11955:233;:::o;12194:366::-;12336:3;12357:67;12421:2;12416:3;12357:67;:::i;:::-;12350:74;;12433:93;12522:3;12433:93;:::i;:::-;12551:2;12546:3;12542:12;12535:19;;12194:366;;;:::o;12566:419::-;12732:4;12770:2;12759:9;12755:18;12747:26;;12819:9;12813:4;12809:20;12805:1;12794:9;12790:17;12783:47;12847:131;12973:4;12847:131;:::i;:::-;12839:139;;12566:419;;;:::o;12991:85::-;13036:7;13065:5;13054:16;;12991:85;;;:::o;13082:86::-;13117:7;13157:4;13150:5;13146:16;13135:27;;13082:86;;;:::o;13174:154::-;13230:9;13263:59;13279:42;13288:32;13314:5;13288:32;:::i;:::-;13279:42;:::i;:::-;13263:59;:::i;:::-;13250:72;;13174:154;;;:::o;13334:143::-;13427:43;13464:5;13427:43;:::i;:::-;13422:3;13415:56;13334:143;;:::o;13483:234::-;13582:4;13620:2;13609:9;13605:18;13597:26;;13633:77;13707:1;13696:9;13692:17;13683:6;13633:77;:::i;:::-;13483:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"614000","executionCost":"645","totalCost":"614645"},"external":{"increment()":"infinite","initialize(uint256)":"106091","name()":"infinite","reduce()":"infinite","retrieve()":"2460","setName(string)":"infinite","setValue(uint256)":"infinite"}},"methodIdentifiers":{"increment()":"d09de08a","initialize(uint256)":"fe4b84df","name()":"06fdde03","reduce()":"45219b0e","retrieve()":"2e64cec1","setName(string)":"c47f0027","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reduce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaharaV3.sol\":\"SaharaV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"contracts/Sahara.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract Sahara is Initializable {\\n    \\n     uint256 private value;\\n\\n    //\\u521d\\u59cb\\u5316\\u51fd\\u6570\\n    function initialize(uint256 _initValue) public initializer {\\n        value = _initValue;\\n    }\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    // Stores a new value in the contract\\n    function setValue(uint256 newValue) public {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last value\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n}\",\"keccak256\":\"0xcb964142543a33ca3aa3048c99e8aad62e0e7326d972e8c039dec4ef13fdbe1b\",\"license\":\"MIT\"},\"contracts/SaharaV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Sahara.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract SaharaV2 is Sahara {\\n    \\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u53ef\\u4ee5\\u81ea\\u589e\\u7684\\u51fd\\u6570\\n    function increment() public {\\n        setValue(retrieve()+1);\\n    }\\n\\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u81ea\\u51cf\\u7684\\u51fd\\u6570\\n    function reduce() public {\\n        setValue(retrieve()-1);\\n    }\\n}\",\"keccak256\":\"0x8c34247e0685af7f50f585401a54eeb0d8d1b457f459c6ec4b3722830f0109f6\",\"license\":\"MIT\"},\"contracts/SaharaV3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./SaharaV2.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract SaharaV3 is SaharaV2 {\\n    \\n    //\\u589e\\u52a0\\u4e00\\u4e2aname \\u53d8\\u91cf \\u5e76\\u4e14\\u53ef\\u4ee5\\u4fee\\u6539\\n    string public name;\\n\\n    event NameChanged(string name);\\n    function setName(string memory _name) public {\\n        name = _name;\\n        emit NameChanged(name);\\n    }\\n}\",\"keccak256\":\"0x892409d026d057b077e184e031d94ce93d32fced065e84c356df37e2893bb401\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/SaharaV3.sol:SaharaV3","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/SaharaV3.sol:SaharaV3","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":460,"contract":"contracts/SaharaV3.sol:SaharaV3","label":"value","offset":0,"slot":"1","type":"t_uint256"},{"astId":536,"contract":"contracts/SaharaV3.sol:SaharaV3","label":"name","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SaharaV4.sol":{"SaharaV4":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"NameChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"getName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_initValue","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reduce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610c94806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063552410771161005b57806355241077146100c8578063c47f0027146100e4578063d09de08a14610100578063fe4b84df1461010a5761007d565b806317d7de7c146100825780632e64cec1146100a057806345219b0e146100be575b600080fd5b61008a610126565b6040516100979190610411565b60405180910390f35b6100a861014e565b6040516100b5919061044c565b60405180910390f35b6100c6610158565b005b6100e260048036038101906100dd91906104a7565b610176565b005b6100fe60048036038101906100f99190610609565b6101b7565b005b610108610202565b005b610124600480360381019061011f91906104a7565b610220565b005b6060600260405160200161013a91906107a1565b604051602081830303815290604052905090565b6000600154905090565b610174600161016561014e565b61016f91906107f2565b610176565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516101ac919061044c565b60405180910390a150565b80600290816101c691906109bd565b507f4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc60026040516101f79190610b13565b60405180910390a150565b61021e600161020f61014e565b6102199190610b35565b610176565b565b60008060019054906101000a900460ff161590508080156102515750600160008054906101000a900460ff1660ff16105b8061027e57506102603061035e565b15801561027d5750600160008054906101000a900460ff1660ff16145b5b6102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610bdb565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156102fa576001600060016101000a81548160ff0219169083151502179055505b81600181905550801561035a5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103519190610c43565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103bb5780820151818401526020810190506103a0565b60008484015250505050565b6000601f19601f8301169050919050565b60006103e382610381565b6103ed818561038c565b93506103fd81856020860161039d565b610406816103c7565b840191505092915050565b6000602082019050818103600083015261042b81846103d8565b905092915050565b6000819050919050565b61044681610433565b82525050565b6000602082019050610461600083018461043d565b92915050565b6000604051905090565b600080fd5b600080fd5b61048481610433565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc610471565b5b60006104cb84828501610492565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610516826103c7565b810181811067ffffffffffffffff82111715610535576105346104de565b5b80604052505050565b6000610548610467565b9050610554828261050d565b919050565b600067ffffffffffffffff821115610574576105736104de565b5b61057d826103c7565b9050602081019050919050565b82818337600083830152505050565b60006105ac6105a784610559565b61053e565b9050828152602081018484840111156105c8576105c76104d9565b5b6105d384828561058a565b509392505050565b600082601f8301126105f0576105ef6104d4565b5b8135610600848260208601610599565b91505092915050565b60006020828403121561061f5761061e610471565b5b600082013567ffffffffffffffff81111561063d5761063c610476565b5b610649848285016105db565b91505092915050565b600081905092915050565b7f4e616d653a200000000000000000000000000000000000000000000000000000600082015250565b6000610693600683610652565b915061069e8261065d565b600682019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f057607f821691505b602082108103610703576107026106a9565b5b50919050565b60008190508160005260206000209050919050565b6000815461072b816106d8565b6107358186610652565b94506001821660008114610750576001811461076557610798565b60ff1983168652811515820286019350610798565b61076e85610709565b60005b8381101561079057815481890152600182019150602081019050610771565b838801955050505b50505092915050565b60006107ac82610686565b91506107b8828461071e565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107fd82610433565b915061080883610433565b92508282039050818111156108205761081f6107c3565b5b92915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610836565b61087d8683610836565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108ba6108b56108b084610433565b610895565b610433565b9050919050565b6000819050919050565b6108d48361089f565b6108e86108e0826108c1565b848454610843565b825550505050565b600090565b6108fd6108f0565b6109088184846108cb565b505050565b5b8181101561092c576109216000826108f5565b60018101905061090e565b5050565b601f8211156109715761094281610709565b61094b84610826565b8101602085101561095a578190505b61096e61096685610826565b83018261090d565b50505b505050565b600082821c905092915050565b600061099460001984600802610976565b1980831691505092915050565b60006109ad8383610983565b9150826002028217905092915050565b6109c682610381565b67ffffffffffffffff8111156109df576109de6104de565b5b6109e982546106d8565b6109f4828285610930565b600060209050601f831160018114610a275760008415610a15578287015190505b610a1f85826109a1565b865550610a87565b601f198416610a3586610709565b60005b82811015610a5d57848901518255600182019150602085019450602081019050610a38565b86831015610a7a5784890151610a76601f891682610983565b8355505b6001600288020188555050505b505050505050565b60008154610a9c816106d8565b610aa6818661038c565b94506001821660008114610ac15760018114610ad757610b0a565b60ff198316865281151560200286019350610b0a565b610ae085610709565b60005b83811015610b0257815481890152600182019150602081019050610ae3565b808801955050505b50505092915050565b60006020820190508181036000830152610b2d8184610a8f565b905092915050565b6000610b4082610433565b9150610b4b83610433565b9250828201905080821115610b6357610b626107c3565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610bc5602e8361038c565b9150610bd082610b69565b604082019050919050565b60006020820190508181036000830152610bf481610bb8565b9050919050565b6000819050919050565b600060ff82169050919050565b6000610c2d610c28610c2384610bfb565b610895565b610c05565b9050919050565b610c3d81610c12565b82525050565b6000602082019050610c586000830184610c34565b9291505056fea2646970667358221220a2a9040a79da97542574ef4d4a8dcc53b0df2cfaddb87c0e8faf340669135fd364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC94 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55241077 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH1 0x1 PUSH2 0x165 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST POP PUSH32 0x4737457377F528CC8AFD815F73ECB8B05DF80D047DBFFC41C17750A4033592BC PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x21E PUSH1 0x1 PUSH2 0x20F PUSH2 0x14E JUMP JUMPDEST PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x251 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x27E JUMPI POP PUSH2 0x260 ADDRESS PUSH2 0x35E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E3 DUP3 PUSH2 0x381 JUMP JUMPDEST PUSH2 0x3ED DUP2 DUP6 PUSH2 0x38C JUMP JUMPDEST SWAP4 POP PUSH2 0x3FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x406 DUP2 PUSH2 0x3C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42B DUP2 DUP5 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x484 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A1 DUP2 PUSH2 0x47B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x471 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP5 DUP3 DUP6 ADD PUSH2 0x492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x516 DUP3 PUSH2 0x3C7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x535 JUMPI PUSH2 0x534 PUSH2 0x4DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x548 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x554 DUP3 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x4DE JUMP JUMPDEST JUMPDEST PUSH2 0x57D DUP3 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC PUSH2 0x5A7 DUP5 PUSH2 0x559 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5C8 JUMPI PUSH2 0x5C7 PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST PUSH2 0x5D3 DUP5 DUP3 DUP6 PUSH2 0x58A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x600 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH2 0x61E PUSH2 0x471 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x476 JUMP JUMPDEST JUMPDEST PUSH2 0x649 DUP5 DUP3 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E616D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693 PUSH1 0x6 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0x69E DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x72B DUP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x735 DUP2 DUP7 PUSH2 0x652 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x765 JUMPI PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x798 JUMP JUMPDEST PUSH2 0x76E DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x790 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x771 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AC DUP3 PUSH2 0x686 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 DUP3 DUP5 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7FD DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x808 DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x873 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x87D DUP7 DUP4 PUSH2 0x836 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA PUSH2 0x8B5 PUSH2 0x8B0 DUP5 PUSH2 0x433 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D4 DUP4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0x8E0 DUP3 PUSH2 0x8C1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x843 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x908 DUP2 DUP5 DUP5 PUSH2 0x8CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x92C JUMPI PUSH2 0x921 PUSH1 0x0 DUP3 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x90E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x971 JUMPI PUSH2 0x942 DUP2 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x94B DUP5 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x95A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x96E PUSH2 0x966 DUP6 PUSH2 0x826 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x90D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x994 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x976 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP4 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C6 DUP3 PUSH2 0x381 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x4DE JUMP JUMPDEST JUMPDEST PUSH2 0x9E9 DUP3 SLOAD PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x9F4 DUP3 DUP3 DUP6 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA27 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA15 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA1F DUP6 DUP3 PUSH2 0x9A1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA35 DUP7 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA5D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA7A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA76 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x983 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0xA9C DUP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xAA6 DUP2 DUP7 PUSH2 0x38C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xAC1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xAD7 JUMPI PUSH2 0xB0A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0xB0A JUMP JUMPDEST PUSH2 0xAE0 DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB02 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE3 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2D DUP2 DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB63 JUMPI PUSH2 0xB62 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC5 PUSH1 0x2E DUP4 PUSH2 0x38C JUMP JUMPDEST SWAP2 POP PUSH2 0xBD0 DUP3 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2D PUSH2 0xC28 PUSH2 0xC23 DUP5 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0xC12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xA9 DIV EXP PUSH26 0xDA97542574EF4D4A8DCC53B0DF2CFADDB87C0E8FAF340669135F 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"83:324:5:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getName_595":{"entryPoint":294,"id":595,"parameterSlots":0,"returnSlots":1},"@increment_516":{"entryPoint":514,"id":516,"parameterSlots":0,"returnSlots":0},"@initialize_472":{"entryPoint":544,"id":472,"parameterSlots":1,"returnSlots":0},"@isContract_186":{"entryPoint":862,"id":186,"parameterSlots":1,"returnSlots":1},"@reduce_527":{"entryPoint":344,"id":527,"parameterSlots":0,"returnSlots":0},"@retrieve_498":{"entryPoint":334,"id":498,"parameterSlots":0,"returnSlots":1},"@setName_580":{"entryPoint":439,"id":580,"parameterSlots":1,"returnSlots":0},"@setValue_490":{"entryPoint":374,"id":490,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":1433,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":1499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":1545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":3124,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":2703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1670,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":3000,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1085,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":3139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1041,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3035,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1100,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1342,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1127,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1369,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1801,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1618,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2869,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2034,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2352,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_rational_1_by_1":{"entryPoint":3067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1075,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3077,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2317,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":3090,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2207,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2493,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1418,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":925,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2086,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1752,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2465,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1293,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2197,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2435,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1987,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1705,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1246,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2241,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1236,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1241,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1142,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1137,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":967,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2102,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2422,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2293,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8":{"entryPoint":1629,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":2921,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2115,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2251,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1147,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2288,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15887:6","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:6","statements":[{"nodeType":"YulAssignment","src":"77:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:6"},"nodeType":"YulFunctionCall","src":"87:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:6"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:6","type":""}],"src":"7:99:6"},{"body":{"nodeType":"YulBlock","src":"208:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:6"},"nodeType":"YulFunctionCall","src":"218:19:6"},"nodeType":"YulExpressionStatement","src":"218:19:6"},{"nodeType":"YulAssignment","src":"246:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:6"},"nodeType":"YulFunctionCall","src":"261:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:6","type":""}],"src":"112:169:6"},{"body":{"nodeType":"YulBlock","src":"349:184:6","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:6"},"nodeType":"YulFunctionCall","src":"449:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:6"},"nodeType":"YulFunctionCall","src":"468:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:6"},"nodeType":"YulFunctionCall","src":"462:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:6"},"nodeType":"YulFunctionCall","src":"442:39:6"},"nodeType":"YulExpressionStatement","src":"442:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:6"},"nodeType":"YulFunctionCall","src":"386:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:6","statements":[{"nodeType":"YulAssignment","src":"402:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:6"},"nodeType":"YulFunctionCall","src":"407:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:6","statements":[]},"src":"378:113:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:6"},"nodeType":"YulFunctionCall","src":"507:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:6"},"nodeType":"YulFunctionCall","src":"500:27:6"},"nodeType":"YulExpressionStatement","src":"500:27:6"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:6","type":""}],"src":"287:246:6"},{"body":{"nodeType":"YulBlock","src":"587:54:6","statements":[{"nodeType":"YulAssignment","src":"597:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:6"},"nodeType":"YulFunctionCall","src":"611:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:6"},"nodeType":"YulFunctionCall","src":"627:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:6"},"nodeType":"YulFunctionCall","src":"607:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:6","type":""}],"src":"539:102:6"},{"body":{"nodeType":"YulBlock","src":"739:285:6","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:6"},"nodeType":"YulFunctionCall","src":"763:39:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:6","type":""}]},{"nodeType":"YulAssignment","src":"811:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:6"},"nodeType":"YulFunctionCall","src":"818:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:6"},"nodeType":"YulFunctionCall","src":"933:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:6"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:6"},"nodeType":"YulFunctionCall","src":"898:65:6"},"nodeType":"YulExpressionStatement","src":"898:65:6"},{"nodeType":"YulAssignment","src":"972:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:6"},"nodeType":"YulFunctionCall","src":"988:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:6"},"nodeType":"YulFunctionCall","src":"979:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:6"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:6","type":""}],"src":"647:377:6"},{"body":{"nodeType":"YulBlock","src":"1148:195:6","statements":[{"nodeType":"YulAssignment","src":"1158:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:6"},"nodeType":"YulFunctionCall","src":"1166:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:6"},"nodeType":"YulFunctionCall","src":"1201:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:6"},"nodeType":"YulFunctionCall","src":"1220:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:6"},"nodeType":"YulFunctionCall","src":"1194:47:6"},"nodeType":"YulExpressionStatement","src":"1194:47:6"},{"nodeType":"YulAssignment","src":"1250:86:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:6"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:6"},"nodeType":"YulFunctionCall","src":"1258:78:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:6"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:6","type":""}],"src":"1030:313:6"},{"body":{"nodeType":"YulBlock","src":"1394:32:6","statements":[{"nodeType":"YulAssignment","src":"1404:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"1415:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1404:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1376:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1386:7:6","type":""}],"src":"1349:77:6"},{"body":{"nodeType":"YulBlock","src":"1497:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1514:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1537:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1519:17:6"},"nodeType":"YulFunctionCall","src":"1519:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1507:6:6"},"nodeType":"YulFunctionCall","src":"1507:37:6"},"nodeType":"YulExpressionStatement","src":"1507:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1492:3:6","type":""}],"src":"1432:118:6"},{"body":{"nodeType":"YulBlock","src":"1654:124:6","statements":[{"nodeType":"YulAssignment","src":"1664:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1676:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1687:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:6"},"nodeType":"YulFunctionCall","src":"1672:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1744:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1768:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1753:3:6"},"nodeType":"YulFunctionCall","src":"1753:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1700:43:6"},"nodeType":"YulFunctionCall","src":"1700:71:6"},"nodeType":"YulExpressionStatement","src":"1700:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1626:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1638:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1649:4:6","type":""}],"src":"1556:222:6"},{"body":{"nodeType":"YulBlock","src":"1824:35:6","statements":[{"nodeType":"YulAssignment","src":"1834:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:6"},"nodeType":"YulFunctionCall","src":"1844:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:6","type":""}],"src":"1784:75:6"},{"body":{"nodeType":"YulBlock","src":"1954:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:6"},"nodeType":"YulFunctionCall","src":"1964:12:6"},"nodeType":"YulExpressionStatement","src":"1964:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:6"},{"body":{"nodeType":"YulBlock","src":"2077:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:6"},"nodeType":"YulFunctionCall","src":"2087:12:6"},"nodeType":"YulExpressionStatement","src":"2087:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:6"},{"body":{"nodeType":"YulBlock","src":"2154:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"2211:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2220:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2223:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2213:6:6"},"nodeType":"YulFunctionCall","src":"2213:12:6"},"nodeType":"YulExpressionStatement","src":"2213:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2177:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2202:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2184:17:6"},"nodeType":"YulFunctionCall","src":"2184:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2174:2:6"},"nodeType":"YulFunctionCall","src":"2174:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2167:6:6"},"nodeType":"YulFunctionCall","src":"2167:43:6"},"nodeType":"YulIf","src":"2164:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2147:5:6","type":""}],"src":"2111:122:6"},{"body":{"nodeType":"YulBlock","src":"2291:87:6","statements":[{"nodeType":"YulAssignment","src":"2301:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2323:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2310:12:6"},"nodeType":"YulFunctionCall","src":"2310:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2301:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2366:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2339:26:6"},"nodeType":"YulFunctionCall","src":"2339:33:6"},"nodeType":"YulExpressionStatement","src":"2339:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2269:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2277:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2285:5:6","type":""}],"src":"2239:139:6"},{"body":{"nodeType":"YulBlock","src":"2450:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"2496:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2498:77:6"},"nodeType":"YulFunctionCall","src":"2498:79:6"},"nodeType":"YulExpressionStatement","src":"2498:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2471:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2480:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2467:3:6"},"nodeType":"YulFunctionCall","src":"2467:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2492:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2463:3:6"},"nodeType":"YulFunctionCall","src":"2463:32:6"},"nodeType":"YulIf","src":"2460:119:6"},{"nodeType":"YulBlock","src":"2589:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2604:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2618:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2608:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2633:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2668:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2679:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:6"},"nodeType":"YulFunctionCall","src":"2664:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2688:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2643:20:6"},"nodeType":"YulFunctionCall","src":"2643:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2633:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2420:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2431:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2443:6:6","type":""}],"src":"2384:329:6"},{"body":{"nodeType":"YulBlock","src":"2808:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2828:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2818:6:6"},"nodeType":"YulFunctionCall","src":"2818:12:6"},"nodeType":"YulExpressionStatement","src":"2818:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2719:117:6"},{"body":{"nodeType":"YulBlock","src":"2931:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2941:6:6"},"nodeType":"YulFunctionCall","src":"2941:12:6"},"nodeType":"YulExpressionStatement","src":"2941:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2842:117:6"},{"body":{"nodeType":"YulBlock","src":"2993:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3010:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3013:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:6"},"nodeType":"YulFunctionCall","src":"3003:88:6"},"nodeType":"YulExpressionStatement","src":"3003:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3107:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3110:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3100:6:6"},"nodeType":"YulFunctionCall","src":"3100:15:6"},"nodeType":"YulExpressionStatement","src":"3100:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3131:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3134:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3124:6:6"},"nodeType":"YulFunctionCall","src":"3124:15:6"},"nodeType":"YulExpressionStatement","src":"3124:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2965:180:6"},{"body":{"nodeType":"YulBlock","src":"3194:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3204:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3226:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3256:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3234:21:6"},"nodeType":"YulFunctionCall","src":"3234:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3222:3:6"},"nodeType":"YulFunctionCall","src":"3222:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3208:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3373:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3375:16:6"},"nodeType":"YulFunctionCall","src":"3375:18:6"},"nodeType":"YulExpressionStatement","src":"3375:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3316:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"3328:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3313:2:6"},"nodeType":"YulFunctionCall","src":"3313:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3352:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3364:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3349:2:6"},"nodeType":"YulFunctionCall","src":"3349:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3310:2:6"},"nodeType":"YulFunctionCall","src":"3310:62:6"},"nodeType":"YulIf","src":"3307:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3411:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3415:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3404:6:6"},"nodeType":"YulFunctionCall","src":"3404:22:6"},"nodeType":"YulExpressionStatement","src":"3404:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3180:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"3188:4:6","type":""}],"src":"3151:281:6"},{"body":{"nodeType":"YulBlock","src":"3479:88:6","statements":[{"nodeType":"YulAssignment","src":"3489:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3499:18:6"},"nodeType":"YulFunctionCall","src":"3499:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3489:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3548:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"3556:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3528:19:6"},"nodeType":"YulFunctionCall","src":"3528:33:6"},"nodeType":"YulExpressionStatement","src":"3528:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3463:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3472:6:6","type":""}],"src":"3438:129:6"},{"body":{"nodeType":"YulBlock","src":"3640:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"3745:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3747:16:6"},"nodeType":"YulFunctionCall","src":"3747:18:6"},"nodeType":"YulExpressionStatement","src":"3747:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3717:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:6"},"nodeType":"YulFunctionCall","src":"3714:30:6"},"nodeType":"YulIf","src":"3711:56:6"},{"nodeType":"YulAssignment","src":"3777:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3807:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3785:21:6"},"nodeType":"YulFunctionCall","src":"3785:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3777:4:6"}]},{"nodeType":"YulAssignment","src":"3851:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3863:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"3869:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:6"},"nodeType":"YulFunctionCall","src":"3859:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3851:4:6"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3624:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3635:4:6","type":""}],"src":"3573:308:6"},{"body":{"nodeType":"YulBlock","src":"3951:82:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3974:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"3979:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"3984:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3961:12:6"},"nodeType":"YulFunctionCall","src":"3961:30:6"},"nodeType":"YulExpressionStatement","src":"3961:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4011:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4016:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4007:3:6"},"nodeType":"YulFunctionCall","src":"4007:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"4025:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4000:6:6"},"nodeType":"YulFunctionCall","src":"4000:27:6"},"nodeType":"YulExpressionStatement","src":"4000:27:6"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3933:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3938:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"3943:6:6","type":""}],"src":"3887:146:6"},{"body":{"nodeType":"YulBlock","src":"4123:341:6","statements":[{"nodeType":"YulAssignment","src":"4133:75:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4200:6:6"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4158:41:6"},"nodeType":"YulFunctionCall","src":"4158:49:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4142:15:6"},"nodeType":"YulFunctionCall","src":"4142:66:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4133:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4224:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"4231:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4217:6:6"},"nodeType":"YulFunctionCall","src":"4217:21:6"},"nodeType":"YulExpressionStatement","src":"4217:21:6"},{"nodeType":"YulVariableDeclaration","src":"4247:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4262:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4269:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4258:3:6"},"nodeType":"YulFunctionCall","src":"4258:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4251:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"4312:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4314:77:6"},"nodeType":"YulFunctionCall","src":"4314:79:6"},"nodeType":"YulExpressionStatement","src":"4314:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4293:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4298:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4289:3:6"},"nodeType":"YulFunctionCall","src":"4289:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"4307:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4286:2:6"},"nodeType":"YulFunctionCall","src":"4286:25:6"},"nodeType":"YulIf","src":"4283:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4441:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"4446:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"4451:6:6"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4404:36:6"},"nodeType":"YulFunctionCall","src":"4404:54:6"},"nodeType":"YulExpressionStatement","src":"4404:54:6"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4096:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"4101:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"4109:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4117:5:6","type":""}],"src":"4039:425:6"},{"body":{"nodeType":"YulBlock","src":"4546:278:6","statements":[{"body":{"nodeType":"YulBlock","src":"4595:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4597:77:6"},"nodeType":"YulFunctionCall","src":"4597:79:6"},"nodeType":"YulExpressionStatement","src":"4597:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4574:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4582:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4570:3:6"},"nodeType":"YulFunctionCall","src":"4570:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"4589:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4566:3:6"},"nodeType":"YulFunctionCall","src":"4566:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4559:6:6"},"nodeType":"YulFunctionCall","src":"4559:35:6"},"nodeType":"YulIf","src":"4556:122:6"},{"nodeType":"YulVariableDeclaration","src":"4687:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4714:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4701:12:6"},"nodeType":"YulFunctionCall","src":"4701:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4691:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4730:88:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4791:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4799:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:6"},"nodeType":"YulFunctionCall","src":"4787:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"4806:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"4814:3:6"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4739:47:6"},"nodeType":"YulFunctionCall","src":"4739:79:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4730:5:6"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4524:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"4532:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4540:5:6","type":""}],"src":"4484:340:6"},{"body":{"nodeType":"YulBlock","src":"4906:433:6","statements":[{"body":{"nodeType":"YulBlock","src":"4952:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4954:77:6"},"nodeType":"YulFunctionCall","src":"4954:79:6"},"nodeType":"YulExpressionStatement","src":"4954:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4927:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4936:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4923:3:6"},"nodeType":"YulFunctionCall","src":"4923:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4948:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4919:3:6"},"nodeType":"YulFunctionCall","src":"4919:32:6"},"nodeType":"YulIf","src":"4916:119:6"},{"nodeType":"YulBlock","src":"5045:287:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5060:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5091:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5102:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5087:3:6"},"nodeType":"YulFunctionCall","src":"5087:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5074:12:6"},"nodeType":"YulFunctionCall","src":"5074:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5064:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"5152:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5154:77:6"},"nodeType":"YulFunctionCall","src":"5154:79:6"},"nodeType":"YulExpressionStatement","src":"5154:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5124:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5132:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5121:2:6"},"nodeType":"YulFunctionCall","src":"5121:30:6"},"nodeType":"YulIf","src":"5118:117:6"},{"nodeType":"YulAssignment","src":"5249:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5305:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:6"},"nodeType":"YulFunctionCall","src":"5290:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5314:7:6"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5259:30:6"},"nodeType":"YulFunctionCall","src":"5259:63:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5249:6:6"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4876:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4887:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4899:6:6","type":""}],"src":"4830:509:6"},{"body":{"nodeType":"YulBlock","src":"5459:34:6","statements":[{"nodeType":"YulAssignment","src":"5469:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"5484:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5469:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5431:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"5436:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5447:11:6","type":""}],"src":"5345:148:6"},{"body":{"nodeType":"YulBlock","src":"5605:50:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5627:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5635:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5623:3:6"},"nodeType":"YulFunctionCall","src":"5623:14:6"},{"hexValue":"4e616d653a20","kind":"string","nodeType":"YulLiteral","src":"5639:8:6","type":"","value":"Name: "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5616:6:6"},"nodeType":"YulFunctionCall","src":"5616:32:6"},"nodeType":"YulExpressionStatement","src":"5616:32:6"}]},"name":"store_literal_in_memory_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5597:6:6","type":""}],"src":"5499:156:6"},{"body":{"nodeType":"YulBlock","src":"5825:236:6","statements":[{"nodeType":"YulAssignment","src":"5835:91:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5919:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"5924:1:6","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5842:76:6"},"nodeType":"YulFunctionCall","src":"5842:84:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5835:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6024:3:6"}],"functionName":{"name":"store_literal_in_memory_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8","nodeType":"YulIdentifier","src":"5935:88:6"},"nodeType":"YulFunctionCall","src":"5935:93:6"},"nodeType":"YulExpressionStatement","src":"5935:93:6"},{"nodeType":"YulAssignment","src":"6037:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6048:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6053:1:6","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:6"},"nodeType":"YulFunctionCall","src":"6044:11:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6037:3:6"}]}]},"name":"abi_encode_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5813:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5821:3:6","type":""}],"src":"5661:400:6"},{"body":{"nodeType":"YulBlock","src":"6095:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6112:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6115:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6105:6:6"},"nodeType":"YulFunctionCall","src":"6105:88:6"},"nodeType":"YulExpressionStatement","src":"6105:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6209:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6212:4:6","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6202:6:6"},"nodeType":"YulFunctionCall","src":"6202:15:6"},"nodeType":"YulExpressionStatement","src":"6202:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6233:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6236:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6226:6:6"},"nodeType":"YulFunctionCall","src":"6226:15:6"},"nodeType":"YulExpressionStatement","src":"6226:15:6"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6067:180:6"},{"body":{"nodeType":"YulBlock","src":"6304:269:6","statements":[{"nodeType":"YulAssignment","src":"6314:22:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6328:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"6334:1:6","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6324:3:6"},"nodeType":"YulFunctionCall","src":"6324:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6314:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"6345:38:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6375:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"6381:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6371:3:6"},"nodeType":"YulFunctionCall","src":"6371:12:6"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6349:18:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"6422:51:6","statements":[{"nodeType":"YulAssignment","src":"6436:27:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"6458:4:6","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6446:3:6"},"nodeType":"YulFunctionCall","src":"6446:17:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6436:6:6"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6402:18:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6395:6:6"},"nodeType":"YulFunctionCall","src":"6395:26:6"},"nodeType":"YulIf","src":"6392:81:6"},{"body":{"nodeType":"YulBlock","src":"6525:42:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6539:16:6"},"nodeType":"YulFunctionCall","src":"6539:18:6"},"nodeType":"YulExpressionStatement","src":"6539:18:6"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6489:18:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6512:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"6520:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6509:2:6"},"nodeType":"YulFunctionCall","src":"6509:14:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6486:2:6"},"nodeType":"YulFunctionCall","src":"6486:38:6"},"nodeType":"YulIf","src":"6483:84:6"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6288:4:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6297:6:6","type":""}],"src":"6253:320:6"},{"body":{"nodeType":"YulBlock","src":"6633:87:6","statements":[{"nodeType":"YulAssignment","src":"6643:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6651:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6643:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6671:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6674:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6664:6:6"},"nodeType":"YulFunctionCall","src":"6664:14:6"},"nodeType":"YulExpressionStatement","src":"6664:14:6"},{"nodeType":"YulAssignment","src":"6687:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6705:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6708:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6695:9:6"},"nodeType":"YulFunctionCall","src":"6695:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6687:4:6"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6620:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6628:4:6","type":""}],"src":"6579:141:6"},{"body":{"nodeType":"YulBlock","src":"6857:767:6","statements":[{"nodeType":"YulVariableDeclaration","src":"6867:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6890:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6884:5:6"},"nodeType":"YulFunctionCall","src":"6884:12:6"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"6871:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6905:50:6","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"6945:9:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"6919:25:6"},"nodeType":"YulFunctionCall","src":"6919:36:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6909:6:6","type":""}]},{"nodeType":"YulAssignment","src":"6964:96:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7048:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"7053:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6971:76:6"},"nodeType":"YulFunctionCall","src":"6971:89:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6964:3:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7109:159:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7162:3:6"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"7171:9:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7186:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7182:3:6"},"nodeType":"YulFunctionCall","src":"7182:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7167:3:6"},"nodeType":"YulFunctionCall","src":"7167:25:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7155:6:6"},"nodeType":"YulFunctionCall","src":"7155:38:6"},"nodeType":"YulExpressionStatement","src":"7155:38:6"},{"nodeType":"YulAssignment","src":"7206:52:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7217:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7226:6:6"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7248:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7241:6:6"},"nodeType":"YulFunctionCall","src":"7241:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7234:6:6"},"nodeType":"YulFunctionCall","src":"7234:22:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7222:3:6"},"nodeType":"YulFunctionCall","src":"7222:35:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:6"},"nodeType":"YulFunctionCall","src":"7213:45:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7206:3:6"}]}]},"nodeType":"YulCase","src":"7102:166:6","value":{"kind":"number","nodeType":"YulLiteral","src":"7107:1:6","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"7284:334:6","statements":[{"nodeType":"YulVariableDeclaration","src":"7329:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7376:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7344:31:6"},"nodeType":"YulFunctionCall","src":"7344:38:6"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"7333:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7395:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"7404:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7399:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"7462:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"7496:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7487:3:6"},"nodeType":"YulFunctionCall","src":"7487:11:6"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"7506:7:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7500:5:6"},"nodeType":"YulFunctionCall","src":"7500:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7480:6:6"},"nodeType":"YulFunctionCall","src":"7480:35:6"},"nodeType":"YulExpressionStatement","src":"7480:35:6"},{"nodeType":"YulAssignment","src":"7532:26:6","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"7547:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"7556:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:6"},"nodeType":"YulFunctionCall","src":"7543:15:6"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"7532:7:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7429:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"7432:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7426:2:6"},"nodeType":"YulFunctionCall","src":"7426:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7440:21:6","statements":[{"nodeType":"YulAssignment","src":"7442:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7451:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"7454:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7447:3:6"},"nodeType":"YulFunctionCall","src":"7447:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7442:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"7422:3:6","statements":[]},"src":"7418:154:6"},{"nodeType":"YulAssignment","src":"7585:23:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7596:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"7601:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7592:3:6"},"nodeType":"YulFunctionCall","src":"7592:16:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7585:3:6"}]}]},"nodeType":"YulCase","src":"7277:341:6","value":{"kind":"number","nodeType":"YulLiteral","src":"7282:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"7080:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7091:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7076:3:6"},"nodeType":"YulFunctionCall","src":"7076:17:6"},"nodeType":"YulSwitch","src":"7069:549:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6838:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6845:3:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6853:3:6","type":""}],"src":"6750:874:6"},{"body":{"nodeType":"YulBlock","src":"7864:301:6","statements":[{"nodeType":"YulAssignment","src":"7875:155:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8026:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7882:142:6"},"nodeType":"YulFunctionCall","src":"7882:148:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7875:3:6"}]},{"nodeType":"YulAssignment","src":"8040:99:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8126:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8135:3:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8047:78:6"},"nodeType":"YulFunctionCall","src":"8047:92:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8040:3:6"}]},{"nodeType":"YulAssignment","src":"8149:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"8156:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8149:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7843:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7849:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7860:3:6","type":""}],"src":"7630:535:6"},{"body":{"nodeType":"YulBlock","src":"8199:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8216:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8219:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8209:6:6"},"nodeType":"YulFunctionCall","src":"8209:88:6"},"nodeType":"YulExpressionStatement","src":"8209:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8313:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8316:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8306:6:6"},"nodeType":"YulFunctionCall","src":"8306:15:6"},"nodeType":"YulExpressionStatement","src":"8306:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8337:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8340:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8330:6:6"},"nodeType":"YulFunctionCall","src":"8330:15:6"},"nodeType":"YulExpressionStatement","src":"8330:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8171:180:6"},{"body":{"nodeType":"YulBlock","src":"8402:149:6","statements":[{"nodeType":"YulAssignment","src":"8412:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8435:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8417:17:6"},"nodeType":"YulFunctionCall","src":"8417:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8412:1:6"}]},{"nodeType":"YulAssignment","src":"8446:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8469:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8451:17:6"},"nodeType":"YulFunctionCall","src":"8451:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8446:1:6"}]},{"nodeType":"YulAssignment","src":"8480:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8492:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"8495:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8488:3:6"},"nodeType":"YulFunctionCall","src":"8488:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8480:4:6"}]},{"body":{"nodeType":"YulBlock","src":"8522:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8524:16:6"},"nodeType":"YulFunctionCall","src":"8524:18:6"},"nodeType":"YulExpressionStatement","src":"8524:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8513:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"8519:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8510:2:6"},"nodeType":"YulFunctionCall","src":"8510:11:6"},"nodeType":"YulIf","src":"8507:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8388:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"8391:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8397:4:6","type":""}],"src":"8357:194:6"},{"body":{"nodeType":"YulBlock","src":"8601:49:6","statements":[{"nodeType":"YulAssignment","src":"8611:33:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8629:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8625:3:6"},"nodeType":"YulFunctionCall","src":"8625:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"8641:2:6","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8621:3:6"},"nodeType":"YulFunctionCall","src":"8621:23:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8611:6:6"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8584:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8594:6:6","type":""}],"src":"8557:93:6"},{"body":{"nodeType":"YulBlock","src":"8709:54:6","statements":[{"nodeType":"YulAssignment","src":"8719:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8744:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"8750:5:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8740:3:6"},"nodeType":"YulFunctionCall","src":"8740:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8719:8:6"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"8684:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"8690:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8700:8:6","type":""}],"src":"8656:107:6"},{"body":{"nodeType":"YulBlock","src":"8845:317:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8855:35:6","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"8876:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"8888:1:6","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8872:3:6"},"nodeType":"YulFunctionCall","src":"8872:18:6"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"8859:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8899:109:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8930:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8941:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8911:18:6"},"nodeType":"YulFunctionCall","src":"8911:97:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8903:4:6","type":""}]},{"nodeType":"YulAssignment","src":"9017:51:6","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"9048:9:6"},{"name":"toInsert","nodeType":"YulIdentifier","src":"9059:8:6"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"9029:18:6"},"nodeType":"YulFunctionCall","src":"9029:39:6"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9017:8:6"}]},{"nodeType":"YulAssignment","src":"9077:30:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9090:5:6"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9101:4:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9097:3:6"},"nodeType":"YulFunctionCall","src":"9097:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9086:3:6"},"nodeType":"YulFunctionCall","src":"9086:21:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9077:5:6"}]},{"nodeType":"YulAssignment","src":"9116:40:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9129:5:6"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9140:8:6"},{"name":"mask","nodeType":"YulIdentifier","src":"9150:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9136:3:6"},"nodeType":"YulFunctionCall","src":"9136:19:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9126:2:6"},"nodeType":"YulFunctionCall","src":"9126:30:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9116:6:6"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8806:5:6","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"8813:10:6","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"8825:8:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8838:6:6","type":""}],"src":"8769:393:6"},{"body":{"nodeType":"YulBlock","src":"9200:28:6","statements":[{"nodeType":"YulAssignment","src":"9210:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"9217:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9210:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9186:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9196:3:6","type":""}],"src":"9168:60:6"},{"body":{"nodeType":"YulBlock","src":"9294:82:6","statements":[{"nodeType":"YulAssignment","src":"9304:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9362:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9344:17:6"},"nodeType":"YulFunctionCall","src":"9344:24:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9335:8:6"},"nodeType":"YulFunctionCall","src":"9335:34:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9317:17:6"},"nodeType":"YulFunctionCall","src":"9317:53:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9304:9:6"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9274:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9284:9:6","type":""}],"src":"9234:142:6"},{"body":{"nodeType":"YulBlock","src":"9429:28:6","statements":[{"nodeType":"YulAssignment","src":"9439:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"9446:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9439:3:6"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9415:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9425:3:6","type":""}],"src":"9382:75:6"},{"body":{"nodeType":"YulBlock","src":"9539:193:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9549:63:6","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"9604:7:6"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9573:30:6"},"nodeType":"YulFunctionCall","src":"9573:39:6"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"9553:16:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9628:4:6"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9668:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9662:5:6"},"nodeType":"YulFunctionCall","src":"9662:11:6"},{"name":"offset","nodeType":"YulIdentifier","src":"9675:6:6"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"9707:16:6"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"9683:23:6"},"nodeType":"YulFunctionCall","src":"9683:41:6"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"9634:27:6"},"nodeType":"YulFunctionCall","src":"9634:91:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9621:6:6"},"nodeType":"YulFunctionCall","src":"9621:105:6"},"nodeType":"YulExpressionStatement","src":"9621:105:6"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9516:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9522:6:6","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"9530:7:6","type":""}],"src":"9463:269:6"},{"body":{"nodeType":"YulBlock","src":"9787:24:6","statements":[{"nodeType":"YulAssignment","src":"9797:8:6","value":{"kind":"number","nodeType":"YulLiteral","src":"9804:1:6","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9797:3:6"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9783:3:6","type":""}],"src":"9738:73:6"},{"body":{"nodeType":"YulBlock","src":"9870:136:6","statements":[{"nodeType":"YulVariableDeclaration","src":"9880:46:6","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"9894:30:6"},"nodeType":"YulFunctionCall","src":"9894:32:6"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"9884:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9979:4:6"},{"name":"offset","nodeType":"YulIdentifier","src":"9985:6:6"},{"name":"zero_0","nodeType":"YulIdentifier","src":"9993:6:6"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9935:43:6"},"nodeType":"YulFunctionCall","src":"9935:65:6"},"nodeType":"YulExpressionStatement","src":"9935:65:6"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9856:4:6","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9862:6:6","type":""}],"src":"9817:189:6"},{"body":{"nodeType":"YulBlock","src":"10062:136:6","statements":[{"body":{"nodeType":"YulBlock","src":"10129:63:6","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10173:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10180:1:6","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"10143:29:6"},"nodeType":"YulFunctionCall","src":"10143:39:6"},"nodeType":"YulExpressionStatement","src":"10143:39:6"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10082:5:6"},{"name":"end","nodeType":"YulIdentifier","src":"10089:3:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10079:2:6"},"nodeType":"YulFunctionCall","src":"10079:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10094:26:6","statements":[{"nodeType":"YulAssignment","src":"10096:22:6","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10109:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"10116:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10105:3:6"},"nodeType":"YulFunctionCall","src":"10105:13:6"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"10096:5:6"}]}]},"pre":{"nodeType":"YulBlock","src":"10076:2:6","statements":[]},"src":"10072:120:6"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"10050:5:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"10057:3:6","type":""}],"src":"10012:186:6"},{"body":{"nodeType":"YulBlock","src":"10283:464:6","statements":[{"body":{"nodeType":"YulBlock","src":"10309:431:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10323:54:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10371:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10339:31:6"},"nodeType":"YulFunctionCall","src":"10339:38:6"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"10327:8:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10390:63:6","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10413:8:6"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10441:10:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10423:17:6"},"nodeType":"YulFunctionCall","src":"10423:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10409:3:6"},"nodeType":"YulFunctionCall","src":"10409:44:6"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"10394:11:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"10610:27:6","statements":[{"nodeType":"YulAssignment","src":"10612:23:6","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"10627:8:6"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10612:11:6"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10594:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"10606:2:6","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10591:2:6"},"nodeType":"YulFunctionCall","src":"10591:18:6"},"nodeType":"YulIf","src":"10588:49:6"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10679:11:6"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10696:8:6"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10724:3:6"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10706:17:6"},"nodeType":"YulFunctionCall","src":"10706:22:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10692:3:6"},"nodeType":"YulFunctionCall","src":"10692:37:6"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"10650:28:6"},"nodeType":"YulFunctionCall","src":"10650:80:6"},"nodeType":"YulExpressionStatement","src":"10650:80:6"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10300:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10305:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10297:2:6"},"nodeType":"YulFunctionCall","src":"10297:11:6"},"nodeType":"YulIf","src":"10294:446:6"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10259:5:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"10266:3:6","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10271:10:6","type":""}],"src":"10204:543:6"},{"body":{"nodeType":"YulBlock","src":"10816:54:6","statements":[{"nodeType":"YulAssignment","src":"10826:37:6","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"10851:4:6"},{"name":"value","nodeType":"YulIdentifier","src":"10857:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10847:3:6"},"nodeType":"YulFunctionCall","src":"10847:16:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"10826:8:6"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"10791:4:6","type":""},{"name":"value","nodeType":"YulTypedName","src":"10797:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"10807:8:6","type":""}],"src":"10753:117:6"},{"body":{"nodeType":"YulBlock","src":"10927:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10937:68:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10986:1:6","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"10989:5:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10982:3:6"},"nodeType":"YulFunctionCall","src":"10982:13:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11001:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10997:3:6"},"nodeType":"YulFunctionCall","src":"10997:6:6"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"10953:28:6"},"nodeType":"YulFunctionCall","src":"10953:51:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10949:3:6"},"nodeType":"YulFunctionCall","src":"10949:56:6"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"10941:4:6","type":""}]},{"nodeType":"YulAssignment","src":"11014:25:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11028:4:6"},{"name":"mask","nodeType":"YulIdentifier","src":"11034:4:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11024:3:6"},"nodeType":"YulFunctionCall","src":"11024:15:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11014:6:6"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10904:4:6","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"10910:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10920:6:6","type":""}],"src":"10876:169:6"},{"body":{"nodeType":"YulBlock","src":"11131:214:6","statements":[{"nodeType":"YulAssignment","src":"11264:37:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11291:4:6"},{"name":"len","nodeType":"YulIdentifier","src":"11297:3:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11272:18:6"},"nodeType":"YulFunctionCall","src":"11272:29:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11264:4:6"}]},{"nodeType":"YulAssignment","src":"11310:29:6","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11321:4:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11331:1:6","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"11334:3:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11327:3:6"},"nodeType":"YulFunctionCall","src":"11327:11:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11318:2:6"},"nodeType":"YulFunctionCall","src":"11318:21:6"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11310:4:6"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11112:4:6","type":""},{"name":"len","nodeType":"YulTypedName","src":"11118:3:6","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11126:4:6","type":""}],"src":"11050:295:6"},{"body":{"nodeType":"YulBlock","src":"11442:1303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11453:51:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11500:3:6"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11467:32:6"},"nodeType":"YulFunctionCall","src":"11467:37:6"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11457:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11589:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11591:16:6"},"nodeType":"YulFunctionCall","src":"11591:18:6"},"nodeType":"YulExpressionStatement","src":"11591:18:6"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11561:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11569:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11558:2:6"},"nodeType":"YulFunctionCall","src":"11558:30:6"},"nodeType":"YulIf","src":"11555:56:6"},{"nodeType":"YulVariableDeclaration","src":"11621:52:6","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11667:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11661:5:6"},"nodeType":"YulFunctionCall","src":"11661:11:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11635:25:6"},"nodeType":"YulFunctionCall","src":"11635:38:6"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"11625:6:6","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11766:4:6"},{"name":"oldLen","nodeType":"YulIdentifier","src":"11772:6:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"11780:6:6"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"11720:45:6"},"nodeType":"YulFunctionCall","src":"11720:67:6"},"nodeType":"YulExpressionStatement","src":"11720:67:6"},{"nodeType":"YulVariableDeclaration","src":"11797:18:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11814:1:6","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11801:9:6","type":""}]},{"nodeType":"YulAssignment","src":"11825:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11838:4:6","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11825:9:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11889:611:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11903:37:6","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11922:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11934:4:6","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11930:3:6"},"nodeType":"YulFunctionCall","src":"11930:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11918:3:6"},"nodeType":"YulFunctionCall","src":"11918:22:6"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11907:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11954:51:6","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12000:4:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11968:31:6"},"nodeType":"YulFunctionCall","src":"11968:37:6"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11958:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12018:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12027:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12022:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"12086:163:6","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12111:6:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12129:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12134:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12125:3:6"},"nodeType":"YulFunctionCall","src":"12125:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12119:5:6"},"nodeType":"YulFunctionCall","src":"12119:26:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12104:6:6"},"nodeType":"YulFunctionCall","src":"12104:42:6"},"nodeType":"YulExpressionStatement","src":"12104:42:6"},{"nodeType":"YulAssignment","src":"12163:24:6","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12177:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:6"},"nodeType":"YulFunctionCall","src":"12173:14:6"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12163:6:6"}]},{"nodeType":"YulAssignment","src":"12204:31:6","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12221:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12232:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12217:3:6"},"nodeType":"YulFunctionCall","src":"12217:18:6"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12204:9:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12052:1:6"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12055:7:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12049:2:6"},"nodeType":"YulFunctionCall","src":"12049:14:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12064:21:6","statements":[{"nodeType":"YulAssignment","src":"12066:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12075:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"12078:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12071:3:6"},"nodeType":"YulFunctionCall","src":"12071:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12066:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"12045:3:6","statements":[]},"src":"12041:208:6"},{"body":{"nodeType":"YulBlock","src":"12285:156:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12303:43:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12330:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12335:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12326:3:6"},"nodeType":"YulFunctionCall","src":"12326:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12320:5:6"},"nodeType":"YulFunctionCall","src":"12320:26:6"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12307:9:6","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12370:6:6"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12397:9:6"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12412:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12420:4:6","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12408:3:6"},"nodeType":"YulFunctionCall","src":"12408:17:6"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"12378:18:6"},"nodeType":"YulFunctionCall","src":"12378:48:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12363:6:6"},"nodeType":"YulFunctionCall","src":"12363:64:6"},"nodeType":"YulExpressionStatement","src":"12363:64:6"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12268:7:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"12277:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12265:2:6"},"nodeType":"YulFunctionCall","src":"12265:19:6"},"nodeType":"YulIf","src":"12262:179:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12461:4:6"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12475:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"12483:1:6","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12471:3:6"},"nodeType":"YulFunctionCall","src":"12471:14:6"},{"kind":"number","nodeType":"YulLiteral","src":"12487:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12467:3:6"},"nodeType":"YulFunctionCall","src":"12467:22:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12454:6:6"},"nodeType":"YulFunctionCall","src":"12454:36:6"},"nodeType":"YulExpressionStatement","src":"12454:36:6"}]},"nodeType":"YulCase","src":"11882:618:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11887:1:6","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12517:222:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12531:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12544:1:6","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12535:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"12568:67:6","statements":[{"nodeType":"YulAssignment","src":"12586:35:6","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12605:3:6"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12610:9:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12601:3:6"},"nodeType":"YulFunctionCall","src":"12601:19:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12595:5:6"},"nodeType":"YulFunctionCall","src":"12595:26:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12586:5:6"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12561:6:6"},"nodeType":"YulIf","src":"12558:77:6"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12655:4:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12714:5:6"},{"name":"newLen","nodeType":"YulIdentifier","src":"12721:6:6"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12661:52:6"},"nodeType":"YulFunctionCall","src":"12661:67:6"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12648:6:6"},"nodeType":"YulFunctionCall","src":"12648:81:6"},"nodeType":"YulExpressionStatement","src":"12648:81:6"}]},"nodeType":"YulCase","src":"12509:230:6","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11862:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11870:2:6","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11859:2:6"},"nodeType":"YulFunctionCall","src":"11859:14:6"},"nodeType":"YulSwitch","src":"11852:887:6"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11431:4:6","type":""},{"name":"src","nodeType":"YulTypedName","src":"11437:3:6","type":""}],"src":"11350:1395:6"},{"body":{"nodeType":"YulBlock","src":"12864:742:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12874:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12897:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12891:5:6"},"nodeType":"YulFunctionCall","src":"12891:12:6"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"12878:9:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12912:50:6","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12952:9:6"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12926:25:6"},"nodeType":"YulFunctionCall","src":"12926:36:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12916:6:6","type":""}]},{"nodeType":"YulAssignment","src":"12971:78:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13037:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"13042:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12978:58:6"},"nodeType":"YulFunctionCall","src":"12978:71:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12971:3:6"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13098:157:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13151:3:6"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13160:9:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13175:4:6","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13171:3:6"},"nodeType":"YulFunctionCall","src":"13171:9:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13156:3:6"},"nodeType":"YulFunctionCall","src":"13156:25:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13144:6:6"},"nodeType":"YulFunctionCall","src":"13144:38:6"},"nodeType":"YulExpressionStatement","src":"13144:38:6"},{"nodeType":"YulAssignment","src":"13195:50:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13206:3:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13215:4:6","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13235:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13228:6:6"},"nodeType":"YulFunctionCall","src":"13228:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13221:6:6"},"nodeType":"YulFunctionCall","src":"13221:22:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13211:3:6"},"nodeType":"YulFunctionCall","src":"13211:33:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13202:3:6"},"nodeType":"YulFunctionCall","src":"13202:43:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13195:3:6"}]}]},"nodeType":"YulCase","src":"13091:164:6","value":{"kind":"number","nodeType":"YulLiteral","src":"13096:1:6","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"13271:329:6","statements":[{"nodeType":"YulVariableDeclaration","src":"13316:53:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13363:5:6"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13331:31:6"},"nodeType":"YulFunctionCall","src":"13331:38:6"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"13320:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13382:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"13391:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13386:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"13449:110:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13478:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"13483:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13474:3:6"},"nodeType":"YulFunctionCall","src":"13474:11:6"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13493:7:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13487:5:6"},"nodeType":"YulFunctionCall","src":"13487:14:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13467:6:6"},"nodeType":"YulFunctionCall","src":"13467:35:6"},"nodeType":"YulExpressionStatement","src":"13467:35:6"},{"nodeType":"YulAssignment","src":"13519:26:6","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13534:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"13543:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13530:3:6"},"nodeType":"YulFunctionCall","src":"13530:15:6"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"13519:7:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13416:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"13419:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13413:2:6"},"nodeType":"YulFunctionCall","src":"13413:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13427:21:6","statements":[{"nodeType":"YulAssignment","src":"13429:17:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13438:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"13441:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13434:3:6"},"nodeType":"YulFunctionCall","src":"13434:12:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13429:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"13409:3:6","statements":[]},"src":"13405:154:6"},{"nodeType":"YulAssignment","src":"13572:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13583:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"13588:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13579:3:6"},"nodeType":"YulFunctionCall","src":"13579:11:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13572:3:6"}]}]},"nodeType":"YulCase","src":"13264:336:6","value":{"kind":"number","nodeType":"YulLiteral","src":"13269:1:6","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"13069:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13080:1:6","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13065:3:6"},"nodeType":"YulFunctionCall","src":"13065:17:6"},"nodeType":"YulSwitch","src":"13058:542:6"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12845:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12852:3:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12860:3:6","type":""}],"src":"12775:831:6"},{"body":{"nodeType":"YulBlock","src":"13727:192:6","statements":[{"nodeType":"YulAssignment","src":"13737:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13749:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13760:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13745:3:6"},"nodeType":"YulFunctionCall","src":"13745:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13737:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13784:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13795:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13780:3:6"},"nodeType":"YulFunctionCall","src":"13780:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13803:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"13809:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13799:3:6"},"nodeType":"YulFunctionCall","src":"13799:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13773:6:6"},"nodeType":"YulFunctionCall","src":"13773:47:6"},"nodeType":"YulExpressionStatement","src":"13773:47:6"},{"nodeType":"YulAssignment","src":"13829:83:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13898:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"13907:4:6"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13837:60:6"},"nodeType":"YulFunctionCall","src":"13837:75:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13829:4:6"}]}]},"name":"abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13699:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13711:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13722:4:6","type":""}],"src":"13612:307:6"},{"body":{"nodeType":"YulBlock","src":"13969:147:6","statements":[{"nodeType":"YulAssignment","src":"13979:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14002:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13984:17:6"},"nodeType":"YulFunctionCall","src":"13984:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13979:1:6"}]},{"nodeType":"YulAssignment","src":"14013:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14036:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14018:17:6"},"nodeType":"YulFunctionCall","src":"14018:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14013:1:6"}]},{"nodeType":"YulAssignment","src":"14047:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14058:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"14061:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14054:3:6"},"nodeType":"YulFunctionCall","src":"14054:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14047:3:6"}]},{"body":{"nodeType":"YulBlock","src":"14087:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14089:16:6"},"nodeType":"YulFunctionCall","src":"14089:18:6"},"nodeType":"YulExpressionStatement","src":"14089:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14079:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"14082:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14076:2:6"},"nodeType":"YulFunctionCall","src":"14076:10:6"},"nodeType":"YulIf","src":"14073:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13956:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"13959:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13965:3:6","type":""}],"src":"13925:191:6"},{"body":{"nodeType":"YulBlock","src":"14228:127:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14250:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"14258:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14246:3:6"},"nodeType":"YulFunctionCall","src":"14246:14:6"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"14262:34:6","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14239:6:6"},"nodeType":"YulFunctionCall","src":"14239:58:6"},"nodeType":"YulExpressionStatement","src":"14239:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14318:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14314:3:6"},"nodeType":"YulFunctionCall","src":"14314:15:6"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"14331:16:6","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14307:6:6"},"nodeType":"YulFunctionCall","src":"14307:41:6"},"nodeType":"YulExpressionStatement","src":"14307:41:6"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14220:6:6","type":""}],"src":"14122:233:6"},{"body":{"nodeType":"YulBlock","src":"14507:220:6","statements":[{"nodeType":"YulAssignment","src":"14517:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14583:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14588:2:6","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14524:58:6"},"nodeType":"YulFunctionCall","src":"14524:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14517:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14689:3:6"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"14600:88:6"},"nodeType":"YulFunctionCall","src":"14600:93:6"},"nodeType":"YulExpressionStatement","src":"14600:93:6"},{"nodeType":"YulAssignment","src":"14702:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14713:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14718:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14709:3:6"},"nodeType":"YulFunctionCall","src":"14709:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14702:3:6"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14495:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14503:3:6","type":""}],"src":"14361:366:6"},{"body":{"nodeType":"YulBlock","src":"14904:248:6","statements":[{"nodeType":"YulAssignment","src":"14914:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14926:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14937:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14922:3:6"},"nodeType":"YulFunctionCall","src":"14922:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14914:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14961:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14972:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14957:3:6"},"nodeType":"YulFunctionCall","src":"14957:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14980:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"14986:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14976:3:6"},"nodeType":"YulFunctionCall","src":"14976:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14950:6:6"},"nodeType":"YulFunctionCall","src":"14950:47:6"},"nodeType":"YulExpressionStatement","src":"14950:47:6"},{"nodeType":"YulAssignment","src":"15006:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15140:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15014:124:6"},"nodeType":"YulFunctionCall","src":"15014:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15006:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14884:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14899:4:6","type":""}],"src":"14733:419:6"},{"body":{"nodeType":"YulBlock","src":"15211:32:6","statements":[{"nodeType":"YulAssignment","src":"15221:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"15232:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15221:7:6"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15193:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15203:7:6","type":""}],"src":"15158:85:6"},{"body":{"nodeType":"YulBlock","src":"15292:43:6","statements":[{"nodeType":"YulAssignment","src":"15302:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15317:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"15324:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15313:3:6"},"nodeType":"YulFunctionCall","src":"15313:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15302:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15274:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15284:7:6","type":""}],"src":"15249:86:6"},{"body":{"nodeType":"YulBlock","src":"15407:88:6","statements":[{"nodeType":"YulAssignment","src":"15417:72:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15481:5:6"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"15455:25:6"},"nodeType":"YulFunctionCall","src":"15455:32:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"15446:8:6"},"nodeType":"YulFunctionCall","src":"15446:42:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"15430:15:6"},"nodeType":"YulFunctionCall","src":"15430:59:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15417:9:6"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15387:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15397:9:6","type":""}],"src":"15341:154:6"},{"body":{"nodeType":"YulBlock","src":"15572:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15589:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15631:5:6"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"15594:36:6"},"nodeType":"YulFunctionCall","src":"15594:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15582:6:6"},"nodeType":"YulFunctionCall","src":"15582:56:6"},"nodeType":"YulExpressionStatement","src":"15582:56:6"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15560:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15567:3:6","type":""}],"src":"15501:143:6"},{"body":{"nodeType":"YulBlock","src":"15754:130:6","statements":[{"nodeType":"YulAssignment","src":"15764:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15776:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15787:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15772:3:6"},"nodeType":"YulFunctionCall","src":"15772:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15764:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15850:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15863:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15874:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15859:3:6"},"nodeType":"YulFunctionCall","src":"15859:17:6"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"15800:49:6"},"nodeType":"YulFunctionCall","src":"15800:77:6"},"nodeType":"YulExpressionStatement","src":"15800:77:6"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15726:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15738:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15749:4:6","type":""}],"src":"15650:234:6"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Name: \")\n\n    }\n\n    function abi_encode_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8(pos)\n        end := add(pos, 6)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_3eea56357be33af31acc41a284cb0855ea206e332f0afdc2ec65b757e5e257a8_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_string_storage__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063552410771161005b57806355241077146100c8578063c47f0027146100e4578063d09de08a14610100578063fe4b84df1461010a5761007d565b806317d7de7c146100825780632e64cec1146100a057806345219b0e146100be575b600080fd5b61008a610126565b6040516100979190610411565b60405180910390f35b6100a861014e565b6040516100b5919061044c565b60405180910390f35b6100c6610158565b005b6100e260048036038101906100dd91906104a7565b610176565b005b6100fe60048036038101906100f99190610609565b6101b7565b005b610108610202565b005b610124600480360381019061011f91906104a7565b610220565b005b6060600260405160200161013a91906107a1565b604051602081830303815290604052905090565b6000600154905090565b610174600161016561014e565b61016f91906107f2565b610176565b565b806001819055507f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c59816040516101ac919061044c565b60405180910390a150565b80600290816101c691906109bd565b507f4737457377f528cc8afd815f73ecb8b05df80d047dbffc41c17750a4033592bc60026040516101f79190610b13565b60405180910390a150565b61021e600161020f61014e565b6102199190610b35565b610176565b565b60008060019054906101000a900460ff161590508080156102515750600160008054906101000a900460ff1660ff16105b8061027e57506102603061035e565b15801561027d5750600160008054906101000a900460ff1660ff16145b5b6102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610bdb565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156102fa576001600060016101000a81548160ff0219169083151502179055505b81600181905550801561035a5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103519190610c43565b60405180910390a15b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103bb5780820151818401526020810190506103a0565b60008484015250505050565b6000601f19601f8301169050919050565b60006103e382610381565b6103ed818561038c565b93506103fd81856020860161039d565b610406816103c7565b840191505092915050565b6000602082019050818103600083015261042b81846103d8565b905092915050565b6000819050919050565b61044681610433565b82525050565b6000602082019050610461600083018461043d565b92915050565b6000604051905090565b600080fd5b600080fd5b61048481610433565b811461048f57600080fd5b50565b6000813590506104a18161047b565b92915050565b6000602082840312156104bd576104bc610471565b5b60006104cb84828501610492565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610516826103c7565b810181811067ffffffffffffffff82111715610535576105346104de565b5b80604052505050565b6000610548610467565b9050610554828261050d565b919050565b600067ffffffffffffffff821115610574576105736104de565b5b61057d826103c7565b9050602081019050919050565b82818337600083830152505050565b60006105ac6105a784610559565b61053e565b9050828152602081018484840111156105c8576105c76104d9565b5b6105d384828561058a565b509392505050565b600082601f8301126105f0576105ef6104d4565b5b8135610600848260208601610599565b91505092915050565b60006020828403121561061f5761061e610471565b5b600082013567ffffffffffffffff81111561063d5761063c610476565b5b610649848285016105db565b91505092915050565b600081905092915050565b7f4e616d653a200000000000000000000000000000000000000000000000000000600082015250565b6000610693600683610652565b915061069e8261065d565b600682019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f057607f821691505b602082108103610703576107026106a9565b5b50919050565b60008190508160005260206000209050919050565b6000815461072b816106d8565b6107358186610652565b94506001821660008114610750576001811461076557610798565b60ff1983168652811515820286019350610798565b61076e85610709565b60005b8381101561079057815481890152600182019150602081019050610771565b838801955050505b50505092915050565b60006107ac82610686565b91506107b8828461071e565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107fd82610433565b915061080883610433565b92508282039050818111156108205761081f6107c3565b5b92915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610836565b61087d8683610836565b95508019841693508086168417925050509392505050565b6000819050919050565b60006108ba6108b56108b084610433565b610895565b610433565b9050919050565b6000819050919050565b6108d48361089f565b6108e86108e0826108c1565b848454610843565b825550505050565b600090565b6108fd6108f0565b6109088184846108cb565b505050565b5b8181101561092c576109216000826108f5565b60018101905061090e565b5050565b601f8211156109715761094281610709565b61094b84610826565b8101602085101561095a578190505b61096e61096685610826565b83018261090d565b50505b505050565b600082821c905092915050565b600061099460001984600802610976565b1980831691505092915050565b60006109ad8383610983565b9150826002028217905092915050565b6109c682610381565b67ffffffffffffffff8111156109df576109de6104de565b5b6109e982546106d8565b6109f4828285610930565b600060209050601f831160018114610a275760008415610a15578287015190505b610a1f85826109a1565b865550610a87565b601f198416610a3586610709565b60005b82811015610a5d57848901518255600182019150602085019450602081019050610a38565b86831015610a7a5784890151610a76601f891682610983565b8355505b6001600288020188555050505b505050505050565b60008154610a9c816106d8565b610aa6818661038c565b94506001821660008114610ac15760018114610ad757610b0a565b60ff198316865281151560200286019350610b0a565b610ae085610709565b60005b83811015610b0257815481890152600182019150602081019050610ae3565b808801955050505b50505092915050565b60006020820190508181036000830152610b2d8184610a8f565b905092915050565b6000610b4082610433565b9150610b4b83610433565b9250828201905080821115610b6357610b626107c3565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610bc5602e8361038c565b9150610bd082610b69565b604082019050919050565b60006020820190508181036000830152610bf481610bb8565b9050919050565b6000819050919050565b600060ff82169050919050565b6000610c2d610c28610c2384610bfb565b610895565b610c05565b9050919050565b610c3d81610c12565b82525050565b6000602082019050610c586000830184610c34565b9291505056fea2646970667358221220a2a9040a79da97542574ef4d4a8dcc53b0df2cfaddb87c0e8faf340669135fd364736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55241077 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E64CEC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x45219B0E EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x14E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH2 0x1B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x202 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x220 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174 PUSH1 0x1 PUSH2 0x165 PUSH2 0x14E JUMP JUMPDEST PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x93FE6D397C74FDF1402A8B72E47B68512F0510D7B98A4BC4CBDF6AC7108B3C59 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x9BD JUMP JUMPDEST POP PUSH32 0x4737457377F528CC8AFD815F73ECB8B05DF80D047DBFFC41C17750A4033592BC PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x21E PUSH1 0x1 PUSH2 0x20F PUSH2 0x14E JUMP JUMPDEST PUSH2 0x219 SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x176 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x251 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x27E JUMPI POP PUSH2 0x260 ADDRESS PUSH2 0x35E JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E3 DUP3 PUSH2 0x381 JUMP JUMPDEST PUSH2 0x3ED DUP2 DUP6 PUSH2 0x38C JUMP JUMPDEST SWAP4 POP PUSH2 0x3FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39D JUMP JUMPDEST PUSH2 0x406 DUP2 PUSH2 0x3C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42B DUP2 DUP5 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x484 DUP2 PUSH2 0x433 JUMP JUMPDEST DUP2 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4A1 DUP2 PUSH2 0x47B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x471 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CB DUP5 DUP3 DUP6 ADD PUSH2 0x492 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x516 DUP3 PUSH2 0x3C7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x535 JUMPI PUSH2 0x534 PUSH2 0x4DE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x548 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x554 DUP3 DUP3 PUSH2 0x50D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x4DE JUMP JUMPDEST JUMPDEST PUSH2 0x57D DUP3 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC PUSH2 0x5A7 DUP5 PUSH2 0x559 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5C8 JUMPI PUSH2 0x5C7 PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST PUSH2 0x5D3 DUP5 DUP3 DUP6 PUSH2 0x58A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x600 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x61F JUMPI PUSH2 0x61E PUSH2 0x471 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x476 JUMP JUMPDEST JUMPDEST PUSH2 0x649 DUP5 DUP3 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E616D653A200000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693 PUSH1 0x6 DUP4 PUSH2 0x652 JUMP JUMPDEST SWAP2 POP PUSH2 0x69E DUP3 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0x6A9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x72B DUP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x735 DUP2 DUP7 PUSH2 0x652 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x750 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x765 JUMPI PUSH2 0x798 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x798 JUMP JUMPDEST PUSH2 0x76E DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x790 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x771 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AC DUP3 PUSH2 0x686 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 DUP3 DUP5 PUSH2 0x71E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7FD DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0x808 DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x873 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x836 JUMP JUMPDEST PUSH2 0x87D DUP7 DUP4 PUSH2 0x836 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BA PUSH2 0x8B5 PUSH2 0x8B0 DUP5 PUSH2 0x433 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D4 DUP4 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x8E8 PUSH2 0x8E0 DUP3 PUSH2 0x8C1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x843 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x8F0 JUMP JUMPDEST PUSH2 0x908 DUP2 DUP5 DUP5 PUSH2 0x8CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x92C JUMPI PUSH2 0x921 PUSH1 0x0 DUP3 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x90E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x971 JUMPI PUSH2 0x942 DUP2 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x94B DUP5 PUSH2 0x826 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x95A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x96E PUSH2 0x966 DUP6 PUSH2 0x826 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x90D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x994 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x976 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP4 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9C6 DUP3 PUSH2 0x381 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x4DE JUMP JUMPDEST JUMPDEST PUSH2 0x9E9 DUP3 SLOAD PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x9F4 DUP3 DUP3 DUP6 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA27 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA15 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA1F DUP6 DUP3 PUSH2 0x9A1 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA35 DUP7 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA5D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA38 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA7A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA76 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x983 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0xA9C DUP2 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xAA6 DUP2 DUP7 PUSH2 0x38C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0xAC1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xAD7 JUMPI PUSH2 0xB0A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0xB0A JUMP JUMPDEST PUSH2 0xAE0 DUP6 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB02 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE3 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2D DUP2 DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x433 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x433 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB63 JUMPI PUSH2 0xB62 PUSH2 0x7C3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC5 PUSH1 0x2E DUP4 PUSH2 0x38C JUMP JUMPDEST SWAP2 POP PUSH2 0xBD0 DUP3 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBF4 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2D PUSH2 0xC28 PUSH2 0xC23 DUP5 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0xC12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xA9 DIV EXP PUSH26 0xDA97542574EF4D4A8DCC53B0DF2CFADDB87C0E8FAF340669135F 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"83:324:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;836:79:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:64:3;;;:::i;:::-;;689:113:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;180:106:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;390:67:3;;;:::i;:::-;;459:94:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;291:114:5;330:13;392:4;366:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;352:46;;291:114;:::o;836:79:2:-;877:7;903:5;;896:12;;836:79;:::o;497:64:3:-;532:22;552:1;541:10;:8;:10::i;:::-;:12;;;;:::i;:::-;532:8;:22::i;:::-;497:64::o;689:113:2:-;750:8;742:5;:16;;;;773:22;786:8;773:22;;;;;;:::i;:::-;;;;;;;;689:113;:::o;180:106:5:-;242:5;235:4;:12;;;;;;:::i;:::-;;262:17;274:4;262:17;;;;;;:::i;:::-;;;;;;;;180:106;:::o;390:67:3:-;428:22;448:1;437:10;:8;:10::i;:::-;:12;;;;:::i;:::-;428:8;:22::i;:::-;390:67::o;459:94:2:-;3268:19:0;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;536:10:2::1;528:5;:18;;;;3640:14:0::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;459:94:2;:::o;1186:320:1:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:75::-;1817:6;1850:2;1844:9;1834:19;;1784:75;:::o;1865:117::-;1974:1;1971;1964:12;1988:117;2097:1;2094;2087:12;2111:122;2184:24;2202:5;2184:24;:::i;:::-;2177:5;2174:35;2164:63;;2223:1;2220;2213:12;2164:63;2111:122;:::o;2239:139::-;2285:5;2323:6;2310:20;2301:29;;2339:33;2366:5;2339:33;:::i;:::-;2239:139;;;;:::o;2384:329::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:53;2688:7;2679:6;2668:9;2664:22;2643:53;:::i;:::-;2633:63;;2589:117;2384:329;;;;:::o;2719:117::-;2828:1;2825;2818:12;2842:117;2951:1;2948;2941:12;2965:180;3013:77;3010:1;3003:88;3110:4;3107:1;3100:15;3134:4;3131:1;3124:15;3151:281;3234:27;3256:4;3234:27;:::i;:::-;3226:6;3222:40;3364:6;3352:10;3349:22;3328:18;3316:10;3313:34;3310:62;3307:88;;;3375:18;;:::i;:::-;3307:88;3415:10;3411:2;3404:22;3194:238;3151:281;;:::o;3438:129::-;3472:6;3499:20;;:::i;:::-;3489:30;;3528:33;3556:4;3548:6;3528:33;:::i;:::-;3438:129;;;:::o;3573:308::-;3635:4;3725:18;3717:6;3714:30;3711:56;;;3747:18;;:::i;:::-;3711:56;3785:29;3807:6;3785:29;:::i;:::-;3777:37;;3869:4;3863;3859:15;3851:23;;3573:308;;;:::o;3887:146::-;3984:6;3979:3;3974;3961:30;4025:1;4016:6;4011:3;4007:16;4000:27;3887:146;;;:::o;4039:425::-;4117:5;4142:66;4158:49;4200:6;4158:49;:::i;:::-;4142:66;:::i;:::-;4133:75;;4231:6;4224:5;4217:21;4269:4;4262:5;4258:16;4307:3;4298:6;4293:3;4289:16;4286:25;4283:112;;;4314:79;;:::i;:::-;4283:112;4404:54;4451:6;4446:3;4441;4404:54;:::i;:::-;4123:341;4039:425;;;;;:::o;4484:340::-;4540:5;4589:3;4582:4;4574:6;4570:17;4566:27;4556:122;;4597:79;;:::i;:::-;4556:122;4714:6;4701:20;4739:79;4814:3;4806:6;4799:4;4791:6;4787:17;4739:79;:::i;:::-;4730:88;;4546:278;4484:340;;;;:::o;4830:509::-;4899:6;4948:2;4936:9;4927:7;4923:23;4919:32;4916:119;;;4954:79;;:::i;:::-;4916:119;5102:1;5091:9;5087:17;5074:31;5132:18;5124:6;5121:30;5118:117;;;5154:79;;:::i;:::-;5118:117;5259:63;5314:7;5305:6;5294:9;5290:22;5259:63;:::i;:::-;5249:73;;5045:287;4830:509;;;;:::o;5345:148::-;5447:11;5484:3;5469:18;;5345:148;;;;:::o;5499:156::-;5639:8;5635:1;5627:6;5623:14;5616:32;5499:156;:::o;5661:400::-;5821:3;5842:84;5924:1;5919:3;5842:84;:::i;:::-;5835:91;;5935:93;6024:3;5935:93;:::i;:::-;6053:1;6048:3;6044:11;6037:18;;5661:400;;;:::o;6067:180::-;6115:77;6112:1;6105:88;6212:4;6209:1;6202:15;6236:4;6233:1;6226:15;6253:320;6297:6;6334:1;6328:4;6324:12;6314:22;;6381:1;6375:4;6371:12;6402:18;6392:81;;6458:4;6450:6;6446:17;6436:27;;6392:81;6520:2;6512:6;6509:14;6489:18;6486:38;6483:84;;6539:18;;:::i;:::-;6483:84;6304:269;6253:320;;;:::o;6579:141::-;6628:4;6651:3;6643:11;;6674:3;6671:1;6664:14;6708:4;6705:1;6695:18;6687:26;;6579:141;;;:::o;6750:874::-;6853:3;6890:5;6884:12;6919:36;6945:9;6919:36;:::i;:::-;6971:89;7053:6;7048:3;6971:89;:::i;:::-;6964:96;;7091:1;7080:9;7076:17;7107:1;7102:166;;;;7282:1;7277:341;;;;7069:549;;7102:166;7186:4;7182:9;7171;7167:25;7162:3;7155:38;7248:6;7241:14;7234:22;7226:6;7222:35;7217:3;7213:45;7206:52;;7102:166;;7277:341;7344:38;7376:5;7344:38;:::i;:::-;7404:1;7418:154;7432:6;7429:1;7426:13;7418:154;;;7506:7;7500:14;7496:1;7491:3;7487:11;7480:35;7556:1;7547:7;7543:15;7532:26;;7454:4;7451:1;7447:12;7442:17;;7418:154;;;7601:6;7596:3;7592:16;7585:23;;7284:334;;7069:549;;6857:767;;6750:874;;;;:::o;7630:535::-;7860:3;7882:148;8026:3;7882:148;:::i;:::-;7875:155;;8047:92;8135:3;8126:6;8047:92;:::i;:::-;8040:99;;8156:3;8149:10;;7630:535;;;;:::o;8171:180::-;8219:77;8216:1;8209:88;8316:4;8313:1;8306:15;8340:4;8337:1;8330:15;8357:194;8397:4;8417:20;8435:1;8417:20;:::i;:::-;8412:25;;8451:20;8469:1;8451:20;:::i;:::-;8446:25;;8495:1;8492;8488:9;8480:17;;8519:1;8513:4;8510:11;8507:37;;;8524:18;;:::i;:::-;8507:37;8357:194;;;;:::o;8557:93::-;8594:6;8641:2;8636;8629:5;8625:14;8621:23;8611:33;;8557:93;;;:::o;8656:107::-;8700:8;8750:5;8744:4;8740:16;8719:37;;8656:107;;;;:::o;8769:393::-;8838:6;8888:1;8876:10;8872:18;8911:97;8941:66;8930:9;8911:97;:::i;:::-;9029:39;9059:8;9048:9;9029:39;:::i;:::-;9017:51;;9101:4;9097:9;9090:5;9086:21;9077:30;;9150:4;9140:8;9136:19;9129:5;9126:30;9116:40;;8845:317;;8769:393;;;;;:::o;9168:60::-;9196:3;9217:5;9210:12;;9168:60;;;:::o;9234:142::-;9284:9;9317:53;9335:34;9344:24;9362:5;9344:24;:::i;:::-;9335:34;:::i;:::-;9317:53;:::i;:::-;9304:66;;9234:142;;;:::o;9382:75::-;9425:3;9446:5;9439:12;;9382:75;;;:::o;9463:269::-;9573:39;9604:7;9573:39;:::i;:::-;9634:91;9683:41;9707:16;9683:41;:::i;:::-;9675:6;9668:4;9662:11;9634:91;:::i;:::-;9628:4;9621:105;9539:193;9463:269;;;:::o;9738:73::-;9783:3;9738:73;:::o;9817:189::-;9894:32;;:::i;:::-;9935:65;9993:6;9985;9979:4;9935:65;:::i;:::-;9870:136;9817:189;;:::o;10012:186::-;10072:120;10089:3;10082:5;10079:14;10072:120;;;10143:39;10180:1;10173:5;10143:39;:::i;:::-;10116:1;10109:5;10105:13;10096:22;;10072:120;;;10012:186;;:::o;10204:543::-;10305:2;10300:3;10297:11;10294:446;;;10339:38;10371:5;10339:38;:::i;:::-;10423:29;10441:10;10423:29;:::i;:::-;10413:8;10409:44;10606:2;10594:10;10591:18;10588:49;;;10627:8;10612:23;;10588:49;10650:80;10706:22;10724:3;10706:22;:::i;:::-;10696:8;10692:37;10679:11;10650:80;:::i;:::-;10309:431;;10294:446;10204:543;;;:::o;10753:117::-;10807:8;10857:5;10851:4;10847:16;10826:37;;10753:117;;;;:::o;10876:169::-;10920:6;10953:51;11001:1;10997:6;10989:5;10986:1;10982:13;10953:51;:::i;:::-;10949:56;11034:4;11028;11024:15;11014:25;;10927:118;10876:169;;;;:::o;11050:295::-;11126:4;11272:29;11297:3;11291:4;11272:29;:::i;:::-;11264:37;;11334:3;11331:1;11327:11;11321:4;11318:21;11310:29;;11050:295;;;;:::o;11350:1395::-;11467:37;11500:3;11467:37;:::i;:::-;11569:18;11561:6;11558:30;11555:56;;;11591:18;;:::i;:::-;11555:56;11635:38;11667:4;11661:11;11635:38;:::i;:::-;11720:67;11780:6;11772;11766:4;11720:67;:::i;:::-;11814:1;11838:4;11825:17;;11870:2;11862:6;11859:14;11887:1;11882:618;;;;12544:1;12561:6;12558:77;;;12610:9;12605:3;12601:19;12595:26;12586:35;;12558:77;12661:67;12721:6;12714:5;12661:67;:::i;:::-;12655:4;12648:81;12517:222;11852:887;;11882:618;11934:4;11930:9;11922:6;11918:22;11968:37;12000:4;11968:37;:::i;:::-;12027:1;12041:208;12055:7;12052:1;12049:14;12041:208;;;12134:9;12129:3;12125:19;12119:26;12111:6;12104:42;12185:1;12177:6;12173:14;12163:24;;12232:2;12221:9;12217:18;12204:31;;12078:4;12075:1;12071:12;12066:17;;12041:208;;;12277:6;12268:7;12265:19;12262:179;;;12335:9;12330:3;12326:19;12320:26;12378:48;12420:4;12412:6;12408:17;12397:9;12378:48;:::i;:::-;12370:6;12363:64;12285:156;12262:179;12487:1;12483;12475:6;12471:14;12467:22;12461:4;12454:36;11889:611;;;11852:887;;11442:1303;;;11350:1395;;:::o;12775:831::-;12860:3;12897:5;12891:12;12926:36;12952:9;12926:36;:::i;:::-;12978:71;13042:6;13037:3;12978:71;:::i;:::-;12971:78;;13080:1;13069:9;13065:17;13096:1;13091:164;;;;13269:1;13264:336;;;;13058:542;;13091:164;13175:4;13171:9;13160;13156:25;13151:3;13144:38;13235:6;13228:14;13221:22;13215:4;13211:33;13206:3;13202:43;13195:50;;13091:164;;13264:336;13331:38;13363:5;13331:38;:::i;:::-;13391:1;13405:154;13419:6;13416:1;13413:13;13405:154;;;13493:7;13487:14;13483:1;13478:3;13474:11;13467:35;13543:1;13534:7;13530:15;13519:26;;13441:4;13438:1;13434:12;13429:17;;13405:154;;;13588:1;13583:3;13579:11;13572:18;;13271:329;;13058:542;;12864:742;;12775:831;;;;:::o;13612:307::-;13722:4;13760:2;13749:9;13745:18;13737:26;;13809:9;13803:4;13799:20;13795:1;13784:9;13780:17;13773:47;13837:75;13907:4;13898:6;13837:75;:::i;:::-;13829:83;;13612:307;;;;:::o;13925:191::-;13965:3;13984:20;14002:1;13984:20;:::i;:::-;13979:25;;14018:20;14036:1;14018:20;:::i;:::-;14013:25;;14061:1;14058;14054:9;14047:16;;14082:3;14079:1;14076:10;14073:36;;;14089:18;;:::i;:::-;14073:36;13925:191;;;;:::o;14122:233::-;14262:34;14258:1;14250:6;14246:14;14239:58;14331:16;14326:2;14318:6;14314:15;14307:41;14122:233;:::o;14361:366::-;14503:3;14524:67;14588:2;14583:3;14524:67;:::i;:::-;14517:74;;14600:93;14689:3;14600:93;:::i;:::-;14718:2;14713:3;14709:12;14702:19;;14361:366;;;:::o;14733:419::-;14899:4;14937:2;14926:9;14922:18;14914:26;;14986:9;14980:4;14976:20;14972:1;14961:9;14957:17;14950:47;15014:131;15140:4;15014:131;:::i;:::-;15006:139;;14733:419;;;:::o;15158:85::-;15203:7;15232:5;15221:16;;15158:85;;;:::o;15249:86::-;15284:7;15324:4;15317:5;15313:16;15302:27;;15249:86;;;:::o;15341:154::-;15397:9;15430:59;15446:42;15455:32;15481:5;15455:32;:::i;:::-;15446:42;:::i;:::-;15430:59;:::i;:::-;15417:72;;15341:154;;;:::o;15501:143::-;15594:43;15631:5;15594:43;:::i;:::-;15589:3;15582:56;15501:143;;:::o;15650:234::-;15749:4;15787:2;15776:9;15772:18;15764:26;;15800:77;15874:1;15863:9;15859:17;15850:6;15800:77;:::i;:::-;15650:234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"644000","executionCost":"676","totalCost":"644676"},"external":{"getName()":"infinite","increment()":"infinite","initialize(uint256)":"106091","reduce()":"infinite","retrieve()":"2460","setName(string)":"infinite","setValue(uint256)":"infinite"}},"methodIdentifiers":{"getName()":"17d7de7c","increment()":"d09de08a","initialize(uint256)":"fe4b84df","reduce()":"45219b0e","retrieve()":"2e64cec1","setName(string)":"c47f0027","setValue(uint256)":"55241077"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reduce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaharaV4.sol\":\"SaharaV4\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"contracts/Sahara.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract Sahara is Initializable {\\n    \\n     uint256 private value;\\n\\n    //\\u521d\\u59cb\\u5316\\u51fd\\u6570\\n    function initialize(uint256 _initValue) public initializer {\\n        value = _initValue;\\n    }\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    // Stores a new value in the contract\\n    function setValue(uint256 newValue) public {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last value\\n    function retrieve() public view returns (uint256) {\\n        return value;\\n    }\\n}\",\"keccak256\":\"0xcb964142543a33ca3aa3048c99e8aad62e0e7326d972e8c039dec4ef13fdbe1b\",\"license\":\"MIT\"},\"contracts/SaharaV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Sahara.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract SaharaV2 is Sahara {\\n    \\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u53ef\\u4ee5\\u81ea\\u589e\\u7684\\u51fd\\u6570\\n    function increment() public {\\n        setValue(retrieve()+1);\\n    }\\n\\n    //\\u589e\\u52a0\\u4e00\\u4e2a\\u81ea\\u51cf\\u7684\\u51fd\\u6570\\n    function reduce() public {\\n        setValue(retrieve()-1);\\n    }\\n}\",\"keccak256\":\"0x8c34247e0685af7f50f585401a54eeb0d8d1b457f459c6ec4b3722830f0109f6\",\"license\":\"MIT\"},\"contracts/SaharaV4.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./SaharaV2.sol\\\";\\n\\ncontract SaharaV4 is SaharaV2{\\n    string private name;\\n\\n    event NameChanged(string name);\\n    function setName(string memory _name) public {\\n        name = _name;\\n        emit NameChanged(name);\\n    }\\n\\n   function getName() public view returns(string memory){\\n      return string(abi.encodePacked(\\\"Name: \\\",name));\\n    }\\n}\",\"keccak256\":\"0xc4b708137a9e95e1a4e9855cfee48fe7e6f4abc5f28ae3fbded50ba958ed5d33\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/SaharaV4.sol:SaharaV4","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/SaharaV4.sol:SaharaV4","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":460,"contract":"contracts/SaharaV4.sol:SaharaV4","label":"value","offset":0,"slot":"1","type":"t_uint256"},{"astId":562,"contract":"contracts/SaharaV4.sol:SaharaV4","label":"name","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}